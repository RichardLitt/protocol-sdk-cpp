// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Transaction.proto

#include "Transaction.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_Transaction_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_Transaction_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_EntryRangeProof;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_Transaction_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_STTransactionEntry;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_Transaction_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_CFTransactionEntry;
}  // namespace protobuf_Transaction_2eproto
namespace protobuf_google_2fprotobuf_2ftimestamp_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fprotobuf_2ftimestamp_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Timestamp;
}  // namespace protobuf_google_2fprotobuf_2ftimestamp_2eproto
namespace Catalyst {
namespace Protocol {
namespace Transaction {
class TransactionBroadcastDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TransactionBroadcast>
      _instance;
} _TransactionBroadcast_default_instance_;
class STTransactionEntryDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<STTransactionEntry>
      _instance;
} _STTransactionEntry_default_instance_;
class CFTransactionEntryDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CFTransactionEntry>
      _instance;
} _CFTransactionEntry_default_instance_;
class EntryRangeProofDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<EntryRangeProof>
      _instance;
} _EntryRangeProof_default_instance_;
class CoinbaseEntryDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CoinbaseEntry>
      _instance;
} _CoinbaseEntry_default_instance_;
}  // namespace Transaction
}  // namespace Protocol
}  // namespace Catalyst
namespace protobuf_Transaction_2eproto {
static void InitDefaultsTransactionBroadcast() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Catalyst::Protocol::Transaction::_TransactionBroadcast_default_instance_;
    new (ptr) ::Catalyst::Protocol::Transaction::TransactionBroadcast();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Catalyst::Protocol::Transaction::TransactionBroadcast::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_TransactionBroadcast =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsTransactionBroadcast}, {
      &protobuf_google_2fprotobuf_2ftimestamp_2eproto::scc_info_Timestamp.base,
      &protobuf_Transaction_2eproto::scc_info_STTransactionEntry.base,
      &protobuf_Transaction_2eproto::scc_info_CFTransactionEntry.base,}};

static void InitDefaultsSTTransactionEntry() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Catalyst::Protocol::Transaction::_STTransactionEntry_default_instance_;
    new (ptr) ::Catalyst::Protocol::Transaction::STTransactionEntry();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Catalyst::Protocol::Transaction::STTransactionEntry::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_STTransactionEntry =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSTTransactionEntry}, {}};

static void InitDefaultsCFTransactionEntry() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Catalyst::Protocol::Transaction::_CFTransactionEntry_default_instance_;
    new (ptr) ::Catalyst::Protocol::Transaction::CFTransactionEntry();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Catalyst::Protocol::Transaction::CFTransactionEntry::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CFTransactionEntry =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCFTransactionEntry}, {
      &protobuf_Transaction_2eproto::scc_info_EntryRangeProof.base,}};

static void InitDefaultsEntryRangeProof() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Catalyst::Protocol::Transaction::_EntryRangeProof_default_instance_;
    new (ptr) ::Catalyst::Protocol::Transaction::EntryRangeProof();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Catalyst::Protocol::Transaction::EntryRangeProof::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_EntryRangeProof =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsEntryRangeProof}, {}};

static void InitDefaultsCoinbaseEntry() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Catalyst::Protocol::Transaction::_CoinbaseEntry_default_instance_;
    new (ptr) ::Catalyst::Protocol::Transaction::CoinbaseEntry();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Catalyst::Protocol::Transaction::CoinbaseEntry::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CoinbaseEntry =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCoinbaseEntry}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_TransactionBroadcast.base);
  ::google::protobuf::internal::InitSCC(&scc_info_STTransactionEntry.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CFTransactionEntry.base);
  ::google::protobuf::internal::InitSCC(&scc_info_EntryRangeProof.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CoinbaseEntry.base);
}

::google::protobuf::Metadata file_level_metadata[5];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Catalyst::Protocol::Transaction::TransactionBroadcast, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Catalyst::Protocol::Transaction::TransactionBroadcast, transactiontype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Catalyst::Protocol::Transaction::TransactionBroadcast, timestamp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Catalyst::Protocol::Transaction::TransactionBroadcast, transactionfees_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Catalyst::Protocol::Transaction::TransactionBroadcast, locktime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Catalyst::Protocol::Transaction::TransactionBroadcast, stentries_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Catalyst::Protocol::Transaction::TransactionBroadcast, cfentries_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Catalyst::Protocol::Transaction::TransactionBroadcast, signature_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Catalyst::Protocol::Transaction::TransactionBroadcast, init_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Catalyst::Protocol::Transaction::TransactionBroadcast, data_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Catalyst::Protocol::Transaction::TransactionBroadcast, from_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Catalyst::Protocol::Transaction::STTransactionEntry, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Catalyst::Protocol::Transaction::STTransactionEntry, pubkey_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Catalyst::Protocol::Transaction::STTransactionEntry, amount_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Catalyst::Protocol::Transaction::CFTransactionEntry, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Catalyst::Protocol::Transaction::CFTransactionEntry, pubkey_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Catalyst::Protocol::Transaction::CFTransactionEntry, pedersencommit_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Catalyst::Protocol::Transaction::CFTransactionEntry, entryrangeproofs_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Catalyst::Protocol::Transaction::EntryRangeProof, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Catalyst::Protocol::Transaction::EntryRangeProof, v_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Catalyst::Protocol::Transaction::EntryRangeProof, a_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Catalyst::Protocol::Transaction::EntryRangeProof, s_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Catalyst::Protocol::Transaction::EntryRangeProof, t1_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Catalyst::Protocol::Transaction::EntryRangeProof, t2_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Catalyst::Protocol::Transaction::EntryRangeProof, tau_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Catalyst::Protocol::Transaction::EntryRangeProof, mu_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Catalyst::Protocol::Transaction::EntryRangeProof, l_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Catalyst::Protocol::Transaction::EntryRangeProof, r_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Catalyst::Protocol::Transaction::EntryRangeProof, aprime0_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Catalyst::Protocol::Transaction::EntryRangeProof, bprime0_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Catalyst::Protocol::Transaction::EntryRangeProof, t_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Catalyst::Protocol::Transaction::CoinbaseEntry, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Catalyst::Protocol::Transaction::CoinbaseEntry, version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Catalyst::Protocol::Transaction::CoinbaseEntry, pubkey_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Catalyst::Protocol::Transaction::CoinbaseEntry, amount_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::Catalyst::Protocol::Transaction::TransactionBroadcast)},
  { 15, -1, sizeof(::Catalyst::Protocol::Transaction::STTransactionEntry)},
  { 22, -1, sizeof(::Catalyst::Protocol::Transaction::CFTransactionEntry)},
  { 30, -1, sizeof(::Catalyst::Protocol::Transaction::EntryRangeProof)},
  { 47, -1, sizeof(::Catalyst::Protocol::Transaction::CoinbaseEntry)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::Catalyst::Protocol::Transaction::_TransactionBroadcast_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Catalyst::Protocol::Transaction::_STTransactionEntry_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Catalyst::Protocol::Transaction::_CFTransactionEntry_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Catalyst::Protocol::Transaction::_EntryRangeProof_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Catalyst::Protocol::Transaction::_CoinbaseEntry_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "Transaction.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 5);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\021Transaction.proto\022\035Catalyst.Protocol.T"
      "ransaction\032\037google/protobuf/timestamp.pr"
      "oto\"\202\003\n\024TransactionBroadcast\022G\n\017Transact"
      "ionType\030\001 \001(\0162..Catalyst.Protocol.Transa"
      "ction.TransactionType\022-\n\tTimeStamp\030\002 \001(\013"
      "2\032.google.protobuf.Timestamp\022\027\n\017Transact"
      "ionFees\030\003 \001(\004\022\020\n\010LockTime\030\004 \001(\004\022D\n\tSTEnt"
      "ries\030\005 \003(\01321.Catalyst.Protocol.Transacti"
      "on.STTransactionEntry\022D\n\tCFEntries\030\006 \003(\013"
      "21.Catalyst.Protocol.Transaction.CFTrans"
      "actionEntry\022\021\n\tSignature\030\007 \001(\014\022\014\n\004Init\030\t"
      " \001(\014\022\014\n\004Data\030\n \001(\014\022\014\n\004From\030\013 \001(\014\"4\n\022STTr"
      "ansactionEntry\022\016\n\006PubKey\030\001 \001(\014\022\016\n\006Amount"
      "\030\002 \001(\004\"\206\001\n\022CFTransactionEntry\022\016\n\006PubKey\030"
      "\001 \001(\014\022\026\n\016PedersenCommit\030\002 \001(\014\022H\n\020EntryRa"
      "ngeProofs\030\003 \001(\0132..Catalyst.Protocol.Tran"
      "saction.EntryRangeProof\"\246\001\n\017EntryRangePr"
      "oof\022\t\n\001V\030\001 \003(\014\022\t\n\001A\030\002 \001(\014\022\t\n\001S\030\003 \001(\014\022\n\n\002"
      "T1\030\004 \001(\014\022\n\n\002T2\030\005 \001(\014\022\013\n\003TAU\030\006 \001(\014\022\n\n\002MU\030"
      "\007 \001(\014\022\t\n\001L\030\010 \003(\014\022\t\n\001R\030\t \003(\014\022\017\n\007APrime0\030\n"
      " \001(\014\022\017\n\007BPrime0\030\013 \001(\014\022\t\n\001t\030\014 \001(\014\"@\n\rCoin"
      "baseEntry\022\017\n\007Version\030\001 \001(\r\022\016\n\006PubKey\030\002 \001"
      "(\014\022\016\n\006Amount\030\003 \001(\004*/\n\017TransactionType\022\n\n"
      "\006NORMAL\020\000\022\020\n\014CONFIDENTIAL\020\001B\002P\001b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 959);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "Transaction.proto", &protobuf_RegisterTypes);
  ::protobuf_google_2fprotobuf_2ftimestamp_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_Transaction_2eproto
namespace Catalyst {
namespace Protocol {
namespace Transaction {
const ::google::protobuf::EnumDescriptor* TransactionType_descriptor() {
  protobuf_Transaction_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Transaction_2eproto::file_level_enum_descriptors[0];
}
bool TransactionType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void TransactionBroadcast::InitAsDefaultInstance() {
  ::Catalyst::Protocol::Transaction::_TransactionBroadcast_default_instance_._instance.get_mutable()->timestamp_ = const_cast< ::google::protobuf::Timestamp*>(
      ::google::protobuf::Timestamp::internal_default_instance());
}
void TransactionBroadcast::clear_timestamp() {
  if (GetArenaNoVirtual() == NULL && timestamp_ != NULL) {
    delete timestamp_;
  }
  timestamp_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TransactionBroadcast::kTransactionTypeFieldNumber;
const int TransactionBroadcast::kTimeStampFieldNumber;
const int TransactionBroadcast::kTransactionFeesFieldNumber;
const int TransactionBroadcast::kLockTimeFieldNumber;
const int TransactionBroadcast::kSTEntriesFieldNumber;
const int TransactionBroadcast::kCFEntriesFieldNumber;
const int TransactionBroadcast::kSignatureFieldNumber;
const int TransactionBroadcast::kInitFieldNumber;
const int TransactionBroadcast::kDataFieldNumber;
const int TransactionBroadcast::kFromFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TransactionBroadcast::TransactionBroadcast()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Transaction_2eproto::scc_info_TransactionBroadcast.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Catalyst.Protocol.Transaction.TransactionBroadcast)
}
TransactionBroadcast::TransactionBroadcast(const TransactionBroadcast& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      stentries_(from.stentries_),
      cfentries_(from.cfentries_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  signature_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.signature().size() > 0) {
    signature_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.signature_);
  }
  init_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.init().size() > 0) {
    init_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.init_);
  }
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.data().size() > 0) {
    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  from_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.from().size() > 0) {
    from_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.from_);
  }
  if (from.has_timestamp()) {
    timestamp_ = new ::google::protobuf::Timestamp(*from.timestamp_);
  } else {
    timestamp_ = NULL;
  }
  ::memcpy(&transactionfees_, &from.transactionfees_,
    static_cast<size_t>(reinterpret_cast<char*>(&transactiontype_) -
    reinterpret_cast<char*>(&transactionfees_)) + sizeof(transactiontype_));
  // @@protoc_insertion_point(copy_constructor:Catalyst.Protocol.Transaction.TransactionBroadcast)
}

void TransactionBroadcast::SharedCtor() {
  signature_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  init_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  from_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&timestamp_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&transactiontype_) -
      reinterpret_cast<char*>(&timestamp_)) + sizeof(transactiontype_));
}

TransactionBroadcast::~TransactionBroadcast() {
  // @@protoc_insertion_point(destructor:Catalyst.Protocol.Transaction.TransactionBroadcast)
  SharedDtor();
}

void TransactionBroadcast::SharedDtor() {
  signature_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  init_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  from_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete timestamp_;
}

void TransactionBroadcast::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* TransactionBroadcast::descriptor() {
  ::protobuf_Transaction_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Transaction_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TransactionBroadcast& TransactionBroadcast::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Transaction_2eproto::scc_info_TransactionBroadcast.base);
  return *internal_default_instance();
}


void TransactionBroadcast::Clear() {
// @@protoc_insertion_point(message_clear_start:Catalyst.Protocol.Transaction.TransactionBroadcast)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  stentries_.Clear();
  cfentries_.Clear();
  signature_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  init_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  from_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && timestamp_ != NULL) {
    delete timestamp_;
  }
  timestamp_ = NULL;
  ::memset(&transactionfees_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&transactiontype_) -
      reinterpret_cast<char*>(&transactionfees_)) + sizeof(transactiontype_));
  _internal_metadata_.Clear();
}

bool TransactionBroadcast::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Catalyst.Protocol.Transaction.TransactionBroadcast)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .Catalyst.Protocol.Transaction.TransactionType TransactionType = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_transactiontype(static_cast< ::Catalyst::Protocol::Transaction::TransactionType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Timestamp TimeStamp = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_timestamp()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 TransactionFees = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &transactionfees_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 LockTime = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &locktime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .Catalyst.Protocol.Transaction.STTransactionEntry STEntries = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_stentries()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .Catalyst.Protocol.Transaction.CFTransactionEntry CFEntries = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_cfentries()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes Signature = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_signature()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes Init = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_init()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes Data = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes From = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_from()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Catalyst.Protocol.Transaction.TransactionBroadcast)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Catalyst.Protocol.Transaction.TransactionBroadcast)
  return false;
#undef DO_
}

void TransactionBroadcast::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Catalyst.Protocol.Transaction.TransactionBroadcast)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .Catalyst.Protocol.Transaction.TransactionType TransactionType = 1;
  if (this->transactiontype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->transactiontype(), output);
  }

  // .google.protobuf.Timestamp TimeStamp = 2;
  if (this->has_timestamp()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_timestamp(), output);
  }

  // uint64 TransactionFees = 3;
  if (this->transactionfees() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->transactionfees(), output);
  }

  // uint64 LockTime = 4;
  if (this->locktime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->locktime(), output);
  }

  // repeated .Catalyst.Protocol.Transaction.STTransactionEntry STEntries = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->stentries_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5,
      this->stentries(static_cast<int>(i)),
      output);
  }

  // repeated .Catalyst.Protocol.Transaction.CFTransactionEntry CFEntries = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->cfentries_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6,
      this->cfentries(static_cast<int>(i)),
      output);
  }

  // bytes Signature = 7;
  if (this->signature().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      7, this->signature(), output);
  }

  // bytes Init = 9;
  if (this->init().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      9, this->init(), output);
  }

  // bytes Data = 10;
  if (this->data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      10, this->data(), output);
  }

  // bytes From = 11;
  if (this->from().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      11, this->from(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Catalyst.Protocol.Transaction.TransactionBroadcast)
}

::google::protobuf::uint8* TransactionBroadcast::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Catalyst.Protocol.Transaction.TransactionBroadcast)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .Catalyst.Protocol.Transaction.TransactionType TransactionType = 1;
  if (this->transactiontype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->transactiontype(), target);
  }

  // .google.protobuf.Timestamp TimeStamp = 2;
  if (this->has_timestamp()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_timestamp(), deterministic, target);
  }

  // uint64 TransactionFees = 3;
  if (this->transactionfees() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->transactionfees(), target);
  }

  // uint64 LockTime = 4;
  if (this->locktime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->locktime(), target);
  }

  // repeated .Catalyst.Protocol.Transaction.STTransactionEntry STEntries = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->stentries_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->stentries(static_cast<int>(i)), deterministic, target);
  }

  // repeated .Catalyst.Protocol.Transaction.CFTransactionEntry CFEntries = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->cfentries_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->cfentries(static_cast<int>(i)), deterministic, target);
  }

  // bytes Signature = 7;
  if (this->signature().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        7, this->signature(), target);
  }

  // bytes Init = 9;
  if (this->init().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        9, this->init(), target);
  }

  // bytes Data = 10;
  if (this->data().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        10, this->data(), target);
  }

  // bytes From = 11;
  if (this->from().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        11, this->from(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Catalyst.Protocol.Transaction.TransactionBroadcast)
  return target;
}

size_t TransactionBroadcast::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Catalyst.Protocol.Transaction.TransactionBroadcast)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .Catalyst.Protocol.Transaction.STTransactionEntry STEntries = 5;
  {
    unsigned int count = static_cast<unsigned int>(this->stentries_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->stentries(static_cast<int>(i)));
    }
  }

  // repeated .Catalyst.Protocol.Transaction.CFTransactionEntry CFEntries = 6;
  {
    unsigned int count = static_cast<unsigned int>(this->cfentries_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->cfentries(static_cast<int>(i)));
    }
  }

  // bytes Signature = 7;
  if (this->signature().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->signature());
  }

  // bytes Init = 9;
  if (this->init().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->init());
  }

  // bytes Data = 10;
  if (this->data().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->data());
  }

  // bytes From = 11;
  if (this->from().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->from());
  }

  // .google.protobuf.Timestamp TimeStamp = 2;
  if (this->has_timestamp()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *timestamp_);
  }

  // uint64 TransactionFees = 3;
  if (this->transactionfees() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->transactionfees());
  }

  // uint64 LockTime = 4;
  if (this->locktime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->locktime());
  }

  // .Catalyst.Protocol.Transaction.TransactionType TransactionType = 1;
  if (this->transactiontype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->transactiontype());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TransactionBroadcast::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Catalyst.Protocol.Transaction.TransactionBroadcast)
  GOOGLE_DCHECK_NE(&from, this);
  const TransactionBroadcast* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TransactionBroadcast>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Catalyst.Protocol.Transaction.TransactionBroadcast)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Catalyst.Protocol.Transaction.TransactionBroadcast)
    MergeFrom(*source);
  }
}

void TransactionBroadcast::MergeFrom(const TransactionBroadcast& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Catalyst.Protocol.Transaction.TransactionBroadcast)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  stentries_.MergeFrom(from.stentries_);
  cfentries_.MergeFrom(from.cfentries_);
  if (from.signature().size() > 0) {

    signature_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.signature_);
  }
  if (from.init().size() > 0) {

    init_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.init_);
  }
  if (from.data().size() > 0) {

    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  if (from.from().size() > 0) {

    from_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.from_);
  }
  if (from.has_timestamp()) {
    mutable_timestamp()->::google::protobuf::Timestamp::MergeFrom(from.timestamp());
  }
  if (from.transactionfees() != 0) {
    set_transactionfees(from.transactionfees());
  }
  if (from.locktime() != 0) {
    set_locktime(from.locktime());
  }
  if (from.transactiontype() != 0) {
    set_transactiontype(from.transactiontype());
  }
}

void TransactionBroadcast::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Catalyst.Protocol.Transaction.TransactionBroadcast)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TransactionBroadcast::CopyFrom(const TransactionBroadcast& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Catalyst.Protocol.Transaction.TransactionBroadcast)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TransactionBroadcast::IsInitialized() const {
  return true;
}

void TransactionBroadcast::Swap(TransactionBroadcast* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TransactionBroadcast::InternalSwap(TransactionBroadcast* other) {
  using std::swap;
  CastToBase(&stentries_)->InternalSwap(CastToBase(&other->stentries_));
  CastToBase(&cfentries_)->InternalSwap(CastToBase(&other->cfentries_));
  signature_.Swap(&other->signature_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  init_.Swap(&other->init_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  data_.Swap(&other->data_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  from_.Swap(&other->from_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(timestamp_, other->timestamp_);
  swap(transactionfees_, other->transactionfees_);
  swap(locktime_, other->locktime_);
  swap(transactiontype_, other->transactiontype_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata TransactionBroadcast::GetMetadata() const {
  protobuf_Transaction_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Transaction_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void STTransactionEntry::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int STTransactionEntry::kPubKeyFieldNumber;
const int STTransactionEntry::kAmountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

STTransactionEntry::STTransactionEntry()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Transaction_2eproto::scc_info_STTransactionEntry.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Catalyst.Protocol.Transaction.STTransactionEntry)
}
STTransactionEntry::STTransactionEntry(const STTransactionEntry& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  pubkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.pubkey().size() > 0) {
    pubkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pubkey_);
  }
  amount_ = from.amount_;
  // @@protoc_insertion_point(copy_constructor:Catalyst.Protocol.Transaction.STTransactionEntry)
}

void STTransactionEntry::SharedCtor() {
  pubkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  amount_ = GOOGLE_ULONGLONG(0);
}

STTransactionEntry::~STTransactionEntry() {
  // @@protoc_insertion_point(destructor:Catalyst.Protocol.Transaction.STTransactionEntry)
  SharedDtor();
}

void STTransactionEntry::SharedDtor() {
  pubkey_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void STTransactionEntry::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* STTransactionEntry::descriptor() {
  ::protobuf_Transaction_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Transaction_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const STTransactionEntry& STTransactionEntry::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Transaction_2eproto::scc_info_STTransactionEntry.base);
  return *internal_default_instance();
}


void STTransactionEntry::Clear() {
// @@protoc_insertion_point(message_clear_start:Catalyst.Protocol.Transaction.STTransactionEntry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  pubkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  amount_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool STTransactionEntry::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Catalyst.Protocol.Transaction.STTransactionEntry)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes PubKey = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_pubkey()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 Amount = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &amount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Catalyst.Protocol.Transaction.STTransactionEntry)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Catalyst.Protocol.Transaction.STTransactionEntry)
  return false;
#undef DO_
}

void STTransactionEntry::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Catalyst.Protocol.Transaction.STTransactionEntry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes PubKey = 1;
  if (this->pubkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->pubkey(), output);
  }

  // uint64 Amount = 2;
  if (this->amount() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->amount(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Catalyst.Protocol.Transaction.STTransactionEntry)
}

::google::protobuf::uint8* STTransactionEntry::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Catalyst.Protocol.Transaction.STTransactionEntry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes PubKey = 1;
  if (this->pubkey().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->pubkey(), target);
  }

  // uint64 Amount = 2;
  if (this->amount() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->amount(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Catalyst.Protocol.Transaction.STTransactionEntry)
  return target;
}

size_t STTransactionEntry::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Catalyst.Protocol.Transaction.STTransactionEntry)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes PubKey = 1;
  if (this->pubkey().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->pubkey());
  }

  // uint64 Amount = 2;
  if (this->amount() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->amount());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void STTransactionEntry::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Catalyst.Protocol.Transaction.STTransactionEntry)
  GOOGLE_DCHECK_NE(&from, this);
  const STTransactionEntry* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const STTransactionEntry>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Catalyst.Protocol.Transaction.STTransactionEntry)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Catalyst.Protocol.Transaction.STTransactionEntry)
    MergeFrom(*source);
  }
}

void STTransactionEntry::MergeFrom(const STTransactionEntry& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Catalyst.Protocol.Transaction.STTransactionEntry)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.pubkey().size() > 0) {

    pubkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pubkey_);
  }
  if (from.amount() != 0) {
    set_amount(from.amount());
  }
}

void STTransactionEntry::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Catalyst.Protocol.Transaction.STTransactionEntry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void STTransactionEntry::CopyFrom(const STTransactionEntry& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Catalyst.Protocol.Transaction.STTransactionEntry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool STTransactionEntry::IsInitialized() const {
  return true;
}

void STTransactionEntry::Swap(STTransactionEntry* other) {
  if (other == this) return;
  InternalSwap(other);
}
void STTransactionEntry::InternalSwap(STTransactionEntry* other) {
  using std::swap;
  pubkey_.Swap(&other->pubkey_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(amount_, other->amount_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata STTransactionEntry::GetMetadata() const {
  protobuf_Transaction_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Transaction_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CFTransactionEntry::InitAsDefaultInstance() {
  ::Catalyst::Protocol::Transaction::_CFTransactionEntry_default_instance_._instance.get_mutable()->entryrangeproofs_ = const_cast< ::Catalyst::Protocol::Transaction::EntryRangeProof*>(
      ::Catalyst::Protocol::Transaction::EntryRangeProof::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CFTransactionEntry::kPubKeyFieldNumber;
const int CFTransactionEntry::kPedersenCommitFieldNumber;
const int CFTransactionEntry::kEntryRangeProofsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CFTransactionEntry::CFTransactionEntry()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Transaction_2eproto::scc_info_CFTransactionEntry.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Catalyst.Protocol.Transaction.CFTransactionEntry)
}
CFTransactionEntry::CFTransactionEntry(const CFTransactionEntry& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  pubkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.pubkey().size() > 0) {
    pubkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pubkey_);
  }
  pedersencommit_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.pedersencommit().size() > 0) {
    pedersencommit_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pedersencommit_);
  }
  if (from.has_entryrangeproofs()) {
    entryrangeproofs_ = new ::Catalyst::Protocol::Transaction::EntryRangeProof(*from.entryrangeproofs_);
  } else {
    entryrangeproofs_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:Catalyst.Protocol.Transaction.CFTransactionEntry)
}

void CFTransactionEntry::SharedCtor() {
  pubkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pedersencommit_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  entryrangeproofs_ = NULL;
}

CFTransactionEntry::~CFTransactionEntry() {
  // @@protoc_insertion_point(destructor:Catalyst.Protocol.Transaction.CFTransactionEntry)
  SharedDtor();
}

void CFTransactionEntry::SharedDtor() {
  pubkey_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pedersencommit_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete entryrangeproofs_;
}

void CFTransactionEntry::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CFTransactionEntry::descriptor() {
  ::protobuf_Transaction_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Transaction_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CFTransactionEntry& CFTransactionEntry::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Transaction_2eproto::scc_info_CFTransactionEntry.base);
  return *internal_default_instance();
}


void CFTransactionEntry::Clear() {
// @@protoc_insertion_point(message_clear_start:Catalyst.Protocol.Transaction.CFTransactionEntry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  pubkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pedersencommit_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && entryrangeproofs_ != NULL) {
    delete entryrangeproofs_;
  }
  entryrangeproofs_ = NULL;
  _internal_metadata_.Clear();
}

bool CFTransactionEntry::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Catalyst.Protocol.Transaction.CFTransactionEntry)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes PubKey = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_pubkey()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes PedersenCommit = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_pedersencommit()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Catalyst.Protocol.Transaction.EntryRangeProof EntryRangeProofs = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_entryrangeproofs()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Catalyst.Protocol.Transaction.CFTransactionEntry)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Catalyst.Protocol.Transaction.CFTransactionEntry)
  return false;
#undef DO_
}

void CFTransactionEntry::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Catalyst.Protocol.Transaction.CFTransactionEntry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes PubKey = 1;
  if (this->pubkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->pubkey(), output);
  }

  // bytes PedersenCommit = 2;
  if (this->pedersencommit().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->pedersencommit(), output);
  }

  // .Catalyst.Protocol.Transaction.EntryRangeProof EntryRangeProofs = 3;
  if (this->has_entryrangeproofs()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_entryrangeproofs(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Catalyst.Protocol.Transaction.CFTransactionEntry)
}

::google::protobuf::uint8* CFTransactionEntry::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Catalyst.Protocol.Transaction.CFTransactionEntry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes PubKey = 1;
  if (this->pubkey().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->pubkey(), target);
  }

  // bytes PedersenCommit = 2;
  if (this->pedersencommit().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->pedersencommit(), target);
  }

  // .Catalyst.Protocol.Transaction.EntryRangeProof EntryRangeProofs = 3;
  if (this->has_entryrangeproofs()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_entryrangeproofs(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Catalyst.Protocol.Transaction.CFTransactionEntry)
  return target;
}

size_t CFTransactionEntry::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Catalyst.Protocol.Transaction.CFTransactionEntry)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes PubKey = 1;
  if (this->pubkey().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->pubkey());
  }

  // bytes PedersenCommit = 2;
  if (this->pedersencommit().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->pedersencommit());
  }

  // .Catalyst.Protocol.Transaction.EntryRangeProof EntryRangeProofs = 3;
  if (this->has_entryrangeproofs()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *entryrangeproofs_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CFTransactionEntry::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Catalyst.Protocol.Transaction.CFTransactionEntry)
  GOOGLE_DCHECK_NE(&from, this);
  const CFTransactionEntry* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CFTransactionEntry>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Catalyst.Protocol.Transaction.CFTransactionEntry)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Catalyst.Protocol.Transaction.CFTransactionEntry)
    MergeFrom(*source);
  }
}

void CFTransactionEntry::MergeFrom(const CFTransactionEntry& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Catalyst.Protocol.Transaction.CFTransactionEntry)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.pubkey().size() > 0) {

    pubkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pubkey_);
  }
  if (from.pedersencommit().size() > 0) {

    pedersencommit_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pedersencommit_);
  }
  if (from.has_entryrangeproofs()) {
    mutable_entryrangeproofs()->::Catalyst::Protocol::Transaction::EntryRangeProof::MergeFrom(from.entryrangeproofs());
  }
}

void CFTransactionEntry::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Catalyst.Protocol.Transaction.CFTransactionEntry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CFTransactionEntry::CopyFrom(const CFTransactionEntry& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Catalyst.Protocol.Transaction.CFTransactionEntry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CFTransactionEntry::IsInitialized() const {
  return true;
}

void CFTransactionEntry::Swap(CFTransactionEntry* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CFTransactionEntry::InternalSwap(CFTransactionEntry* other) {
  using std::swap;
  pubkey_.Swap(&other->pubkey_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  pedersencommit_.Swap(&other->pedersencommit_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(entryrangeproofs_, other->entryrangeproofs_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CFTransactionEntry::GetMetadata() const {
  protobuf_Transaction_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Transaction_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void EntryRangeProof::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EntryRangeProof::kVFieldNumber;
const int EntryRangeProof::kAFieldNumber;
const int EntryRangeProof::kSFieldNumber;
const int EntryRangeProof::kT1FieldNumber;
const int EntryRangeProof::kT2FieldNumber;
const int EntryRangeProof::kTAUFieldNumber;
const int EntryRangeProof::kMUFieldNumber;
const int EntryRangeProof::kLFieldNumber;
const int EntryRangeProof::kRFieldNumber;
const int EntryRangeProof::kAPrime0FieldNumber;
const int EntryRangeProof::kBPrime0FieldNumber;
const int EntryRangeProof::kTFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EntryRangeProof::EntryRangeProof()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Transaction_2eproto::scc_info_EntryRangeProof.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Catalyst.Protocol.Transaction.EntryRangeProof)
}
EntryRangeProof::EntryRangeProof(const EntryRangeProof& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      v_(from.v_),
      l_(from.l_),
      r_(from.r_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  a_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.a().size() > 0) {
    a_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.a_);
  }
  s_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.s().size() > 0) {
    s_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.s_);
  }
  t1_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.t1().size() > 0) {
    t1_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.t1_);
  }
  t2_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.t2().size() > 0) {
    t2_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.t2_);
  }
  tau_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.tau().size() > 0) {
    tau_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tau_);
  }
  mu_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.mu().size() > 0) {
    mu_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mu_);
  }
  aprime0_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.aprime0().size() > 0) {
    aprime0_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.aprime0_);
  }
  bprime0_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.bprime0().size() > 0) {
    bprime0_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bprime0_);
  }
  t_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.t().size() > 0) {
    t_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.t_);
  }
  // @@protoc_insertion_point(copy_constructor:Catalyst.Protocol.Transaction.EntryRangeProof)
}

void EntryRangeProof::SharedCtor() {
  a_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  s_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  t1_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  t2_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tau_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mu_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  aprime0_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bprime0_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  t_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

EntryRangeProof::~EntryRangeProof() {
  // @@protoc_insertion_point(destructor:Catalyst.Protocol.Transaction.EntryRangeProof)
  SharedDtor();
}

void EntryRangeProof::SharedDtor() {
  a_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  s_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  t1_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  t2_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tau_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mu_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  aprime0_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bprime0_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  t_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void EntryRangeProof::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* EntryRangeProof::descriptor() {
  ::protobuf_Transaction_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Transaction_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const EntryRangeProof& EntryRangeProof::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Transaction_2eproto::scc_info_EntryRangeProof.base);
  return *internal_default_instance();
}


void EntryRangeProof::Clear() {
// @@protoc_insertion_point(message_clear_start:Catalyst.Protocol.Transaction.EntryRangeProof)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  v_.Clear();
  l_.Clear();
  r_.Clear();
  a_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  s_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  t1_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  t2_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tau_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mu_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  aprime0_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bprime0_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  t_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool EntryRangeProof::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Catalyst.Protocol.Transaction.EntryRangeProof)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated bytes V = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->add_v()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes A = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_a()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes S = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_s()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes T1 = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_t1()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes T2 = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_t2()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes TAU = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_tau()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes MU = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_mu()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated bytes L = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->add_l()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated bytes R = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->add_r()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes APrime0 = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_aprime0()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes BPrime0 = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_bprime0()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes t = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_t()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Catalyst.Protocol.Transaction.EntryRangeProof)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Catalyst.Protocol.Transaction.EntryRangeProof)
  return false;
#undef DO_
}

void EntryRangeProof::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Catalyst.Protocol.Transaction.EntryRangeProof)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated bytes V = 1;
  for (int i = 0, n = this->v_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      1, this->v(i), output);
  }

  // bytes A = 2;
  if (this->a().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->a(), output);
  }

  // bytes S = 3;
  if (this->s().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->s(), output);
  }

  // bytes T1 = 4;
  if (this->t1().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->t1(), output);
  }

  // bytes T2 = 5;
  if (this->t2().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      5, this->t2(), output);
  }

  // bytes TAU = 6;
  if (this->tau().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      6, this->tau(), output);
  }

  // bytes MU = 7;
  if (this->mu().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      7, this->mu(), output);
  }

  // repeated bytes L = 8;
  for (int i = 0, n = this->l_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      8, this->l(i), output);
  }

  // repeated bytes R = 9;
  for (int i = 0, n = this->r_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      9, this->r(i), output);
  }

  // bytes APrime0 = 10;
  if (this->aprime0().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      10, this->aprime0(), output);
  }

  // bytes BPrime0 = 11;
  if (this->bprime0().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      11, this->bprime0(), output);
  }

  // bytes t = 12;
  if (this->t().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      12, this->t(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Catalyst.Protocol.Transaction.EntryRangeProof)
}

::google::protobuf::uint8* EntryRangeProof::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Catalyst.Protocol.Transaction.EntryRangeProof)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated bytes V = 1;
  for (int i = 0, n = this->v_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBytesToArray(1, this->v(i), target);
  }

  // bytes A = 2;
  if (this->a().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->a(), target);
  }

  // bytes S = 3;
  if (this->s().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->s(), target);
  }

  // bytes T1 = 4;
  if (this->t1().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->t1(), target);
  }

  // bytes T2 = 5;
  if (this->t2().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        5, this->t2(), target);
  }

  // bytes TAU = 6;
  if (this->tau().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        6, this->tau(), target);
  }

  // bytes MU = 7;
  if (this->mu().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        7, this->mu(), target);
  }

  // repeated bytes L = 8;
  for (int i = 0, n = this->l_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBytesToArray(8, this->l(i), target);
  }

  // repeated bytes R = 9;
  for (int i = 0, n = this->r_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBytesToArray(9, this->r(i), target);
  }

  // bytes APrime0 = 10;
  if (this->aprime0().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        10, this->aprime0(), target);
  }

  // bytes BPrime0 = 11;
  if (this->bprime0().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        11, this->bprime0(), target);
  }

  // bytes t = 12;
  if (this->t().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        12, this->t(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Catalyst.Protocol.Transaction.EntryRangeProof)
  return target;
}

size_t EntryRangeProof::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Catalyst.Protocol.Transaction.EntryRangeProof)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated bytes V = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->v_size());
  for (int i = 0, n = this->v_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
      this->v(i));
  }

  // repeated bytes L = 8;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->l_size());
  for (int i = 0, n = this->l_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
      this->l(i));
  }

  // repeated bytes R = 9;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->r_size());
  for (int i = 0, n = this->r_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
      this->r(i));
  }

  // bytes A = 2;
  if (this->a().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->a());
  }

  // bytes S = 3;
  if (this->s().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->s());
  }

  // bytes T1 = 4;
  if (this->t1().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->t1());
  }

  // bytes T2 = 5;
  if (this->t2().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->t2());
  }

  // bytes TAU = 6;
  if (this->tau().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->tau());
  }

  // bytes MU = 7;
  if (this->mu().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->mu());
  }

  // bytes APrime0 = 10;
  if (this->aprime0().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->aprime0());
  }

  // bytes BPrime0 = 11;
  if (this->bprime0().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->bprime0());
  }

  // bytes t = 12;
  if (this->t().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->t());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void EntryRangeProof::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Catalyst.Protocol.Transaction.EntryRangeProof)
  GOOGLE_DCHECK_NE(&from, this);
  const EntryRangeProof* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EntryRangeProof>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Catalyst.Protocol.Transaction.EntryRangeProof)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Catalyst.Protocol.Transaction.EntryRangeProof)
    MergeFrom(*source);
  }
}

void EntryRangeProof::MergeFrom(const EntryRangeProof& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Catalyst.Protocol.Transaction.EntryRangeProof)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  v_.MergeFrom(from.v_);
  l_.MergeFrom(from.l_);
  r_.MergeFrom(from.r_);
  if (from.a().size() > 0) {

    a_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.a_);
  }
  if (from.s().size() > 0) {

    s_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.s_);
  }
  if (from.t1().size() > 0) {

    t1_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.t1_);
  }
  if (from.t2().size() > 0) {

    t2_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.t2_);
  }
  if (from.tau().size() > 0) {

    tau_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tau_);
  }
  if (from.mu().size() > 0) {

    mu_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mu_);
  }
  if (from.aprime0().size() > 0) {

    aprime0_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.aprime0_);
  }
  if (from.bprime0().size() > 0) {

    bprime0_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bprime0_);
  }
  if (from.t().size() > 0) {

    t_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.t_);
  }
}

void EntryRangeProof::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Catalyst.Protocol.Transaction.EntryRangeProof)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EntryRangeProof::CopyFrom(const EntryRangeProof& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Catalyst.Protocol.Transaction.EntryRangeProof)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EntryRangeProof::IsInitialized() const {
  return true;
}

void EntryRangeProof::Swap(EntryRangeProof* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EntryRangeProof::InternalSwap(EntryRangeProof* other) {
  using std::swap;
  v_.InternalSwap(CastToBase(&other->v_));
  l_.InternalSwap(CastToBase(&other->l_));
  r_.InternalSwap(CastToBase(&other->r_));
  a_.Swap(&other->a_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  s_.Swap(&other->s_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  t1_.Swap(&other->t1_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  t2_.Swap(&other->t2_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  tau_.Swap(&other->tau_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  mu_.Swap(&other->mu_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  aprime0_.Swap(&other->aprime0_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  bprime0_.Swap(&other->bprime0_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  t_.Swap(&other->t_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata EntryRangeProof::GetMetadata() const {
  protobuf_Transaction_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Transaction_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CoinbaseEntry::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CoinbaseEntry::kVersionFieldNumber;
const int CoinbaseEntry::kPubKeyFieldNumber;
const int CoinbaseEntry::kAmountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CoinbaseEntry::CoinbaseEntry()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Transaction_2eproto::scc_info_CoinbaseEntry.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Catalyst.Protocol.Transaction.CoinbaseEntry)
}
CoinbaseEntry::CoinbaseEntry(const CoinbaseEntry& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  pubkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.pubkey().size() > 0) {
    pubkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pubkey_);
  }
  ::memcpy(&amount_, &from.amount_,
    static_cast<size_t>(reinterpret_cast<char*>(&version_) -
    reinterpret_cast<char*>(&amount_)) + sizeof(version_));
  // @@protoc_insertion_point(copy_constructor:Catalyst.Protocol.Transaction.CoinbaseEntry)
}

void CoinbaseEntry::SharedCtor() {
  pubkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&amount_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&version_) -
      reinterpret_cast<char*>(&amount_)) + sizeof(version_));
}

CoinbaseEntry::~CoinbaseEntry() {
  // @@protoc_insertion_point(destructor:Catalyst.Protocol.Transaction.CoinbaseEntry)
  SharedDtor();
}

void CoinbaseEntry::SharedDtor() {
  pubkey_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CoinbaseEntry::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CoinbaseEntry::descriptor() {
  ::protobuf_Transaction_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Transaction_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CoinbaseEntry& CoinbaseEntry::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Transaction_2eproto::scc_info_CoinbaseEntry.base);
  return *internal_default_instance();
}


void CoinbaseEntry::Clear() {
// @@protoc_insertion_point(message_clear_start:Catalyst.Protocol.Transaction.CoinbaseEntry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  pubkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&amount_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&version_) -
      reinterpret_cast<char*>(&amount_)) + sizeof(version_));
  _internal_metadata_.Clear();
}

bool CoinbaseEntry::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Catalyst.Protocol.Transaction.CoinbaseEntry)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 Version = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &version_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes PubKey = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_pubkey()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 Amount = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &amount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Catalyst.Protocol.Transaction.CoinbaseEntry)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Catalyst.Protocol.Transaction.CoinbaseEntry)
  return false;
#undef DO_
}

void CoinbaseEntry::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Catalyst.Protocol.Transaction.CoinbaseEntry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 Version = 1;
  if (this->version() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->version(), output);
  }

  // bytes PubKey = 2;
  if (this->pubkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->pubkey(), output);
  }

  // uint64 Amount = 3;
  if (this->amount() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->amount(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Catalyst.Protocol.Transaction.CoinbaseEntry)
}

::google::protobuf::uint8* CoinbaseEntry::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Catalyst.Protocol.Transaction.CoinbaseEntry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 Version = 1;
  if (this->version() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->version(), target);
  }

  // bytes PubKey = 2;
  if (this->pubkey().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->pubkey(), target);
  }

  // uint64 Amount = 3;
  if (this->amount() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->amount(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Catalyst.Protocol.Transaction.CoinbaseEntry)
  return target;
}

size_t CoinbaseEntry::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Catalyst.Protocol.Transaction.CoinbaseEntry)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes PubKey = 2;
  if (this->pubkey().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->pubkey());
  }

  // uint64 Amount = 3;
  if (this->amount() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->amount());
  }

  // uint32 Version = 1;
  if (this->version() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->version());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CoinbaseEntry::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Catalyst.Protocol.Transaction.CoinbaseEntry)
  GOOGLE_DCHECK_NE(&from, this);
  const CoinbaseEntry* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CoinbaseEntry>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Catalyst.Protocol.Transaction.CoinbaseEntry)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Catalyst.Protocol.Transaction.CoinbaseEntry)
    MergeFrom(*source);
  }
}

void CoinbaseEntry::MergeFrom(const CoinbaseEntry& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Catalyst.Protocol.Transaction.CoinbaseEntry)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.pubkey().size() > 0) {

    pubkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pubkey_);
  }
  if (from.amount() != 0) {
    set_amount(from.amount());
  }
  if (from.version() != 0) {
    set_version(from.version());
  }
}

void CoinbaseEntry::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Catalyst.Protocol.Transaction.CoinbaseEntry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CoinbaseEntry::CopyFrom(const CoinbaseEntry& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Catalyst.Protocol.Transaction.CoinbaseEntry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CoinbaseEntry::IsInitialized() const {
  return true;
}

void CoinbaseEntry::Swap(CoinbaseEntry* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CoinbaseEntry::InternalSwap(CoinbaseEntry* other) {
  using std::swap;
  pubkey_.Swap(&other->pubkey_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(amount_, other->amount_);
  swap(version_, other->version_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CoinbaseEntry::GetMetadata() const {
  protobuf_Transaction_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Transaction_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace Transaction
}  // namespace Protocol
}  // namespace Catalyst
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Catalyst::Protocol::Transaction::TransactionBroadcast* Arena::CreateMaybeMessage< ::Catalyst::Protocol::Transaction::TransactionBroadcast >(Arena* arena) {
  return Arena::CreateInternal< ::Catalyst::Protocol::Transaction::TransactionBroadcast >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Catalyst::Protocol::Transaction::STTransactionEntry* Arena::CreateMaybeMessage< ::Catalyst::Protocol::Transaction::STTransactionEntry >(Arena* arena) {
  return Arena::CreateInternal< ::Catalyst::Protocol::Transaction::STTransactionEntry >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Catalyst::Protocol::Transaction::CFTransactionEntry* Arena::CreateMaybeMessage< ::Catalyst::Protocol::Transaction::CFTransactionEntry >(Arena* arena) {
  return Arena::CreateInternal< ::Catalyst::Protocol::Transaction::CFTransactionEntry >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Catalyst::Protocol::Transaction::EntryRangeProof* Arena::CreateMaybeMessage< ::Catalyst::Protocol::Transaction::EntryRangeProof >(Arena* arena) {
  return Arena::CreateInternal< ::Catalyst::Protocol::Transaction::EntryRangeProof >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Catalyst::Protocol::Transaction::CoinbaseEntry* Arena::CreateMaybeMessage< ::Catalyst::Protocol::Transaction::CoinbaseEntry >(Arena* arena) {
  return Arena::CreateInternal< ::Catalyst::Protocol::Transaction::CoinbaseEntry >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
