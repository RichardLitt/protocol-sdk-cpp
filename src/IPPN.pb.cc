// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: IPPN.proto

#include "IPPN.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_Common_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_Common_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_PeerId;
}  // namespace protobuf_Common_2eproto
namespace Catalyst {
namespace Protocol {
namespace IPPN {
class PeerNeighborsRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PeerNeighborsRequest>
      _instance;
} _PeerNeighborsRequest_default_instance_;
class PeerNeighborsResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PeerNeighborsResponse>
      _instance;
} _PeerNeighborsResponse_default_instance_;
class PingRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PingRequest>
      _instance;
} _PingRequest_default_instance_;
class PingResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PingResponse>
      _instance;
} _PingResponse_default_instance_;
}  // namespace IPPN
}  // namespace Protocol
}  // namespace Catalyst
namespace protobuf_IPPN_2eproto {
static void InitDefaultsPeerNeighborsRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Catalyst::Protocol::IPPN::_PeerNeighborsRequest_default_instance_;
    new (ptr) ::Catalyst::Protocol::IPPN::PeerNeighborsRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Catalyst::Protocol::IPPN::PeerNeighborsRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_PeerNeighborsRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPeerNeighborsRequest}, {}};

static void InitDefaultsPeerNeighborsResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Catalyst::Protocol::IPPN::_PeerNeighborsResponse_default_instance_;
    new (ptr) ::Catalyst::Protocol::IPPN::PeerNeighborsResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Catalyst::Protocol::IPPN::PeerNeighborsResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_PeerNeighborsResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsPeerNeighborsResponse}, {
      &protobuf_Common_2eproto::scc_info_PeerId.base,}};

static void InitDefaultsPingRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Catalyst::Protocol::IPPN::_PingRequest_default_instance_;
    new (ptr) ::Catalyst::Protocol::IPPN::PingRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Catalyst::Protocol::IPPN::PingRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_PingRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPingRequest}, {}};

static void InitDefaultsPingResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Catalyst::Protocol::IPPN::_PingResponse_default_instance_;
    new (ptr) ::Catalyst::Protocol::IPPN::PingResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Catalyst::Protocol::IPPN::PingResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_PingResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPingResponse}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_PeerNeighborsRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PeerNeighborsResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PingRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PingResponse.base);
}

::google::protobuf::Metadata file_level_metadata[4];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Catalyst::Protocol::IPPN::PeerNeighborsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Catalyst::Protocol::IPPN::PeerNeighborsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Catalyst::Protocol::IPPN::PeerNeighborsResponse, peers_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Catalyst::Protocol::IPPN::PingRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Catalyst::Protocol::IPPN::PingResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::Catalyst::Protocol::IPPN::PeerNeighborsRequest)},
  { 5, -1, sizeof(::Catalyst::Protocol::IPPN::PeerNeighborsResponse)},
  { 11, -1, sizeof(::Catalyst::Protocol::IPPN::PingRequest)},
  { 16, -1, sizeof(::Catalyst::Protocol::IPPN::PingResponse)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::Catalyst::Protocol::IPPN::_PeerNeighborsRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Catalyst::Protocol::IPPN::_PeerNeighborsResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Catalyst::Protocol::IPPN::_PingRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Catalyst::Protocol::IPPN::_PingResponse_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "IPPN.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 4);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\nIPPN.proto\022\026Catalyst.Protocol.IPPN\032\014Co"
      "mmon.proto\"\026\n\024PeerNeighborsRequest\"H\n\025Pe"
      "erNeighborsResponse\022/\n\005Peers\030\001 \003(\0132 .Cat"
      "alyst.Protocol.Common.PeerId\"\r\n\013PingRequ"
      "est\"\016\n\014PingResponseb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 187);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "IPPN.proto", &protobuf_RegisterTypes);
  ::protobuf_Common_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_IPPN_2eproto
namespace Catalyst {
namespace Protocol {
namespace IPPN {

// ===================================================================

void PeerNeighborsRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PeerNeighborsRequest::PeerNeighborsRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_IPPN_2eproto::scc_info_PeerNeighborsRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Catalyst.Protocol.IPPN.PeerNeighborsRequest)
}
PeerNeighborsRequest::PeerNeighborsRequest(const PeerNeighborsRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Catalyst.Protocol.IPPN.PeerNeighborsRequest)
}

void PeerNeighborsRequest::SharedCtor() {
}

PeerNeighborsRequest::~PeerNeighborsRequest() {
  // @@protoc_insertion_point(destructor:Catalyst.Protocol.IPPN.PeerNeighborsRequest)
  SharedDtor();
}

void PeerNeighborsRequest::SharedDtor() {
}

void PeerNeighborsRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PeerNeighborsRequest::descriptor() {
  ::protobuf_IPPN_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_IPPN_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PeerNeighborsRequest& PeerNeighborsRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_IPPN_2eproto::scc_info_PeerNeighborsRequest.base);
  return *internal_default_instance();
}


void PeerNeighborsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:Catalyst.Protocol.IPPN.PeerNeighborsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool PeerNeighborsRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Catalyst.Protocol.IPPN.PeerNeighborsRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:Catalyst.Protocol.IPPN.PeerNeighborsRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Catalyst.Protocol.IPPN.PeerNeighborsRequest)
  return false;
#undef DO_
}

void PeerNeighborsRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Catalyst.Protocol.IPPN.PeerNeighborsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Catalyst.Protocol.IPPN.PeerNeighborsRequest)
}

::google::protobuf::uint8* PeerNeighborsRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Catalyst.Protocol.IPPN.PeerNeighborsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Catalyst.Protocol.IPPN.PeerNeighborsRequest)
  return target;
}

size_t PeerNeighborsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Catalyst.Protocol.IPPN.PeerNeighborsRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PeerNeighborsRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Catalyst.Protocol.IPPN.PeerNeighborsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const PeerNeighborsRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PeerNeighborsRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Catalyst.Protocol.IPPN.PeerNeighborsRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Catalyst.Protocol.IPPN.PeerNeighborsRequest)
    MergeFrom(*source);
  }
}

void PeerNeighborsRequest::MergeFrom(const PeerNeighborsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Catalyst.Protocol.IPPN.PeerNeighborsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void PeerNeighborsRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Catalyst.Protocol.IPPN.PeerNeighborsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PeerNeighborsRequest::CopyFrom(const PeerNeighborsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Catalyst.Protocol.IPPN.PeerNeighborsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PeerNeighborsRequest::IsInitialized() const {
  return true;
}

void PeerNeighborsRequest::Swap(PeerNeighborsRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PeerNeighborsRequest::InternalSwap(PeerNeighborsRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PeerNeighborsRequest::GetMetadata() const {
  protobuf_IPPN_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_IPPN_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PeerNeighborsResponse::InitAsDefaultInstance() {
}
void PeerNeighborsResponse::clear_peers() {
  peers_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PeerNeighborsResponse::kPeersFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PeerNeighborsResponse::PeerNeighborsResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_IPPN_2eproto::scc_info_PeerNeighborsResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Catalyst.Protocol.IPPN.PeerNeighborsResponse)
}
PeerNeighborsResponse::PeerNeighborsResponse(const PeerNeighborsResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      peers_(from.peers_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Catalyst.Protocol.IPPN.PeerNeighborsResponse)
}

void PeerNeighborsResponse::SharedCtor() {
}

PeerNeighborsResponse::~PeerNeighborsResponse() {
  // @@protoc_insertion_point(destructor:Catalyst.Protocol.IPPN.PeerNeighborsResponse)
  SharedDtor();
}

void PeerNeighborsResponse::SharedDtor() {
}

void PeerNeighborsResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PeerNeighborsResponse::descriptor() {
  ::protobuf_IPPN_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_IPPN_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PeerNeighborsResponse& PeerNeighborsResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_IPPN_2eproto::scc_info_PeerNeighborsResponse.base);
  return *internal_default_instance();
}


void PeerNeighborsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:Catalyst.Protocol.IPPN.PeerNeighborsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  peers_.Clear();
  _internal_metadata_.Clear();
}

bool PeerNeighborsResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Catalyst.Protocol.IPPN.PeerNeighborsResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .Catalyst.Protocol.Common.PeerId Peers = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_peers()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Catalyst.Protocol.IPPN.PeerNeighborsResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Catalyst.Protocol.IPPN.PeerNeighborsResponse)
  return false;
#undef DO_
}

void PeerNeighborsResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Catalyst.Protocol.IPPN.PeerNeighborsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .Catalyst.Protocol.Common.PeerId Peers = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->peers_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->peers(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Catalyst.Protocol.IPPN.PeerNeighborsResponse)
}

::google::protobuf::uint8* PeerNeighborsResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Catalyst.Protocol.IPPN.PeerNeighborsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .Catalyst.Protocol.Common.PeerId Peers = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->peers_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->peers(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Catalyst.Protocol.IPPN.PeerNeighborsResponse)
  return target;
}

size_t PeerNeighborsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Catalyst.Protocol.IPPN.PeerNeighborsResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .Catalyst.Protocol.Common.PeerId Peers = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->peers_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->peers(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PeerNeighborsResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Catalyst.Protocol.IPPN.PeerNeighborsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const PeerNeighborsResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PeerNeighborsResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Catalyst.Protocol.IPPN.PeerNeighborsResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Catalyst.Protocol.IPPN.PeerNeighborsResponse)
    MergeFrom(*source);
  }
}

void PeerNeighborsResponse::MergeFrom(const PeerNeighborsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Catalyst.Protocol.IPPN.PeerNeighborsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  peers_.MergeFrom(from.peers_);
}

void PeerNeighborsResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Catalyst.Protocol.IPPN.PeerNeighborsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PeerNeighborsResponse::CopyFrom(const PeerNeighborsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Catalyst.Protocol.IPPN.PeerNeighborsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PeerNeighborsResponse::IsInitialized() const {
  return true;
}

void PeerNeighborsResponse::Swap(PeerNeighborsResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PeerNeighborsResponse::InternalSwap(PeerNeighborsResponse* other) {
  using std::swap;
  CastToBase(&peers_)->InternalSwap(CastToBase(&other->peers_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PeerNeighborsResponse::GetMetadata() const {
  protobuf_IPPN_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_IPPN_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PingRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PingRequest::PingRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_IPPN_2eproto::scc_info_PingRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Catalyst.Protocol.IPPN.PingRequest)
}
PingRequest::PingRequest(const PingRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Catalyst.Protocol.IPPN.PingRequest)
}

void PingRequest::SharedCtor() {
}

PingRequest::~PingRequest() {
  // @@protoc_insertion_point(destructor:Catalyst.Protocol.IPPN.PingRequest)
  SharedDtor();
}

void PingRequest::SharedDtor() {
}

void PingRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PingRequest::descriptor() {
  ::protobuf_IPPN_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_IPPN_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PingRequest& PingRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_IPPN_2eproto::scc_info_PingRequest.base);
  return *internal_default_instance();
}


void PingRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:Catalyst.Protocol.IPPN.PingRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool PingRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Catalyst.Protocol.IPPN.PingRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:Catalyst.Protocol.IPPN.PingRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Catalyst.Protocol.IPPN.PingRequest)
  return false;
#undef DO_
}

void PingRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Catalyst.Protocol.IPPN.PingRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Catalyst.Protocol.IPPN.PingRequest)
}

::google::protobuf::uint8* PingRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Catalyst.Protocol.IPPN.PingRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Catalyst.Protocol.IPPN.PingRequest)
  return target;
}

size_t PingRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Catalyst.Protocol.IPPN.PingRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PingRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Catalyst.Protocol.IPPN.PingRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const PingRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PingRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Catalyst.Protocol.IPPN.PingRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Catalyst.Protocol.IPPN.PingRequest)
    MergeFrom(*source);
  }
}

void PingRequest::MergeFrom(const PingRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Catalyst.Protocol.IPPN.PingRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void PingRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Catalyst.Protocol.IPPN.PingRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PingRequest::CopyFrom(const PingRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Catalyst.Protocol.IPPN.PingRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PingRequest::IsInitialized() const {
  return true;
}

void PingRequest::Swap(PingRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PingRequest::InternalSwap(PingRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PingRequest::GetMetadata() const {
  protobuf_IPPN_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_IPPN_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PingResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PingResponse::PingResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_IPPN_2eproto::scc_info_PingResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Catalyst.Protocol.IPPN.PingResponse)
}
PingResponse::PingResponse(const PingResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Catalyst.Protocol.IPPN.PingResponse)
}

void PingResponse::SharedCtor() {
}

PingResponse::~PingResponse() {
  // @@protoc_insertion_point(destructor:Catalyst.Protocol.IPPN.PingResponse)
  SharedDtor();
}

void PingResponse::SharedDtor() {
}

void PingResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PingResponse::descriptor() {
  ::protobuf_IPPN_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_IPPN_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PingResponse& PingResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_IPPN_2eproto::scc_info_PingResponse.base);
  return *internal_default_instance();
}


void PingResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:Catalyst.Protocol.IPPN.PingResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool PingResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Catalyst.Protocol.IPPN.PingResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:Catalyst.Protocol.IPPN.PingResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Catalyst.Protocol.IPPN.PingResponse)
  return false;
#undef DO_
}

void PingResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Catalyst.Protocol.IPPN.PingResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Catalyst.Protocol.IPPN.PingResponse)
}

::google::protobuf::uint8* PingResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Catalyst.Protocol.IPPN.PingResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Catalyst.Protocol.IPPN.PingResponse)
  return target;
}

size_t PingResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Catalyst.Protocol.IPPN.PingResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PingResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Catalyst.Protocol.IPPN.PingResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const PingResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PingResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Catalyst.Protocol.IPPN.PingResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Catalyst.Protocol.IPPN.PingResponse)
    MergeFrom(*source);
  }
}

void PingResponse::MergeFrom(const PingResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Catalyst.Protocol.IPPN.PingResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void PingResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Catalyst.Protocol.IPPN.PingResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PingResponse::CopyFrom(const PingResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Catalyst.Protocol.IPPN.PingResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PingResponse::IsInitialized() const {
  return true;
}

void PingResponse::Swap(PingResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PingResponse::InternalSwap(PingResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PingResponse::GetMetadata() const {
  protobuf_IPPN_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_IPPN_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace IPPN
}  // namespace Protocol
}  // namespace Catalyst
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Catalyst::Protocol::IPPN::PeerNeighborsRequest* Arena::CreateMaybeMessage< ::Catalyst::Protocol::IPPN::PeerNeighborsRequest >(Arena* arena) {
  return Arena::CreateInternal< ::Catalyst::Protocol::IPPN::PeerNeighborsRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Catalyst::Protocol::IPPN::PeerNeighborsResponse* Arena::CreateMaybeMessage< ::Catalyst::Protocol::IPPN::PeerNeighborsResponse >(Arena* arena) {
  return Arena::CreateInternal< ::Catalyst::Protocol::IPPN::PeerNeighborsResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Catalyst::Protocol::IPPN::PingRequest* Arena::CreateMaybeMessage< ::Catalyst::Protocol::IPPN::PingRequest >(Arena* arena) {
  return Arena::CreateInternal< ::Catalyst::Protocol::IPPN::PingRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Catalyst::Protocol::IPPN::PingResponse* Arena::CreateMaybeMessage< ::Catalyst::Protocol::IPPN::PingResponse >(Arena* arena) {
  return Arena::CreateInternal< ::Catalyst::Protocol::IPPN::PingResponse >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
