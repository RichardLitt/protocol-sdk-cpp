// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Rpc.proto

#include "Rpc.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_Common_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_Common_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_PeerId;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_Common_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_SigningContext;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_Common_2eproto ::google::protobuf::internal::SCCInfo<3> scc_info_PeerInfo;
}  // namespace protobuf_Common_2eproto
namespace protobuf_Deltas_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_Deltas_2eproto ::google::protobuf::internal::SCCInfo<4> scc_info_Delta;
}  // namespace protobuf_Deltas_2eproto
namespace protobuf_Transaction_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_Transaction_2eproto ::google::protobuf::internal::SCCInfo<3> scc_info_TransactionBroadcast;
}  // namespace protobuf_Transaction_2eproto
namespace Catalyst {
namespace Protocol {
namespace Rpc {
namespace Node {
class VersionRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<VersionRequest>
      _instance;
} _VersionRequest_default_instance_;
class VersionResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<VersionResponse>
      _instance;
} _VersionResponse_default_instance_;
class GetInfoRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetInfoRequest>
      _instance;
} _GetInfoRequest_default_instance_;
class GetInfoResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetInfoResponse>
      _instance;
} _GetInfoResponse_default_instance_;
class CreateWalletRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CreateWalletRequest>
      _instance;
} _CreateWalletRequest_default_instance_;
class CreateWalletResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CreateWalletResponse>
      _instance;
} _CreateWalletResponse_default_instance_;
class ListWalletRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListWalletRequest>
      _instance;
} _ListWalletRequest_default_instance_;
class ListWalletResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListWalletResponse>
      _instance;
} _ListWalletResponse_default_instance_;
class CreateAddressRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CreateAddressRequest>
      _instance;
} _CreateAddressRequest_default_instance_;
class CreateAddressResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CreateAddressResponse>
      _instance;
} _CreateAddressResponse_default_instance_;
class GetAddressRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetAddressRequest>
      _instance;
} _GetAddressRequest_default_instance_;
class GetAddressResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetAddressResponse>
      _instance;
} _GetAddressResponse_default_instance_;
class ListAddressRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListAddressRequest>
      _instance;
} _ListAddressRequest_default_instance_;
class ListAddressResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListAddressResponse>
      _instance;
} _ListAddressResponse_default_instance_;
class ValidateAddressRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ValidateAddressRequest>
      _instance;
} _ValidateAddressRequest_default_instance_;
class ValidateAddressResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ValidateAddressResponse>
      _instance;
} _ValidateAddressResponse_default_instance_;
class GetBalanceRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetBalanceRequest>
      _instance;
} _GetBalanceRequest_default_instance_;
class GetBalanceResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetBalanceResponse>
      _instance;
} _GetBalanceResponse_default_instance_;
class CreateRawTransactionRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CreateRawTransactionRequest>
      _instance;
} _CreateRawTransactionRequest_default_instance_;
class CreateRawTransactionResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CreateRawTransactionResponse>
      _instance;
} _CreateRawTransactionResponse_default_instance_;
class SignRawTransactionRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SignRawTransactionRequest>
      _instance;
} _SignRawTransactionRequest_default_instance_;
class SignRawTransactionResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SignRawTransactionResponse>
      _instance;
} _SignRawTransactionResponse_default_instance_;
class DecodeRawTransactionRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DecodeRawTransactionRequest>
      _instance;
} _DecodeRawTransactionRequest_default_instance_;
class DecodeRawTransactionResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DecodeRawTransactionResponse>
      _instance;
} _DecodeRawTransactionResponse_default_instance_;
class BroadcastRawTransactionRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BroadcastRawTransactionRequest>
      _instance;
} _BroadcastRawTransactionRequest_default_instance_;
class BroadcastRawTransactionResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BroadcastRawTransactionResponse>
      _instance;
} _BroadcastRawTransactionResponse_default_instance_;
class SendToRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SendToRequest>
      _instance;
} _SendToRequest_default_instance_;
class SendToResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SendToResponse>
      _instance;
} _SendToResponse_default_instance_;
class SendToFromRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SendToFromRequest>
      _instance;
} _SendToFromRequest_default_instance_;
class SendToFromResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SendToFromResponse>
      _instance;
} _SendToFromResponse_default_instance_;
class SendManyRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SendManyRequest>
      _instance;
} _SendManyRequest_default_instance_;
class SendManyResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SendManyResponse>
      _instance;
} _SendManyResponse_default_instance_;
class SendFromManyRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SendFromManyRequest>
      _instance;
} _SendFromManyRequest_default_instance_;
class SendFromManyResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SendFromManyResponse>
      _instance;
} _SendFromManyResponse_default_instance_;
class AddNodeRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AddNodeRequest>
      _instance;
} _AddNodeRequest_default_instance_;
class AddNodeResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AddNodeResponse>
      _instance;
} _AddNodeResponse_default_instance_;
class GetPeerListRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetPeerListRequest>
      _instance;
} _GetPeerListRequest_default_instance_;
class GetPeerListResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetPeerListResponse>
      _instance;
} _GetPeerListResponse_default_instance_;
class GetPeerReputationRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetPeerReputationRequest>
      _instance;
} _GetPeerReputationRequest_default_instance_;
class GetPeerReputationResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetPeerReputationResponse>
      _instance;
} _GetPeerReputationResponse_default_instance_;
class SetPeerBlackListRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SetPeerBlackListRequest>
      _instance;
} _SetPeerBlackListRequest_default_instance_;
class SetPeerBlackListResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SetPeerBlackListResponse>
      _instance;
} _SetPeerBlackListResponse_default_instance_;
class GetPeerInfoRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetPeerInfoRequest>
      _instance;
} _GetPeerInfoRequest_default_instance_;
class GetPeerInfoResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetPeerInfoResponse>
      _instance;
} _GetPeerInfoResponse_default_instance_;
class GetConnectionCountRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetConnectionCountRequest>
      _instance;
} _GetConnectionCountRequest_default_instance_;
class GetConnectionCountResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetConnectionCountResponse>
      _instance;
} _GetConnectionCountResponse_default_instance_;
class GetDeltaRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetDeltaRequest>
      _instance;
} _GetDeltaRequest_default_instance_;
class GetDeltaResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetDeltaResponse>
      _instance;
} _GetDeltaResponse_default_instance_;
class GetMempoolRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetMempoolRequest>
      _instance;
} _GetMempoolRequest_default_instance_;
class GetMempoolResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetMempoolResponse>
      _instance;
} _GetMempoolResponse_default_instance_;
class SignMessageRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SignMessageRequest>
      _instance;
} _SignMessageRequest_default_instance_;
class SignMessageResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SignMessageResponse>
      _instance;
} _SignMessageResponse_default_instance_;
class VerifyMessageRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<VerifyMessageRequest>
      _instance;
} _VerifyMessageRequest_default_instance_;
class VerifyMessageResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<VerifyMessageResponse>
      _instance;
} _VerifyMessageResponse_default_instance_;
class ServiceStatusRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ServiceStatusRequest>
      _instance;
} _ServiceStatusRequest_default_instance_;
class ServiceStatusResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ServiceStatusResponse>
      _instance;
} _ServiceStatusResponse_default_instance_;
class AddFileToDfsRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AddFileToDfsRequest>
      _instance;
} _AddFileToDfsRequest_default_instance_;
class AddFileToDfsResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AddFileToDfsResponse>
      _instance;
} _AddFileToDfsResponse_default_instance_;
class TransferFileBytesRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TransferFileBytesRequest>
      _instance;
} _TransferFileBytesRequest_default_instance_;
class TransferFileBytesResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TransferFileBytesResponse>
      _instance;
} _TransferFileBytesResponse_default_instance_;
class RemovePeerRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RemovePeerRequest>
      _instance;
} _RemovePeerRequest_default_instance_;
class RemovePeerResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RemovePeerResponse>
      _instance;
} _RemovePeerResponse_default_instance_;
class GetPeerCountRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetPeerCountRequest>
      _instance;
} _GetPeerCountRequest_default_instance_;
class GetPeerCountResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetPeerCountResponse>
      _instance;
} _GetPeerCountResponse_default_instance_;
class GetFileFromDfsRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetFileFromDfsRequest>
      _instance;
} _GetFileFromDfsRequest_default_instance_;
class GetFileFromDfsResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetFileFromDfsResponse>
      _instance;
} _GetFileFromDfsResponse_default_instance_;
class SetPeerDataFolderRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SetPeerDataFolderRequest>
      _instance;
} _SetPeerDataFolderRequest_default_instance_;
class SetPeerDataFolderResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SetPeerDataFolderResponse>
      _instance;
} _SetPeerDataFolderResponse_default_instance_;
}  // namespace Node
}  // namespace Rpc
}  // namespace Protocol
}  // namespace Catalyst
namespace protobuf_Rpc_2eproto {
static void InitDefaultsVersionRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Catalyst::Protocol::Rpc::Node::_VersionRequest_default_instance_;
    new (ptr) ::Catalyst::Protocol::Rpc::Node::VersionRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Catalyst::Protocol::Rpc::Node::VersionRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_VersionRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsVersionRequest}, {}};

static void InitDefaultsVersionResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Catalyst::Protocol::Rpc::Node::_VersionResponse_default_instance_;
    new (ptr) ::Catalyst::Protocol::Rpc::Node::VersionResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Catalyst::Protocol::Rpc::Node::VersionResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_VersionResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsVersionResponse}, {}};

static void InitDefaultsGetInfoRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Catalyst::Protocol::Rpc::Node::_GetInfoRequest_default_instance_;
    new (ptr) ::Catalyst::Protocol::Rpc::Node::GetInfoRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Catalyst::Protocol::Rpc::Node::GetInfoRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GetInfoRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGetInfoRequest}, {}};

static void InitDefaultsGetInfoResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Catalyst::Protocol::Rpc::Node::_GetInfoResponse_default_instance_;
    new (ptr) ::Catalyst::Protocol::Rpc::Node::GetInfoResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Catalyst::Protocol::Rpc::Node::GetInfoResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GetInfoResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGetInfoResponse}, {}};

static void InitDefaultsCreateWalletRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Catalyst::Protocol::Rpc::Node::_CreateWalletRequest_default_instance_;
    new (ptr) ::Catalyst::Protocol::Rpc::Node::CreateWalletRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Catalyst::Protocol::Rpc::Node::CreateWalletRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CreateWalletRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCreateWalletRequest}, {}};

static void InitDefaultsCreateWalletResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Catalyst::Protocol::Rpc::Node::_CreateWalletResponse_default_instance_;
    new (ptr) ::Catalyst::Protocol::Rpc::Node::CreateWalletResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Catalyst::Protocol::Rpc::Node::CreateWalletResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CreateWalletResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCreateWalletResponse}, {}};

static void InitDefaultsListWalletRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Catalyst::Protocol::Rpc::Node::_ListWalletRequest_default_instance_;
    new (ptr) ::Catalyst::Protocol::Rpc::Node::ListWalletRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Catalyst::Protocol::Rpc::Node::ListWalletRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListWalletRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListWalletRequest}, {}};

static void InitDefaultsListWalletResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Catalyst::Protocol::Rpc::Node::_ListWalletResponse_default_instance_;
    new (ptr) ::Catalyst::Protocol::Rpc::Node::ListWalletResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Catalyst::Protocol::Rpc::Node::ListWalletResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListWalletResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListWalletResponse}, {}};

static void InitDefaultsCreateAddressRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Catalyst::Protocol::Rpc::Node::_CreateAddressRequest_default_instance_;
    new (ptr) ::Catalyst::Protocol::Rpc::Node::CreateAddressRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Catalyst::Protocol::Rpc::Node::CreateAddressRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CreateAddressRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCreateAddressRequest}, {}};

static void InitDefaultsCreateAddressResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Catalyst::Protocol::Rpc::Node::_CreateAddressResponse_default_instance_;
    new (ptr) ::Catalyst::Protocol::Rpc::Node::CreateAddressResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Catalyst::Protocol::Rpc::Node::CreateAddressResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CreateAddressResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCreateAddressResponse}, {}};

static void InitDefaultsGetAddressRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Catalyst::Protocol::Rpc::Node::_GetAddressRequest_default_instance_;
    new (ptr) ::Catalyst::Protocol::Rpc::Node::GetAddressRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Catalyst::Protocol::Rpc::Node::GetAddressRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GetAddressRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGetAddressRequest}, {}};

static void InitDefaultsGetAddressResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Catalyst::Protocol::Rpc::Node::_GetAddressResponse_default_instance_;
    new (ptr) ::Catalyst::Protocol::Rpc::Node::GetAddressResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Catalyst::Protocol::Rpc::Node::GetAddressResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GetAddressResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGetAddressResponse}, {}};

static void InitDefaultsListAddressRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Catalyst::Protocol::Rpc::Node::_ListAddressRequest_default_instance_;
    new (ptr) ::Catalyst::Protocol::Rpc::Node::ListAddressRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Catalyst::Protocol::Rpc::Node::ListAddressRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListAddressRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListAddressRequest}, {}};

static void InitDefaultsListAddressResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Catalyst::Protocol::Rpc::Node::_ListAddressResponse_default_instance_;
    new (ptr) ::Catalyst::Protocol::Rpc::Node::ListAddressResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Catalyst::Protocol::Rpc::Node::ListAddressResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListAddressResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListAddressResponse}, {}};

static void InitDefaultsValidateAddressRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Catalyst::Protocol::Rpc::Node::_ValidateAddressRequest_default_instance_;
    new (ptr) ::Catalyst::Protocol::Rpc::Node::ValidateAddressRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Catalyst::Protocol::Rpc::Node::ValidateAddressRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ValidateAddressRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsValidateAddressRequest}, {}};

static void InitDefaultsValidateAddressResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Catalyst::Protocol::Rpc::Node::_ValidateAddressResponse_default_instance_;
    new (ptr) ::Catalyst::Protocol::Rpc::Node::ValidateAddressResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Catalyst::Protocol::Rpc::Node::ValidateAddressResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ValidateAddressResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsValidateAddressResponse}, {}};

static void InitDefaultsGetBalanceRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Catalyst::Protocol::Rpc::Node::_GetBalanceRequest_default_instance_;
    new (ptr) ::Catalyst::Protocol::Rpc::Node::GetBalanceRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Catalyst::Protocol::Rpc::Node::GetBalanceRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GetBalanceRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGetBalanceRequest}, {}};

static void InitDefaultsGetBalanceResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Catalyst::Protocol::Rpc::Node::_GetBalanceResponse_default_instance_;
    new (ptr) ::Catalyst::Protocol::Rpc::Node::GetBalanceResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Catalyst::Protocol::Rpc::Node::GetBalanceResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GetBalanceResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGetBalanceResponse}, {}};

static void InitDefaultsCreateRawTransactionRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Catalyst::Protocol::Rpc::Node::_CreateRawTransactionRequest_default_instance_;
    new (ptr) ::Catalyst::Protocol::Rpc::Node::CreateRawTransactionRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Catalyst::Protocol::Rpc::Node::CreateRawTransactionRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CreateRawTransactionRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCreateRawTransactionRequest}, {}};

static void InitDefaultsCreateRawTransactionResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Catalyst::Protocol::Rpc::Node::_CreateRawTransactionResponse_default_instance_;
    new (ptr) ::Catalyst::Protocol::Rpc::Node::CreateRawTransactionResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Catalyst::Protocol::Rpc::Node::CreateRawTransactionResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CreateRawTransactionResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCreateRawTransactionResponse}, {}};

static void InitDefaultsSignRawTransactionRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Catalyst::Protocol::Rpc::Node::_SignRawTransactionRequest_default_instance_;
    new (ptr) ::Catalyst::Protocol::Rpc::Node::SignRawTransactionRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Catalyst::Protocol::Rpc::Node::SignRawTransactionRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SignRawTransactionRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSignRawTransactionRequest}, {}};

static void InitDefaultsSignRawTransactionResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Catalyst::Protocol::Rpc::Node::_SignRawTransactionResponse_default_instance_;
    new (ptr) ::Catalyst::Protocol::Rpc::Node::SignRawTransactionResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Catalyst::Protocol::Rpc::Node::SignRawTransactionResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SignRawTransactionResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSignRawTransactionResponse}, {}};

static void InitDefaultsDecodeRawTransactionRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Catalyst::Protocol::Rpc::Node::_DecodeRawTransactionRequest_default_instance_;
    new (ptr) ::Catalyst::Protocol::Rpc::Node::DecodeRawTransactionRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Catalyst::Protocol::Rpc::Node::DecodeRawTransactionRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DecodeRawTransactionRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDecodeRawTransactionRequest}, {}};

static void InitDefaultsDecodeRawTransactionResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Catalyst::Protocol::Rpc::Node::_DecodeRawTransactionResponse_default_instance_;
    new (ptr) ::Catalyst::Protocol::Rpc::Node::DecodeRawTransactionResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Catalyst::Protocol::Rpc::Node::DecodeRawTransactionResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DecodeRawTransactionResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDecodeRawTransactionResponse}, {}};

static void InitDefaultsBroadcastRawTransactionRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Catalyst::Protocol::Rpc::Node::_BroadcastRawTransactionRequest_default_instance_;
    new (ptr) ::Catalyst::Protocol::Rpc::Node::BroadcastRawTransactionRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Catalyst::Protocol::Rpc::Node::BroadcastRawTransactionRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_BroadcastRawTransactionRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsBroadcastRawTransactionRequest}, {
      &protobuf_Transaction_2eproto::scc_info_TransactionBroadcast.base,}};

static void InitDefaultsBroadcastRawTransactionResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Catalyst::Protocol::Rpc::Node::_BroadcastRawTransactionResponse_default_instance_;
    new (ptr) ::Catalyst::Protocol::Rpc::Node::BroadcastRawTransactionResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Catalyst::Protocol::Rpc::Node::BroadcastRawTransactionResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_BroadcastRawTransactionResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsBroadcastRawTransactionResponse}, {}};

static void InitDefaultsSendToRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Catalyst::Protocol::Rpc::Node::_SendToRequest_default_instance_;
    new (ptr) ::Catalyst::Protocol::Rpc::Node::SendToRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Catalyst::Protocol::Rpc::Node::SendToRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SendToRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSendToRequest}, {}};

static void InitDefaultsSendToResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Catalyst::Protocol::Rpc::Node::_SendToResponse_default_instance_;
    new (ptr) ::Catalyst::Protocol::Rpc::Node::SendToResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Catalyst::Protocol::Rpc::Node::SendToResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SendToResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSendToResponse}, {}};

static void InitDefaultsSendToFromRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Catalyst::Protocol::Rpc::Node::_SendToFromRequest_default_instance_;
    new (ptr) ::Catalyst::Protocol::Rpc::Node::SendToFromRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Catalyst::Protocol::Rpc::Node::SendToFromRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SendToFromRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSendToFromRequest}, {}};

static void InitDefaultsSendToFromResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Catalyst::Protocol::Rpc::Node::_SendToFromResponse_default_instance_;
    new (ptr) ::Catalyst::Protocol::Rpc::Node::SendToFromResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Catalyst::Protocol::Rpc::Node::SendToFromResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SendToFromResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSendToFromResponse}, {}};

static void InitDefaultsSendManyRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Catalyst::Protocol::Rpc::Node::_SendManyRequest_default_instance_;
    new (ptr) ::Catalyst::Protocol::Rpc::Node::SendManyRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Catalyst::Protocol::Rpc::Node::SendManyRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SendManyRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSendManyRequest}, {}};

static void InitDefaultsSendManyResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Catalyst::Protocol::Rpc::Node::_SendManyResponse_default_instance_;
    new (ptr) ::Catalyst::Protocol::Rpc::Node::SendManyResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Catalyst::Protocol::Rpc::Node::SendManyResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SendManyResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSendManyResponse}, {}};

static void InitDefaultsSendFromManyRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Catalyst::Protocol::Rpc::Node::_SendFromManyRequest_default_instance_;
    new (ptr) ::Catalyst::Protocol::Rpc::Node::SendFromManyRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Catalyst::Protocol::Rpc::Node::SendFromManyRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SendFromManyRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSendFromManyRequest}, {}};

static void InitDefaultsSendFromManyResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Catalyst::Protocol::Rpc::Node::_SendFromManyResponse_default_instance_;
    new (ptr) ::Catalyst::Protocol::Rpc::Node::SendFromManyResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Catalyst::Protocol::Rpc::Node::SendFromManyResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SendFromManyResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSendFromManyResponse}, {}};

static void InitDefaultsAddNodeRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Catalyst::Protocol::Rpc::Node::_AddNodeRequest_default_instance_;
    new (ptr) ::Catalyst::Protocol::Rpc::Node::AddNodeRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Catalyst::Protocol::Rpc::Node::AddNodeRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_AddNodeRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsAddNodeRequest}, {}};

static void InitDefaultsAddNodeResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Catalyst::Protocol::Rpc::Node::_AddNodeResponse_default_instance_;
    new (ptr) ::Catalyst::Protocol::Rpc::Node::AddNodeResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Catalyst::Protocol::Rpc::Node::AddNodeResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_AddNodeResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsAddNodeResponse}, {}};

static void InitDefaultsGetPeerListRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Catalyst::Protocol::Rpc::Node::_GetPeerListRequest_default_instance_;
    new (ptr) ::Catalyst::Protocol::Rpc::Node::GetPeerListRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Catalyst::Protocol::Rpc::Node::GetPeerListRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GetPeerListRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGetPeerListRequest}, {}};

static void InitDefaultsGetPeerListResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Catalyst::Protocol::Rpc::Node::_GetPeerListResponse_default_instance_;
    new (ptr) ::Catalyst::Protocol::Rpc::Node::GetPeerListResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Catalyst::Protocol::Rpc::Node::GetPeerListResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_GetPeerListResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsGetPeerListResponse}, {
      &protobuf_Common_2eproto::scc_info_PeerId.base,}};

static void InitDefaultsGetPeerReputationRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Catalyst::Protocol::Rpc::Node::_GetPeerReputationRequest_default_instance_;
    new (ptr) ::Catalyst::Protocol::Rpc::Node::GetPeerReputationRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Catalyst::Protocol::Rpc::Node::GetPeerReputationRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GetPeerReputationRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGetPeerReputationRequest}, {}};

static void InitDefaultsGetPeerReputationResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Catalyst::Protocol::Rpc::Node::_GetPeerReputationResponse_default_instance_;
    new (ptr) ::Catalyst::Protocol::Rpc::Node::GetPeerReputationResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Catalyst::Protocol::Rpc::Node::GetPeerReputationResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GetPeerReputationResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGetPeerReputationResponse}, {}};

static void InitDefaultsSetPeerBlackListRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Catalyst::Protocol::Rpc::Node::_SetPeerBlackListRequest_default_instance_;
    new (ptr) ::Catalyst::Protocol::Rpc::Node::SetPeerBlackListRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Catalyst::Protocol::Rpc::Node::SetPeerBlackListRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SetPeerBlackListRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSetPeerBlackListRequest}, {}};

static void InitDefaultsSetPeerBlackListResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Catalyst::Protocol::Rpc::Node::_SetPeerBlackListResponse_default_instance_;
    new (ptr) ::Catalyst::Protocol::Rpc::Node::SetPeerBlackListResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Catalyst::Protocol::Rpc::Node::SetPeerBlackListResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SetPeerBlackListResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSetPeerBlackListResponse}, {}};

static void InitDefaultsGetPeerInfoRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Catalyst::Protocol::Rpc::Node::_GetPeerInfoRequest_default_instance_;
    new (ptr) ::Catalyst::Protocol::Rpc::Node::GetPeerInfoRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Catalyst::Protocol::Rpc::Node::GetPeerInfoRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GetPeerInfoRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGetPeerInfoRequest}, {}};

static void InitDefaultsGetPeerInfoResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Catalyst::Protocol::Rpc::Node::_GetPeerInfoResponse_default_instance_;
    new (ptr) ::Catalyst::Protocol::Rpc::Node::GetPeerInfoResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Catalyst::Protocol::Rpc::Node::GetPeerInfoResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_GetPeerInfoResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsGetPeerInfoResponse}, {
      &protobuf_Common_2eproto::scc_info_PeerInfo.base,}};

static void InitDefaultsGetConnectionCountRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Catalyst::Protocol::Rpc::Node::_GetConnectionCountRequest_default_instance_;
    new (ptr) ::Catalyst::Protocol::Rpc::Node::GetConnectionCountRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Catalyst::Protocol::Rpc::Node::GetConnectionCountRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GetConnectionCountRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGetConnectionCountRequest}, {}};

static void InitDefaultsGetConnectionCountResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Catalyst::Protocol::Rpc::Node::_GetConnectionCountResponse_default_instance_;
    new (ptr) ::Catalyst::Protocol::Rpc::Node::GetConnectionCountResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Catalyst::Protocol::Rpc::Node::GetConnectionCountResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GetConnectionCountResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGetConnectionCountResponse}, {}};

static void InitDefaultsGetDeltaRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Catalyst::Protocol::Rpc::Node::_GetDeltaRequest_default_instance_;
    new (ptr) ::Catalyst::Protocol::Rpc::Node::GetDeltaRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Catalyst::Protocol::Rpc::Node::GetDeltaRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GetDeltaRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGetDeltaRequest}, {}};

static void InitDefaultsGetDeltaResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Catalyst::Protocol::Rpc::Node::_GetDeltaResponse_default_instance_;
    new (ptr) ::Catalyst::Protocol::Rpc::Node::GetDeltaResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Catalyst::Protocol::Rpc::Node::GetDeltaResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_GetDeltaResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsGetDeltaResponse}, {
      &protobuf_Deltas_2eproto::scc_info_Delta.base,}};

static void InitDefaultsGetMempoolRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Catalyst::Protocol::Rpc::Node::_GetMempoolRequest_default_instance_;
    new (ptr) ::Catalyst::Protocol::Rpc::Node::GetMempoolRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Catalyst::Protocol::Rpc::Node::GetMempoolRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GetMempoolRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGetMempoolRequest}, {}};

static void InitDefaultsGetMempoolResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Catalyst::Protocol::Rpc::Node::_GetMempoolResponse_default_instance_;
    new (ptr) ::Catalyst::Protocol::Rpc::Node::GetMempoolResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Catalyst::Protocol::Rpc::Node::GetMempoolResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_GetMempoolResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsGetMempoolResponse}, {
      &protobuf_Transaction_2eproto::scc_info_TransactionBroadcast.base,}};

static void InitDefaultsSignMessageRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Catalyst::Protocol::Rpc::Node::_SignMessageRequest_default_instance_;
    new (ptr) ::Catalyst::Protocol::Rpc::Node::SignMessageRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Catalyst::Protocol::Rpc::Node::SignMessageRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_SignMessageRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsSignMessageRequest}, {
      &protobuf_Common_2eproto::scc_info_SigningContext.base,}};

static void InitDefaultsSignMessageResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Catalyst::Protocol::Rpc::Node::_SignMessageResponse_default_instance_;
    new (ptr) ::Catalyst::Protocol::Rpc::Node::SignMessageResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Catalyst::Protocol::Rpc::Node::SignMessageResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SignMessageResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSignMessageResponse}, {}};

static void InitDefaultsVerifyMessageRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Catalyst::Protocol::Rpc::Node::_VerifyMessageRequest_default_instance_;
    new (ptr) ::Catalyst::Protocol::Rpc::Node::VerifyMessageRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Catalyst::Protocol::Rpc::Node::VerifyMessageRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_VerifyMessageRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsVerifyMessageRequest}, {
      &protobuf_Common_2eproto::scc_info_SigningContext.base,}};

static void InitDefaultsVerifyMessageResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Catalyst::Protocol::Rpc::Node::_VerifyMessageResponse_default_instance_;
    new (ptr) ::Catalyst::Protocol::Rpc::Node::VerifyMessageResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Catalyst::Protocol::Rpc::Node::VerifyMessageResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_VerifyMessageResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsVerifyMessageResponse}, {}};

static void InitDefaultsServiceStatusRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Catalyst::Protocol::Rpc::Node::_ServiceStatusRequest_default_instance_;
    new (ptr) ::Catalyst::Protocol::Rpc::Node::ServiceStatusRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Catalyst::Protocol::Rpc::Node::ServiceStatusRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ServiceStatusRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsServiceStatusRequest}, {}};

static void InitDefaultsServiceStatusResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Catalyst::Protocol::Rpc::Node::_ServiceStatusResponse_default_instance_;
    new (ptr) ::Catalyst::Protocol::Rpc::Node::ServiceStatusResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Catalyst::Protocol::Rpc::Node::ServiceStatusResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ServiceStatusResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsServiceStatusResponse}, {}};

static void InitDefaultsAddFileToDfsRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Catalyst::Protocol::Rpc::Node::_AddFileToDfsRequest_default_instance_;
    new (ptr) ::Catalyst::Protocol::Rpc::Node::AddFileToDfsRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Catalyst::Protocol::Rpc::Node::AddFileToDfsRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_AddFileToDfsRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsAddFileToDfsRequest}, {}};

static void InitDefaultsAddFileToDfsResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Catalyst::Protocol::Rpc::Node::_AddFileToDfsResponse_default_instance_;
    new (ptr) ::Catalyst::Protocol::Rpc::Node::AddFileToDfsResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Catalyst::Protocol::Rpc::Node::AddFileToDfsResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_AddFileToDfsResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsAddFileToDfsResponse}, {}};

static void InitDefaultsTransferFileBytesRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Catalyst::Protocol::Rpc::Node::_TransferFileBytesRequest_default_instance_;
    new (ptr) ::Catalyst::Protocol::Rpc::Node::TransferFileBytesRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Catalyst::Protocol::Rpc::Node::TransferFileBytesRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_TransferFileBytesRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsTransferFileBytesRequest}, {}};

static void InitDefaultsTransferFileBytesResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Catalyst::Protocol::Rpc::Node::_TransferFileBytesResponse_default_instance_;
    new (ptr) ::Catalyst::Protocol::Rpc::Node::TransferFileBytesResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Catalyst::Protocol::Rpc::Node::TransferFileBytesResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_TransferFileBytesResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsTransferFileBytesResponse}, {}};

static void InitDefaultsRemovePeerRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Catalyst::Protocol::Rpc::Node::_RemovePeerRequest_default_instance_;
    new (ptr) ::Catalyst::Protocol::Rpc::Node::RemovePeerRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Catalyst::Protocol::Rpc::Node::RemovePeerRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_RemovePeerRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRemovePeerRequest}, {}};

static void InitDefaultsRemovePeerResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Catalyst::Protocol::Rpc::Node::_RemovePeerResponse_default_instance_;
    new (ptr) ::Catalyst::Protocol::Rpc::Node::RemovePeerResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Catalyst::Protocol::Rpc::Node::RemovePeerResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_RemovePeerResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRemovePeerResponse}, {}};

static void InitDefaultsGetPeerCountRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Catalyst::Protocol::Rpc::Node::_GetPeerCountRequest_default_instance_;
    new (ptr) ::Catalyst::Protocol::Rpc::Node::GetPeerCountRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Catalyst::Protocol::Rpc::Node::GetPeerCountRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GetPeerCountRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGetPeerCountRequest}, {}};

static void InitDefaultsGetPeerCountResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Catalyst::Protocol::Rpc::Node::_GetPeerCountResponse_default_instance_;
    new (ptr) ::Catalyst::Protocol::Rpc::Node::GetPeerCountResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Catalyst::Protocol::Rpc::Node::GetPeerCountResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GetPeerCountResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGetPeerCountResponse}, {}};

static void InitDefaultsGetFileFromDfsRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Catalyst::Protocol::Rpc::Node::_GetFileFromDfsRequest_default_instance_;
    new (ptr) ::Catalyst::Protocol::Rpc::Node::GetFileFromDfsRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Catalyst::Protocol::Rpc::Node::GetFileFromDfsRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GetFileFromDfsRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGetFileFromDfsRequest}, {}};

static void InitDefaultsGetFileFromDfsResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Catalyst::Protocol::Rpc::Node::_GetFileFromDfsResponse_default_instance_;
    new (ptr) ::Catalyst::Protocol::Rpc::Node::GetFileFromDfsResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Catalyst::Protocol::Rpc::Node::GetFileFromDfsResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GetFileFromDfsResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGetFileFromDfsResponse}, {}};

static void InitDefaultsSetPeerDataFolderRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Catalyst::Protocol::Rpc::Node::_SetPeerDataFolderRequest_default_instance_;
    new (ptr) ::Catalyst::Protocol::Rpc::Node::SetPeerDataFolderRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Catalyst::Protocol::Rpc::Node::SetPeerDataFolderRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SetPeerDataFolderRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSetPeerDataFolderRequest}, {}};

static void InitDefaultsSetPeerDataFolderResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Catalyst::Protocol::Rpc::Node::_SetPeerDataFolderResponse_default_instance_;
    new (ptr) ::Catalyst::Protocol::Rpc::Node::SetPeerDataFolderResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Catalyst::Protocol::Rpc::Node::SetPeerDataFolderResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SetPeerDataFolderResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSetPeerDataFolderResponse}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_VersionRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_VersionResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetInfoRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetInfoResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CreateWalletRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CreateWalletResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListWalletRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListWalletResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CreateAddressRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CreateAddressResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetAddressRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetAddressResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListAddressRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListAddressResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ValidateAddressRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ValidateAddressResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetBalanceRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetBalanceResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CreateRawTransactionRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CreateRawTransactionResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SignRawTransactionRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SignRawTransactionResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DecodeRawTransactionRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DecodeRawTransactionResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_BroadcastRawTransactionRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_BroadcastRawTransactionResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SendToRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SendToResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SendToFromRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SendToFromResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SendManyRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SendManyResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SendFromManyRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SendFromManyResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_AddNodeRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_AddNodeResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetPeerListRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetPeerListResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetPeerReputationRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetPeerReputationResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SetPeerBlackListRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SetPeerBlackListResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetPeerInfoRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetPeerInfoResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetConnectionCountRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetConnectionCountResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetDeltaRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetDeltaResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetMempoolRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetMempoolResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SignMessageRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SignMessageResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_VerifyMessageRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_VerifyMessageResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ServiceStatusRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ServiceStatusResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_AddFileToDfsRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_AddFileToDfsResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TransferFileBytesRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TransferFileBytesResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RemovePeerRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RemovePeerResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetPeerCountRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetPeerCountResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetFileFromDfsRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetFileFromDfsResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SetPeerDataFolderRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SetPeerDataFolderResponse.base);
}

::google::protobuf::Metadata file_level_metadata[68];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Catalyst::Protocol::Rpc::Node::VersionRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Catalyst::Protocol::Rpc::Node::VersionRequest, query_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Catalyst::Protocol::Rpc::Node::VersionResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Catalyst::Protocol::Rpc::Node::VersionResponse, version_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Catalyst::Protocol::Rpc::Node::GetInfoRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Catalyst::Protocol::Rpc::Node::GetInfoRequest, query_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Catalyst::Protocol::Rpc::Node::GetInfoResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Catalyst::Protocol::Rpc::Node::GetInfoResponse, query_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Catalyst::Protocol::Rpc::Node::CreateWalletRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Catalyst::Protocol::Rpc::Node::CreateWalletRequest, query_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Catalyst::Protocol::Rpc::Node::CreateWalletResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Catalyst::Protocol::Rpc::Node::CreateWalletResponse, query_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Catalyst::Protocol::Rpc::Node::ListWalletRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Catalyst::Protocol::Rpc::Node::ListWalletRequest, query_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Catalyst::Protocol::Rpc::Node::ListWalletResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Catalyst::Protocol::Rpc::Node::ListWalletResponse, query_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Catalyst::Protocol::Rpc::Node::CreateAddressRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Catalyst::Protocol::Rpc::Node::CreateAddressRequest, query_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Catalyst::Protocol::Rpc::Node::CreateAddressResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Catalyst::Protocol::Rpc::Node::CreateAddressResponse, query_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Catalyst::Protocol::Rpc::Node::GetAddressRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Catalyst::Protocol::Rpc::Node::GetAddressRequest, query_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Catalyst::Protocol::Rpc::Node::GetAddressResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Catalyst::Protocol::Rpc::Node::GetAddressResponse, query_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Catalyst::Protocol::Rpc::Node::ListAddressRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Catalyst::Protocol::Rpc::Node::ListAddressRequest, query_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Catalyst::Protocol::Rpc::Node::ListAddressResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Catalyst::Protocol::Rpc::Node::ListAddressResponse, query_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Catalyst::Protocol::Rpc::Node::ValidateAddressRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Catalyst::Protocol::Rpc::Node::ValidateAddressRequest, query_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Catalyst::Protocol::Rpc::Node::ValidateAddressResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Catalyst::Protocol::Rpc::Node::ValidateAddressResponse, query_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Catalyst::Protocol::Rpc::Node::GetBalanceRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Catalyst::Protocol::Rpc::Node::GetBalanceRequest, query_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Catalyst::Protocol::Rpc::Node::GetBalanceResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Catalyst::Protocol::Rpc::Node::GetBalanceResponse, query_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Catalyst::Protocol::Rpc::Node::CreateRawTransactionRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Catalyst::Protocol::Rpc::Node::CreateRawTransactionRequest, query_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Catalyst::Protocol::Rpc::Node::CreateRawTransactionResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Catalyst::Protocol::Rpc::Node::CreateRawTransactionResponse, query_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Catalyst::Protocol::Rpc::Node::SignRawTransactionRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Catalyst::Protocol::Rpc::Node::SignRawTransactionRequest, query_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Catalyst::Protocol::Rpc::Node::SignRawTransactionResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Catalyst::Protocol::Rpc::Node::SignRawTransactionResponse, query_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Catalyst::Protocol::Rpc::Node::DecodeRawTransactionRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Catalyst::Protocol::Rpc::Node::DecodeRawTransactionRequest, query_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Catalyst::Protocol::Rpc::Node::DecodeRawTransactionResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Catalyst::Protocol::Rpc::Node::DecodeRawTransactionResponse, query_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Catalyst::Protocol::Rpc::Node::BroadcastRawTransactionRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Catalyst::Protocol::Rpc::Node::BroadcastRawTransactionRequest, transaction_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Catalyst::Protocol::Rpc::Node::BroadcastRawTransactionResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Catalyst::Protocol::Rpc::Node::BroadcastRawTransactionResponse, responsecode_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Catalyst::Protocol::Rpc::Node::SendToRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Catalyst::Protocol::Rpc::Node::SendToRequest, query_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Catalyst::Protocol::Rpc::Node::SendToResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Catalyst::Protocol::Rpc::Node::SendToResponse, query_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Catalyst::Protocol::Rpc::Node::SendToFromRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Catalyst::Protocol::Rpc::Node::SendToFromRequest, query_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Catalyst::Protocol::Rpc::Node::SendToFromResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Catalyst::Protocol::Rpc::Node::SendToFromResponse, query_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Catalyst::Protocol::Rpc::Node::SendManyRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Catalyst::Protocol::Rpc::Node::SendManyRequest, query_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Catalyst::Protocol::Rpc::Node::SendManyResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Catalyst::Protocol::Rpc::Node::SendManyResponse, query_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Catalyst::Protocol::Rpc::Node::SendFromManyRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Catalyst::Protocol::Rpc::Node::SendFromManyRequest, query_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Catalyst::Protocol::Rpc::Node::SendFromManyResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Catalyst::Protocol::Rpc::Node::SendFromManyResponse, query_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Catalyst::Protocol::Rpc::Node::AddNodeRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Catalyst::Protocol::Rpc::Node::AddNodeRequest, query_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Catalyst::Protocol::Rpc::Node::AddNodeResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Catalyst::Protocol::Rpc::Node::AddNodeResponse, query_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Catalyst::Protocol::Rpc::Node::GetPeerListRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Catalyst::Protocol::Rpc::Node::GetPeerListResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Catalyst::Protocol::Rpc::Node::GetPeerListResponse, peers_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Catalyst::Protocol::Rpc::Node::GetPeerReputationRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Catalyst::Protocol::Rpc::Node::GetPeerReputationRequest, publickey_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Catalyst::Protocol::Rpc::Node::GetPeerReputationRequest, ip_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Catalyst::Protocol::Rpc::Node::GetPeerReputationResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Catalyst::Protocol::Rpc::Node::GetPeerReputationResponse, reputation_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Catalyst::Protocol::Rpc::Node::SetPeerBlackListRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Catalyst::Protocol::Rpc::Node::SetPeerBlackListRequest, publickey_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Catalyst::Protocol::Rpc::Node::SetPeerBlackListRequest, ip_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Catalyst::Protocol::Rpc::Node::SetPeerBlackListRequest, blacklist_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Catalyst::Protocol::Rpc::Node::SetPeerBlackListResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Catalyst::Protocol::Rpc::Node::SetPeerBlackListResponse, publickey_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Catalyst::Protocol::Rpc::Node::SetPeerBlackListResponse, ip_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Catalyst::Protocol::Rpc::Node::SetPeerBlackListResponse, blacklist_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Catalyst::Protocol::Rpc::Node::GetPeerInfoRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Catalyst::Protocol::Rpc::Node::GetPeerInfoRequest, publickey_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Catalyst::Protocol::Rpc::Node::GetPeerInfoRequest, ip_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Catalyst::Protocol::Rpc::Node::GetPeerInfoResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Catalyst::Protocol::Rpc::Node::GetPeerInfoResponse, peerinfo_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Catalyst::Protocol::Rpc::Node::GetConnectionCountRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Catalyst::Protocol::Rpc::Node::GetConnectionCountRequest, query_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Catalyst::Protocol::Rpc::Node::GetConnectionCountResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Catalyst::Protocol::Rpc::Node::GetConnectionCountResponse, query_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Catalyst::Protocol::Rpc::Node::GetDeltaRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Catalyst::Protocol::Rpc::Node::GetDeltaRequest, deltadfshash_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Catalyst::Protocol::Rpc::Node::GetDeltaResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Catalyst::Protocol::Rpc::Node::GetDeltaResponse, delta_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Catalyst::Protocol::Rpc::Node::GetMempoolRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Catalyst::Protocol::Rpc::Node::GetMempoolRequest, query_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Catalyst::Protocol::Rpc::Node::GetMempoolResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Catalyst::Protocol::Rpc::Node::GetMempoolResponse, transactions_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Catalyst::Protocol::Rpc::Node::SignMessageRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Catalyst::Protocol::Rpc::Node::SignMessageRequest, message_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Catalyst::Protocol::Rpc::Node::SignMessageRequest, keyid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Catalyst::Protocol::Rpc::Node::SignMessageRequest, signingcontext_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Catalyst::Protocol::Rpc::Node::SignMessageResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Catalyst::Protocol::Rpc::Node::SignMessageResponse, signature_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Catalyst::Protocol::Rpc::Node::SignMessageResponse, publickey_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Catalyst::Protocol::Rpc::Node::SignMessageResponse, originalmessage_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Catalyst::Protocol::Rpc::Node::VerifyMessageRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Catalyst::Protocol::Rpc::Node::VerifyMessageRequest, signature_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Catalyst::Protocol::Rpc::Node::VerifyMessageRequest, publickey_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Catalyst::Protocol::Rpc::Node::VerifyMessageRequest, message_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Catalyst::Protocol::Rpc::Node::VerifyMessageRequest, signingcontext_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Catalyst::Protocol::Rpc::Node::VerifyMessageResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Catalyst::Protocol::Rpc::Node::VerifyMessageResponse, issignedbykey_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Catalyst::Protocol::Rpc::Node::ServiceStatusRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Catalyst::Protocol::Rpc::Node::ServiceStatusRequest, query_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Catalyst::Protocol::Rpc::Node::ServiceStatusResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Catalyst::Protocol::Rpc::Node::ServiceStatusResponse, query_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Catalyst::Protocol::Rpc::Node::AddFileToDfsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Catalyst::Protocol::Rpc::Node::AddFileToDfsRequest, filesize_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Catalyst::Protocol::Rpc::Node::AddFileToDfsRequest, filename_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Catalyst::Protocol::Rpc::Node::AddFileToDfsRequest, node_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Catalyst::Protocol::Rpc::Node::AddFileToDfsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Catalyst::Protocol::Rpc::Node::AddFileToDfsResponse, responsecode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Catalyst::Protocol::Rpc::Node::AddFileToDfsResponse, dfshash_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Catalyst::Protocol::Rpc::Node::TransferFileBytesRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Catalyst::Protocol::Rpc::Node::TransferFileBytesRequest, chunkid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Catalyst::Protocol::Rpc::Node::TransferFileBytesRequest, chunkbytes_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Catalyst::Protocol::Rpc::Node::TransferFileBytesRequest, correlationfilename_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Catalyst::Protocol::Rpc::Node::TransferFileBytesResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Catalyst::Protocol::Rpc::Node::TransferFileBytesResponse, responsecode_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Catalyst::Protocol::Rpc::Node::RemovePeerRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Catalyst::Protocol::Rpc::Node::RemovePeerRequest, peerip_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Catalyst::Protocol::Rpc::Node::RemovePeerRequest, publickey_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Catalyst::Protocol::Rpc::Node::RemovePeerResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Catalyst::Protocol::Rpc::Node::RemovePeerResponse, deletedcount_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Catalyst::Protocol::Rpc::Node::GetPeerCountRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Catalyst::Protocol::Rpc::Node::GetPeerCountResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Catalyst::Protocol::Rpc::Node::GetPeerCountResponse, peercount_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Catalyst::Protocol::Rpc::Node::GetFileFromDfsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Catalyst::Protocol::Rpc::Node::GetFileFromDfsRequest, dfshash_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Catalyst::Protocol::Rpc::Node::GetFileFromDfsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Catalyst::Protocol::Rpc::Node::GetFileFromDfsResponse, filesize_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Catalyst::Protocol::Rpc::Node::GetFileFromDfsResponse, responsecode_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Catalyst::Protocol::Rpc::Node::SetPeerDataFolderRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Catalyst::Protocol::Rpc::Node::SetPeerDataFolderRequest, datafolder_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Catalyst::Protocol::Rpc::Node::SetPeerDataFolderResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Catalyst::Protocol::Rpc::Node::SetPeerDataFolderResponse, query_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::Catalyst::Protocol::Rpc::Node::VersionRequest)},
  { 6, -1, sizeof(::Catalyst::Protocol::Rpc::Node::VersionResponse)},
  { 12, -1, sizeof(::Catalyst::Protocol::Rpc::Node::GetInfoRequest)},
  { 18, -1, sizeof(::Catalyst::Protocol::Rpc::Node::GetInfoResponse)},
  { 24, -1, sizeof(::Catalyst::Protocol::Rpc::Node::CreateWalletRequest)},
  { 30, -1, sizeof(::Catalyst::Protocol::Rpc::Node::CreateWalletResponse)},
  { 36, -1, sizeof(::Catalyst::Protocol::Rpc::Node::ListWalletRequest)},
  { 42, -1, sizeof(::Catalyst::Protocol::Rpc::Node::ListWalletResponse)},
  { 48, -1, sizeof(::Catalyst::Protocol::Rpc::Node::CreateAddressRequest)},
  { 54, -1, sizeof(::Catalyst::Protocol::Rpc::Node::CreateAddressResponse)},
  { 60, -1, sizeof(::Catalyst::Protocol::Rpc::Node::GetAddressRequest)},
  { 66, -1, sizeof(::Catalyst::Protocol::Rpc::Node::GetAddressResponse)},
  { 72, -1, sizeof(::Catalyst::Protocol::Rpc::Node::ListAddressRequest)},
  { 78, -1, sizeof(::Catalyst::Protocol::Rpc::Node::ListAddressResponse)},
  { 84, -1, sizeof(::Catalyst::Protocol::Rpc::Node::ValidateAddressRequest)},
  { 90, -1, sizeof(::Catalyst::Protocol::Rpc::Node::ValidateAddressResponse)},
  { 96, -1, sizeof(::Catalyst::Protocol::Rpc::Node::GetBalanceRequest)},
  { 102, -1, sizeof(::Catalyst::Protocol::Rpc::Node::GetBalanceResponse)},
  { 108, -1, sizeof(::Catalyst::Protocol::Rpc::Node::CreateRawTransactionRequest)},
  { 114, -1, sizeof(::Catalyst::Protocol::Rpc::Node::CreateRawTransactionResponse)},
  { 120, -1, sizeof(::Catalyst::Protocol::Rpc::Node::SignRawTransactionRequest)},
  { 126, -1, sizeof(::Catalyst::Protocol::Rpc::Node::SignRawTransactionResponse)},
  { 132, -1, sizeof(::Catalyst::Protocol::Rpc::Node::DecodeRawTransactionRequest)},
  { 138, -1, sizeof(::Catalyst::Protocol::Rpc::Node::DecodeRawTransactionResponse)},
  { 144, -1, sizeof(::Catalyst::Protocol::Rpc::Node::BroadcastRawTransactionRequest)},
  { 150, -1, sizeof(::Catalyst::Protocol::Rpc::Node::BroadcastRawTransactionResponse)},
  { 156, -1, sizeof(::Catalyst::Protocol::Rpc::Node::SendToRequest)},
  { 162, -1, sizeof(::Catalyst::Protocol::Rpc::Node::SendToResponse)},
  { 168, -1, sizeof(::Catalyst::Protocol::Rpc::Node::SendToFromRequest)},
  { 174, -1, sizeof(::Catalyst::Protocol::Rpc::Node::SendToFromResponse)},
  { 180, -1, sizeof(::Catalyst::Protocol::Rpc::Node::SendManyRequest)},
  { 186, -1, sizeof(::Catalyst::Protocol::Rpc::Node::SendManyResponse)},
  { 192, -1, sizeof(::Catalyst::Protocol::Rpc::Node::SendFromManyRequest)},
  { 198, -1, sizeof(::Catalyst::Protocol::Rpc::Node::SendFromManyResponse)},
  { 204, -1, sizeof(::Catalyst::Protocol::Rpc::Node::AddNodeRequest)},
  { 210, -1, sizeof(::Catalyst::Protocol::Rpc::Node::AddNodeResponse)},
  { 216, -1, sizeof(::Catalyst::Protocol::Rpc::Node::GetPeerListRequest)},
  { 221, -1, sizeof(::Catalyst::Protocol::Rpc::Node::GetPeerListResponse)},
  { 227, -1, sizeof(::Catalyst::Protocol::Rpc::Node::GetPeerReputationRequest)},
  { 234, -1, sizeof(::Catalyst::Protocol::Rpc::Node::GetPeerReputationResponse)},
  { 240, -1, sizeof(::Catalyst::Protocol::Rpc::Node::SetPeerBlackListRequest)},
  { 248, -1, sizeof(::Catalyst::Protocol::Rpc::Node::SetPeerBlackListResponse)},
  { 256, -1, sizeof(::Catalyst::Protocol::Rpc::Node::GetPeerInfoRequest)},
  { 263, -1, sizeof(::Catalyst::Protocol::Rpc::Node::GetPeerInfoResponse)},
  { 269, -1, sizeof(::Catalyst::Protocol::Rpc::Node::GetConnectionCountRequest)},
  { 275, -1, sizeof(::Catalyst::Protocol::Rpc::Node::GetConnectionCountResponse)},
  { 281, -1, sizeof(::Catalyst::Protocol::Rpc::Node::GetDeltaRequest)},
  { 287, -1, sizeof(::Catalyst::Protocol::Rpc::Node::GetDeltaResponse)},
  { 293, -1, sizeof(::Catalyst::Protocol::Rpc::Node::GetMempoolRequest)},
  { 299, -1, sizeof(::Catalyst::Protocol::Rpc::Node::GetMempoolResponse)},
  { 305, -1, sizeof(::Catalyst::Protocol::Rpc::Node::SignMessageRequest)},
  { 313, -1, sizeof(::Catalyst::Protocol::Rpc::Node::SignMessageResponse)},
  { 321, -1, sizeof(::Catalyst::Protocol::Rpc::Node::VerifyMessageRequest)},
  { 330, -1, sizeof(::Catalyst::Protocol::Rpc::Node::VerifyMessageResponse)},
  { 336, -1, sizeof(::Catalyst::Protocol::Rpc::Node::ServiceStatusRequest)},
  { 342, -1, sizeof(::Catalyst::Protocol::Rpc::Node::ServiceStatusResponse)},
  { 348, -1, sizeof(::Catalyst::Protocol::Rpc::Node::AddFileToDfsRequest)},
  { 356, -1, sizeof(::Catalyst::Protocol::Rpc::Node::AddFileToDfsResponse)},
  { 363, -1, sizeof(::Catalyst::Protocol::Rpc::Node::TransferFileBytesRequest)},
  { 371, -1, sizeof(::Catalyst::Protocol::Rpc::Node::TransferFileBytesResponse)},
  { 377, -1, sizeof(::Catalyst::Protocol::Rpc::Node::RemovePeerRequest)},
  { 384, -1, sizeof(::Catalyst::Protocol::Rpc::Node::RemovePeerResponse)},
  { 390, -1, sizeof(::Catalyst::Protocol::Rpc::Node::GetPeerCountRequest)},
  { 395, -1, sizeof(::Catalyst::Protocol::Rpc::Node::GetPeerCountResponse)},
  { 401, -1, sizeof(::Catalyst::Protocol::Rpc::Node::GetFileFromDfsRequest)},
  { 407, -1, sizeof(::Catalyst::Protocol::Rpc::Node::GetFileFromDfsResponse)},
  { 414, -1, sizeof(::Catalyst::Protocol::Rpc::Node::SetPeerDataFolderRequest)},
  { 420, -1, sizeof(::Catalyst::Protocol::Rpc::Node::SetPeerDataFolderResponse)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::Catalyst::Protocol::Rpc::Node::_VersionRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Catalyst::Protocol::Rpc::Node::_VersionResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Catalyst::Protocol::Rpc::Node::_GetInfoRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Catalyst::Protocol::Rpc::Node::_GetInfoResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Catalyst::Protocol::Rpc::Node::_CreateWalletRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Catalyst::Protocol::Rpc::Node::_CreateWalletResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Catalyst::Protocol::Rpc::Node::_ListWalletRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Catalyst::Protocol::Rpc::Node::_ListWalletResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Catalyst::Protocol::Rpc::Node::_CreateAddressRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Catalyst::Protocol::Rpc::Node::_CreateAddressResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Catalyst::Protocol::Rpc::Node::_GetAddressRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Catalyst::Protocol::Rpc::Node::_GetAddressResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Catalyst::Protocol::Rpc::Node::_ListAddressRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Catalyst::Protocol::Rpc::Node::_ListAddressResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Catalyst::Protocol::Rpc::Node::_ValidateAddressRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Catalyst::Protocol::Rpc::Node::_ValidateAddressResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Catalyst::Protocol::Rpc::Node::_GetBalanceRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Catalyst::Protocol::Rpc::Node::_GetBalanceResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Catalyst::Protocol::Rpc::Node::_CreateRawTransactionRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Catalyst::Protocol::Rpc::Node::_CreateRawTransactionResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Catalyst::Protocol::Rpc::Node::_SignRawTransactionRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Catalyst::Protocol::Rpc::Node::_SignRawTransactionResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Catalyst::Protocol::Rpc::Node::_DecodeRawTransactionRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Catalyst::Protocol::Rpc::Node::_DecodeRawTransactionResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Catalyst::Protocol::Rpc::Node::_BroadcastRawTransactionRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Catalyst::Protocol::Rpc::Node::_BroadcastRawTransactionResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Catalyst::Protocol::Rpc::Node::_SendToRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Catalyst::Protocol::Rpc::Node::_SendToResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Catalyst::Protocol::Rpc::Node::_SendToFromRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Catalyst::Protocol::Rpc::Node::_SendToFromResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Catalyst::Protocol::Rpc::Node::_SendManyRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Catalyst::Protocol::Rpc::Node::_SendManyResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Catalyst::Protocol::Rpc::Node::_SendFromManyRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Catalyst::Protocol::Rpc::Node::_SendFromManyResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Catalyst::Protocol::Rpc::Node::_AddNodeRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Catalyst::Protocol::Rpc::Node::_AddNodeResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Catalyst::Protocol::Rpc::Node::_GetPeerListRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Catalyst::Protocol::Rpc::Node::_GetPeerListResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Catalyst::Protocol::Rpc::Node::_GetPeerReputationRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Catalyst::Protocol::Rpc::Node::_GetPeerReputationResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Catalyst::Protocol::Rpc::Node::_SetPeerBlackListRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Catalyst::Protocol::Rpc::Node::_SetPeerBlackListResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Catalyst::Protocol::Rpc::Node::_GetPeerInfoRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Catalyst::Protocol::Rpc::Node::_GetPeerInfoResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Catalyst::Protocol::Rpc::Node::_GetConnectionCountRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Catalyst::Protocol::Rpc::Node::_GetConnectionCountResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Catalyst::Protocol::Rpc::Node::_GetDeltaRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Catalyst::Protocol::Rpc::Node::_GetDeltaResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Catalyst::Protocol::Rpc::Node::_GetMempoolRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Catalyst::Protocol::Rpc::Node::_GetMempoolResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Catalyst::Protocol::Rpc::Node::_SignMessageRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Catalyst::Protocol::Rpc::Node::_SignMessageResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Catalyst::Protocol::Rpc::Node::_VerifyMessageRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Catalyst::Protocol::Rpc::Node::_VerifyMessageResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Catalyst::Protocol::Rpc::Node::_ServiceStatusRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Catalyst::Protocol::Rpc::Node::_ServiceStatusResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Catalyst::Protocol::Rpc::Node::_AddFileToDfsRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Catalyst::Protocol::Rpc::Node::_AddFileToDfsResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Catalyst::Protocol::Rpc::Node::_TransferFileBytesRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Catalyst::Protocol::Rpc::Node::_TransferFileBytesResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Catalyst::Protocol::Rpc::Node::_RemovePeerRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Catalyst::Protocol::Rpc::Node::_RemovePeerResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Catalyst::Protocol::Rpc::Node::_GetPeerCountRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Catalyst::Protocol::Rpc::Node::_GetPeerCountResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Catalyst::Protocol::Rpc::Node::_GetFileFromDfsRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Catalyst::Protocol::Rpc::Node::_GetFileFromDfsResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Catalyst::Protocol::Rpc::Node::_SetPeerDataFolderRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Catalyst::Protocol::Rpc::Node::_SetPeerDataFolderResponse_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "Rpc.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 68);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\tRpc.proto\022\032Catalyst.Protocol.Rpc.Node\032"
      "\014Common.proto\032\014Deltas.proto\032\021Transaction"
      ".proto\"\037\n\016VersionRequest\022\r\n\005query\030\001 \001(\010\""
      "\"\n\017VersionResponse\022\017\n\007version\030\001 \001(\t\"\037\n\016G"
      "etInfoRequest\022\r\n\005query\030\001 \001(\010\" \n\017GetInfoR"
      "esponse\022\r\n\005query\030\001 \001(\t\"$\n\023CreateWalletRe"
      "quest\022\r\n\005query\030\001 \001(\010\"%\n\024CreateWalletResp"
      "onse\022\r\n\005query\030\001 \001(\t\"\"\n\021ListWalletRequest"
      "\022\r\n\005query\030\001 \001(\010\"#\n\022ListWalletResponse\022\r\n"
      "\005query\030\001 \001(\t\"%\n\024CreateAddressRequest\022\r\n\005"
      "query\030\001 \001(\010\"&\n\025CreateAddressResponse\022\r\n\005"
      "query\030\001 \001(\t\"\"\n\021GetAddressRequest\022\r\n\005quer"
      "y\030\001 \001(\010\"#\n\022GetAddressResponse\022\r\n\005query\030\001"
      " \001(\t\"#\n\022ListAddressRequest\022\r\n\005query\030\001 \001("
      "\010\"$\n\023ListAddressResponse\022\r\n\005query\030\001 \001(\t\""
      "\'\n\026ValidateAddressRequest\022\r\n\005query\030\001 \001(\010"
      "\"(\n\027ValidateAddressResponse\022\r\n\005query\030\001 \001"
      "(\t\"\"\n\021GetBalanceRequest\022\r\n\005query\030\001 \001(\010\"#"
      "\n\022GetBalanceResponse\022\r\n\005query\030\001 \001(\t\",\n\033C"
      "reateRawTransactionRequest\022\r\n\005query\030\001 \001("
      "\010\"-\n\034CreateRawTransactionResponse\022\r\n\005que"
      "ry\030\001 \001(\t\"*\n\031SignRawTransactionRequest\022\r\n"
      "\005query\030\001 \001(\010\"+\n\032SignRawTransactionRespon"
      "se\022\r\n\005query\030\001 \001(\t\",\n\033DecodeRawTransactio"
      "nRequest\022\r\n\005query\030\001 \001(\010\"-\n\034DecodeRawTran"
      "sactionResponse\022\r\n\005query\030\001 \001(\t\"j\n\036Broadc"
      "astRawTransactionRequest\022H\n\013transaction\030"
      "\001 \001(\01323.Catalyst.Protocol.Transaction.Tr"
      "ansactionBroadcast\"a\n\037BroadcastRawTransa"
      "ctionResponse\022>\n\014responseCode\030\001 \001(\0162(.Ca"
      "talyst.Protocol.Rpc.Node.ResponseCode\"\036\n"
      "\rSendToRequest\022\r\n\005query\030\001 \001(\010\"\037\n\016SendToR"
      "esponse\022\r\n\005query\030\001 \001(\t\"\"\n\021SendToFromRequ"
      "est\022\r\n\005query\030\001 \001(\010\"#\n\022SendToFromResponse"
      "\022\r\n\005query\030\001 \001(\t\" \n\017SendManyRequest\022\r\n\005qu"
      "ery\030\001 \001(\010\"!\n\020SendManyResponse\022\r\n\005query\030\001"
      " \001(\t\"$\n\023SendFromManyRequest\022\r\n\005query\030\001 \001"
      "(\010\"%\n\024SendFromManyResponse\022\r\n\005query\030\001 \001("
      "\t\"\037\n\016AddNodeRequest\022\r\n\005query\030\001 \001(\010\" \n\017Ad"
      "dNodeResponse\022\r\n\005query\030\001 \001(\t\"\024\n\022GetPeerL"
      "istRequest\"F\n\023GetPeerListResponse\022/\n\005Pee"
      "rs\030\001 \003(\0132 .Catalyst.Protocol.Common.Peer"
      "Id\"9\n\030GetPeerReputationRequest\022\021\n\tpublic"
      "Key\030\001 \001(\014\022\n\n\002ip\030\002 \001(\014\"/\n\031GetPeerReputati"
      "onResponse\022\022\n\nreputation\030\001 \001(\005\"K\n\027SetPee"
      "rBlackListRequest\022\021\n\tpublicKey\030\001 \001(\014\022\n\n\002"
      "ip\030\002 \001(\014\022\021\n\tblacklist\030\003 \001(\010\"L\n\030SetPeerBl"
      "ackListResponse\022\021\n\tpublicKey\030\001 \001(\014\022\n\n\002ip"
      "\030\002 \001(\014\022\021\n\tblacklist\030\003 \001(\010\"3\n\022GetPeerInfo"
      "Request\022\021\n\tpublicKey\030\001 \001(\014\022\n\n\002ip\030\002 \001(\014\"K"
      "\n\023GetPeerInfoResponse\0224\n\010PeerInfo\030\001 \003(\0132"
      "\".Catalyst.Protocol.Common.PeerInfo\"*\n\031G"
      "etConnectionCountRequest\022\r\n\005query\030\001 \001(\010\""
      "+\n\032GetConnectionCountResponse\022\r\n\005query\030\001"
      " \001(\t\"\'\n\017GetDeltaRequest\022\024\n\014DeltaDfsHash\030"
      "\001 \001(\014\"B\n\020GetDeltaResponse\022.\n\005Delta\030\001 \001(\013"
      "2\037.Catalyst.Protocol.Deltas.Delta\"\"\n\021Get"
      "MempoolRequest\022\r\n\005query\030\001 \001(\010\"_\n\022GetMemp"
      "oolResponse\022I\n\014transactions\030\001 \003(\01323.Cata"
      "lyst.Protocol.Transaction.TransactionBro"
      "adcast\"v\n\022SignMessageRequest\022\017\n\007message\030"
      "\001 \001(\014\022\r\n\005keyId\030\002 \001(\t\022@\n\016signingContext\030\003"
      " \001(\0132(.Catalyst.Protocol.Common.SigningC"
      "ontext\"T\n\023SignMessageResponse\022\021\n\tsignatu"
      "re\030\001 \001(\014\022\021\n\tpublicKey\030\002 \001(\014\022\027\n\017originalM"
      "essage\030\003 \001(\014\"\217\001\n\024VerifyMessageRequest\022\021\n"
      "\tsignature\030\001 \001(\014\022\021\n\tpublicKey\030\002 \001(\014\022\017\n\007m"
      "essage\030\003 \001(\014\022@\n\016signingContext\030\004 \001(\0132(.C"
      "atalyst.Protocol.Common.SigningContext\"."
      "\n\025VerifyMessageResponse\022\025\n\risSignedByKey"
      "\030\001 \001(\010\"%\n\024ServiceStatusRequest\022\r\n\005query\030"
      "\001 \001(\010\"&\n\025ServiceStatusResponse\022\r\n\005query\030"
      "\001 \001(\t\"G\n\023AddFileToDfsRequest\022\020\n\010fileSize"
      "\030\001 \001(\004\022\020\n\010fileName\030\002 \001(\t\022\014\n\004node\030\003 \001(\t\"="
      "\n\024AddFileToDfsResponse\022\024\n\014responseCode\030\001"
      " \001(\014\022\017\n\007dfsHash\030\002 \001(\t\"\\\n\030TransferFileByt"
      "esRequest\022\017\n\007chunkId\030\001 \001(\r\022\022\n\nchunkBytes"
      "\030\002 \001(\014\022\033\n\023correlationFileName\030\003 \001(\014\"1\n\031T"
      "ransferFileBytesResponse\022\024\n\014responseCode"
      "\030\001 \001(\014\"6\n\021RemovePeerRequest\022\016\n\006peerIp\030\001 "
      "\001(\014\022\021\n\tpublicKey\030\002 \001(\014\"*\n\022RemovePeerResp"
      "onse\022\024\n\014deletedCount\030\001 \001(\r\"\025\n\023GetPeerCou"
      "ntRequest\")\n\024GetPeerCountResponse\022\021\n\tpee"
      "rCount\030\001 \001(\005\"(\n\025GetFileFromDfsRequest\022\017\n"
      "\007dfsHash\030\001 \001(\t\"@\n\026GetFileFromDfsResponse"
      "\022\020\n\010fileSize\030\001 \001(\004\022\024\n\014responseCode\030\002 \001(\014"
      "\".\n\030SetPeerDataFolderRequest\022\022\n\ndatafold"
      "er\030\001 \001(\t\"*\n\031SetPeerDataFolderResponse\022\r\n"
      "\005query\030\001 \001(\010*]\n\014ResponseCode\022\013\n\007PENDING\020"
      "\000\022\016\n\nSUCCESSFUL\020\001\022\t\n\005ERROR\020\002\022\014\n\010FINISHED"
      "\020\003\022\013\n\007EXPIRED\020\004\022\n\n\006FAILED\020\005B\002P\001b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 3639);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "Rpc.proto", &protobuf_RegisterTypes);
  ::protobuf_Common_2eproto::AddDescriptors();
  ::protobuf_Deltas_2eproto::AddDescriptors();
  ::protobuf_Transaction_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_Rpc_2eproto
namespace Catalyst {
namespace Protocol {
namespace Rpc {
namespace Node {
const ::google::protobuf::EnumDescriptor* ResponseCode_descriptor() {
  protobuf_Rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Rpc_2eproto::file_level_enum_descriptors[0];
}
bool ResponseCode_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void VersionRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int VersionRequest::kQueryFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

VersionRequest::VersionRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Rpc_2eproto::scc_info_VersionRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Catalyst.Protocol.Rpc.Node.VersionRequest)
}
VersionRequest::VersionRequest(const VersionRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  query_ = from.query_;
  // @@protoc_insertion_point(copy_constructor:Catalyst.Protocol.Rpc.Node.VersionRequest)
}

void VersionRequest::SharedCtor() {
  query_ = false;
}

VersionRequest::~VersionRequest() {
  // @@protoc_insertion_point(destructor:Catalyst.Protocol.Rpc.Node.VersionRequest)
  SharedDtor();
}

void VersionRequest::SharedDtor() {
}

void VersionRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* VersionRequest::descriptor() {
  ::protobuf_Rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const VersionRequest& VersionRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Rpc_2eproto::scc_info_VersionRequest.base);
  return *internal_default_instance();
}


void VersionRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:Catalyst.Protocol.Rpc.Node.VersionRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  query_ = false;
  _internal_metadata_.Clear();
}

bool VersionRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Catalyst.Protocol.Rpc.Node.VersionRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool query = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &query_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Catalyst.Protocol.Rpc.Node.VersionRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Catalyst.Protocol.Rpc.Node.VersionRequest)
  return false;
#undef DO_
}

void VersionRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Catalyst.Protocol.Rpc.Node.VersionRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool query = 1;
  if (this->query() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->query(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Catalyst.Protocol.Rpc.Node.VersionRequest)
}

::google::protobuf::uint8* VersionRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Catalyst.Protocol.Rpc.Node.VersionRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool query = 1;
  if (this->query() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->query(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Catalyst.Protocol.Rpc.Node.VersionRequest)
  return target;
}

size_t VersionRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Catalyst.Protocol.Rpc.Node.VersionRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bool query = 1;
  if (this->query() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void VersionRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Catalyst.Protocol.Rpc.Node.VersionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const VersionRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const VersionRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Catalyst.Protocol.Rpc.Node.VersionRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Catalyst.Protocol.Rpc.Node.VersionRequest)
    MergeFrom(*source);
  }
}

void VersionRequest::MergeFrom(const VersionRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Catalyst.Protocol.Rpc.Node.VersionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.query() != 0) {
    set_query(from.query());
  }
}

void VersionRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Catalyst.Protocol.Rpc.Node.VersionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VersionRequest::CopyFrom(const VersionRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Catalyst.Protocol.Rpc.Node.VersionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VersionRequest::IsInitialized() const {
  return true;
}

void VersionRequest::Swap(VersionRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void VersionRequest::InternalSwap(VersionRequest* other) {
  using std::swap;
  swap(query_, other->query_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata VersionRequest::GetMetadata() const {
  protobuf_Rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void VersionResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int VersionResponse::kVersionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

VersionResponse::VersionResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Rpc_2eproto::scc_info_VersionResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Catalyst.Protocol.Rpc.Node.VersionResponse)
}
VersionResponse::VersionResponse(const VersionResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.version().size() > 0) {
    version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.version_);
  }
  // @@protoc_insertion_point(copy_constructor:Catalyst.Protocol.Rpc.Node.VersionResponse)
}

void VersionResponse::SharedCtor() {
  version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

VersionResponse::~VersionResponse() {
  // @@protoc_insertion_point(destructor:Catalyst.Protocol.Rpc.Node.VersionResponse)
  SharedDtor();
}

void VersionResponse::SharedDtor() {
  version_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void VersionResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* VersionResponse::descriptor() {
  ::protobuf_Rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const VersionResponse& VersionResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Rpc_2eproto::scc_info_VersionResponse.base);
  return *internal_default_instance();
}


void VersionResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:Catalyst.Protocol.Rpc.Node.VersionResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool VersionResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Catalyst.Protocol.Rpc.Node.VersionResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string version = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_version()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->version().data(), static_cast<int>(this->version().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Catalyst.Protocol.Rpc.Node.VersionResponse.version"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Catalyst.Protocol.Rpc.Node.VersionResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Catalyst.Protocol.Rpc.Node.VersionResponse)
  return false;
#undef DO_
}

void VersionResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Catalyst.Protocol.Rpc.Node.VersionResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string version = 1;
  if (this->version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->version().data(), static_cast<int>(this->version().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Catalyst.Protocol.Rpc.Node.VersionResponse.version");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->version(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Catalyst.Protocol.Rpc.Node.VersionResponse)
}

::google::protobuf::uint8* VersionResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Catalyst.Protocol.Rpc.Node.VersionResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string version = 1;
  if (this->version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->version().data(), static_cast<int>(this->version().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Catalyst.Protocol.Rpc.Node.VersionResponse.version");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->version(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Catalyst.Protocol.Rpc.Node.VersionResponse)
  return target;
}

size_t VersionResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Catalyst.Protocol.Rpc.Node.VersionResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string version = 1;
  if (this->version().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->version());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void VersionResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Catalyst.Protocol.Rpc.Node.VersionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const VersionResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const VersionResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Catalyst.Protocol.Rpc.Node.VersionResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Catalyst.Protocol.Rpc.Node.VersionResponse)
    MergeFrom(*source);
  }
}

void VersionResponse::MergeFrom(const VersionResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Catalyst.Protocol.Rpc.Node.VersionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.version().size() > 0) {

    version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.version_);
  }
}

void VersionResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Catalyst.Protocol.Rpc.Node.VersionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VersionResponse::CopyFrom(const VersionResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Catalyst.Protocol.Rpc.Node.VersionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VersionResponse::IsInitialized() const {
  return true;
}

void VersionResponse::Swap(VersionResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void VersionResponse::InternalSwap(VersionResponse* other) {
  using std::swap;
  version_.Swap(&other->version_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata VersionResponse::GetMetadata() const {
  protobuf_Rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetInfoRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetInfoRequest::kQueryFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetInfoRequest::GetInfoRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Rpc_2eproto::scc_info_GetInfoRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Catalyst.Protocol.Rpc.Node.GetInfoRequest)
}
GetInfoRequest::GetInfoRequest(const GetInfoRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  query_ = from.query_;
  // @@protoc_insertion_point(copy_constructor:Catalyst.Protocol.Rpc.Node.GetInfoRequest)
}

void GetInfoRequest::SharedCtor() {
  query_ = false;
}

GetInfoRequest::~GetInfoRequest() {
  // @@protoc_insertion_point(destructor:Catalyst.Protocol.Rpc.Node.GetInfoRequest)
  SharedDtor();
}

void GetInfoRequest::SharedDtor() {
}

void GetInfoRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GetInfoRequest::descriptor() {
  ::protobuf_Rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetInfoRequest& GetInfoRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Rpc_2eproto::scc_info_GetInfoRequest.base);
  return *internal_default_instance();
}


void GetInfoRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:Catalyst.Protocol.Rpc.Node.GetInfoRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  query_ = false;
  _internal_metadata_.Clear();
}

bool GetInfoRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Catalyst.Protocol.Rpc.Node.GetInfoRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool query = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &query_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Catalyst.Protocol.Rpc.Node.GetInfoRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Catalyst.Protocol.Rpc.Node.GetInfoRequest)
  return false;
#undef DO_
}

void GetInfoRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Catalyst.Protocol.Rpc.Node.GetInfoRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool query = 1;
  if (this->query() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->query(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Catalyst.Protocol.Rpc.Node.GetInfoRequest)
}

::google::protobuf::uint8* GetInfoRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Catalyst.Protocol.Rpc.Node.GetInfoRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool query = 1;
  if (this->query() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->query(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Catalyst.Protocol.Rpc.Node.GetInfoRequest)
  return target;
}

size_t GetInfoRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Catalyst.Protocol.Rpc.Node.GetInfoRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bool query = 1;
  if (this->query() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetInfoRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Catalyst.Protocol.Rpc.Node.GetInfoRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetInfoRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetInfoRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Catalyst.Protocol.Rpc.Node.GetInfoRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Catalyst.Protocol.Rpc.Node.GetInfoRequest)
    MergeFrom(*source);
  }
}

void GetInfoRequest::MergeFrom(const GetInfoRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Catalyst.Protocol.Rpc.Node.GetInfoRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.query() != 0) {
    set_query(from.query());
  }
}

void GetInfoRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Catalyst.Protocol.Rpc.Node.GetInfoRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetInfoRequest::CopyFrom(const GetInfoRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Catalyst.Protocol.Rpc.Node.GetInfoRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetInfoRequest::IsInitialized() const {
  return true;
}

void GetInfoRequest::Swap(GetInfoRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetInfoRequest::InternalSwap(GetInfoRequest* other) {
  using std::swap;
  swap(query_, other->query_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GetInfoRequest::GetMetadata() const {
  protobuf_Rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetInfoResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetInfoResponse::kQueryFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetInfoResponse::GetInfoResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Rpc_2eproto::scc_info_GetInfoResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Catalyst.Protocol.Rpc.Node.GetInfoResponse)
}
GetInfoResponse::GetInfoResponse(const GetInfoResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  query_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.query().size() > 0) {
    query_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.query_);
  }
  // @@protoc_insertion_point(copy_constructor:Catalyst.Protocol.Rpc.Node.GetInfoResponse)
}

void GetInfoResponse::SharedCtor() {
  query_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

GetInfoResponse::~GetInfoResponse() {
  // @@protoc_insertion_point(destructor:Catalyst.Protocol.Rpc.Node.GetInfoResponse)
  SharedDtor();
}

void GetInfoResponse::SharedDtor() {
  query_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetInfoResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GetInfoResponse::descriptor() {
  ::protobuf_Rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetInfoResponse& GetInfoResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Rpc_2eproto::scc_info_GetInfoResponse.base);
  return *internal_default_instance();
}


void GetInfoResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:Catalyst.Protocol.Rpc.Node.GetInfoResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  query_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool GetInfoResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Catalyst.Protocol.Rpc.Node.GetInfoResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string query = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_query()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->query().data(), static_cast<int>(this->query().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Catalyst.Protocol.Rpc.Node.GetInfoResponse.query"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Catalyst.Protocol.Rpc.Node.GetInfoResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Catalyst.Protocol.Rpc.Node.GetInfoResponse)
  return false;
#undef DO_
}

void GetInfoResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Catalyst.Protocol.Rpc.Node.GetInfoResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string query = 1;
  if (this->query().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->query().data(), static_cast<int>(this->query().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Catalyst.Protocol.Rpc.Node.GetInfoResponse.query");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->query(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Catalyst.Protocol.Rpc.Node.GetInfoResponse)
}

::google::protobuf::uint8* GetInfoResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Catalyst.Protocol.Rpc.Node.GetInfoResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string query = 1;
  if (this->query().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->query().data(), static_cast<int>(this->query().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Catalyst.Protocol.Rpc.Node.GetInfoResponse.query");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->query(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Catalyst.Protocol.Rpc.Node.GetInfoResponse)
  return target;
}

size_t GetInfoResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Catalyst.Protocol.Rpc.Node.GetInfoResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string query = 1;
  if (this->query().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->query());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetInfoResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Catalyst.Protocol.Rpc.Node.GetInfoResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetInfoResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetInfoResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Catalyst.Protocol.Rpc.Node.GetInfoResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Catalyst.Protocol.Rpc.Node.GetInfoResponse)
    MergeFrom(*source);
  }
}

void GetInfoResponse::MergeFrom(const GetInfoResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Catalyst.Protocol.Rpc.Node.GetInfoResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.query().size() > 0) {

    query_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.query_);
  }
}

void GetInfoResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Catalyst.Protocol.Rpc.Node.GetInfoResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetInfoResponse::CopyFrom(const GetInfoResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Catalyst.Protocol.Rpc.Node.GetInfoResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetInfoResponse::IsInitialized() const {
  return true;
}

void GetInfoResponse::Swap(GetInfoResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetInfoResponse::InternalSwap(GetInfoResponse* other) {
  using std::swap;
  query_.Swap(&other->query_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GetInfoResponse::GetMetadata() const {
  protobuf_Rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CreateWalletRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateWalletRequest::kQueryFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateWalletRequest::CreateWalletRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Rpc_2eproto::scc_info_CreateWalletRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Catalyst.Protocol.Rpc.Node.CreateWalletRequest)
}
CreateWalletRequest::CreateWalletRequest(const CreateWalletRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  query_ = from.query_;
  // @@protoc_insertion_point(copy_constructor:Catalyst.Protocol.Rpc.Node.CreateWalletRequest)
}

void CreateWalletRequest::SharedCtor() {
  query_ = false;
}

CreateWalletRequest::~CreateWalletRequest() {
  // @@protoc_insertion_point(destructor:Catalyst.Protocol.Rpc.Node.CreateWalletRequest)
  SharedDtor();
}

void CreateWalletRequest::SharedDtor() {
}

void CreateWalletRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CreateWalletRequest::descriptor() {
  ::protobuf_Rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CreateWalletRequest& CreateWalletRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Rpc_2eproto::scc_info_CreateWalletRequest.base);
  return *internal_default_instance();
}


void CreateWalletRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:Catalyst.Protocol.Rpc.Node.CreateWalletRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  query_ = false;
  _internal_metadata_.Clear();
}

bool CreateWalletRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Catalyst.Protocol.Rpc.Node.CreateWalletRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool query = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &query_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Catalyst.Protocol.Rpc.Node.CreateWalletRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Catalyst.Protocol.Rpc.Node.CreateWalletRequest)
  return false;
#undef DO_
}

void CreateWalletRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Catalyst.Protocol.Rpc.Node.CreateWalletRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool query = 1;
  if (this->query() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->query(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Catalyst.Protocol.Rpc.Node.CreateWalletRequest)
}

::google::protobuf::uint8* CreateWalletRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Catalyst.Protocol.Rpc.Node.CreateWalletRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool query = 1;
  if (this->query() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->query(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Catalyst.Protocol.Rpc.Node.CreateWalletRequest)
  return target;
}

size_t CreateWalletRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Catalyst.Protocol.Rpc.Node.CreateWalletRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bool query = 1;
  if (this->query() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreateWalletRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Catalyst.Protocol.Rpc.Node.CreateWalletRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateWalletRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CreateWalletRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Catalyst.Protocol.Rpc.Node.CreateWalletRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Catalyst.Protocol.Rpc.Node.CreateWalletRequest)
    MergeFrom(*source);
  }
}

void CreateWalletRequest::MergeFrom(const CreateWalletRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Catalyst.Protocol.Rpc.Node.CreateWalletRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.query() != 0) {
    set_query(from.query());
  }
}

void CreateWalletRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Catalyst.Protocol.Rpc.Node.CreateWalletRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateWalletRequest::CopyFrom(const CreateWalletRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Catalyst.Protocol.Rpc.Node.CreateWalletRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateWalletRequest::IsInitialized() const {
  return true;
}

void CreateWalletRequest::Swap(CreateWalletRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreateWalletRequest::InternalSwap(CreateWalletRequest* other) {
  using std::swap;
  swap(query_, other->query_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CreateWalletRequest::GetMetadata() const {
  protobuf_Rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CreateWalletResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateWalletResponse::kQueryFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateWalletResponse::CreateWalletResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Rpc_2eproto::scc_info_CreateWalletResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Catalyst.Protocol.Rpc.Node.CreateWalletResponse)
}
CreateWalletResponse::CreateWalletResponse(const CreateWalletResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  query_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.query().size() > 0) {
    query_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.query_);
  }
  // @@protoc_insertion_point(copy_constructor:Catalyst.Protocol.Rpc.Node.CreateWalletResponse)
}

void CreateWalletResponse::SharedCtor() {
  query_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CreateWalletResponse::~CreateWalletResponse() {
  // @@protoc_insertion_point(destructor:Catalyst.Protocol.Rpc.Node.CreateWalletResponse)
  SharedDtor();
}

void CreateWalletResponse::SharedDtor() {
  query_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CreateWalletResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CreateWalletResponse::descriptor() {
  ::protobuf_Rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CreateWalletResponse& CreateWalletResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Rpc_2eproto::scc_info_CreateWalletResponse.base);
  return *internal_default_instance();
}


void CreateWalletResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:Catalyst.Protocol.Rpc.Node.CreateWalletResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  query_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool CreateWalletResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Catalyst.Protocol.Rpc.Node.CreateWalletResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string query = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_query()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->query().data(), static_cast<int>(this->query().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Catalyst.Protocol.Rpc.Node.CreateWalletResponse.query"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Catalyst.Protocol.Rpc.Node.CreateWalletResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Catalyst.Protocol.Rpc.Node.CreateWalletResponse)
  return false;
#undef DO_
}

void CreateWalletResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Catalyst.Protocol.Rpc.Node.CreateWalletResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string query = 1;
  if (this->query().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->query().data(), static_cast<int>(this->query().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Catalyst.Protocol.Rpc.Node.CreateWalletResponse.query");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->query(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Catalyst.Protocol.Rpc.Node.CreateWalletResponse)
}

::google::protobuf::uint8* CreateWalletResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Catalyst.Protocol.Rpc.Node.CreateWalletResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string query = 1;
  if (this->query().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->query().data(), static_cast<int>(this->query().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Catalyst.Protocol.Rpc.Node.CreateWalletResponse.query");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->query(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Catalyst.Protocol.Rpc.Node.CreateWalletResponse)
  return target;
}

size_t CreateWalletResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Catalyst.Protocol.Rpc.Node.CreateWalletResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string query = 1;
  if (this->query().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->query());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreateWalletResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Catalyst.Protocol.Rpc.Node.CreateWalletResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateWalletResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CreateWalletResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Catalyst.Protocol.Rpc.Node.CreateWalletResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Catalyst.Protocol.Rpc.Node.CreateWalletResponse)
    MergeFrom(*source);
  }
}

void CreateWalletResponse::MergeFrom(const CreateWalletResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Catalyst.Protocol.Rpc.Node.CreateWalletResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.query().size() > 0) {

    query_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.query_);
  }
}

void CreateWalletResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Catalyst.Protocol.Rpc.Node.CreateWalletResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateWalletResponse::CopyFrom(const CreateWalletResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Catalyst.Protocol.Rpc.Node.CreateWalletResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateWalletResponse::IsInitialized() const {
  return true;
}

void CreateWalletResponse::Swap(CreateWalletResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreateWalletResponse::InternalSwap(CreateWalletResponse* other) {
  using std::swap;
  query_.Swap(&other->query_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CreateWalletResponse::GetMetadata() const {
  protobuf_Rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListWalletRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListWalletRequest::kQueryFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListWalletRequest::ListWalletRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Rpc_2eproto::scc_info_ListWalletRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Catalyst.Protocol.Rpc.Node.ListWalletRequest)
}
ListWalletRequest::ListWalletRequest(const ListWalletRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  query_ = from.query_;
  // @@protoc_insertion_point(copy_constructor:Catalyst.Protocol.Rpc.Node.ListWalletRequest)
}

void ListWalletRequest::SharedCtor() {
  query_ = false;
}

ListWalletRequest::~ListWalletRequest() {
  // @@protoc_insertion_point(destructor:Catalyst.Protocol.Rpc.Node.ListWalletRequest)
  SharedDtor();
}

void ListWalletRequest::SharedDtor() {
}

void ListWalletRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListWalletRequest::descriptor() {
  ::protobuf_Rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListWalletRequest& ListWalletRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Rpc_2eproto::scc_info_ListWalletRequest.base);
  return *internal_default_instance();
}


void ListWalletRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:Catalyst.Protocol.Rpc.Node.ListWalletRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  query_ = false;
  _internal_metadata_.Clear();
}

bool ListWalletRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Catalyst.Protocol.Rpc.Node.ListWalletRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool query = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &query_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Catalyst.Protocol.Rpc.Node.ListWalletRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Catalyst.Protocol.Rpc.Node.ListWalletRequest)
  return false;
#undef DO_
}

void ListWalletRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Catalyst.Protocol.Rpc.Node.ListWalletRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool query = 1;
  if (this->query() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->query(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Catalyst.Protocol.Rpc.Node.ListWalletRequest)
}

::google::protobuf::uint8* ListWalletRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Catalyst.Protocol.Rpc.Node.ListWalletRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool query = 1;
  if (this->query() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->query(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Catalyst.Protocol.Rpc.Node.ListWalletRequest)
  return target;
}

size_t ListWalletRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Catalyst.Protocol.Rpc.Node.ListWalletRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bool query = 1;
  if (this->query() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListWalletRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Catalyst.Protocol.Rpc.Node.ListWalletRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ListWalletRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListWalletRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Catalyst.Protocol.Rpc.Node.ListWalletRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Catalyst.Protocol.Rpc.Node.ListWalletRequest)
    MergeFrom(*source);
  }
}

void ListWalletRequest::MergeFrom(const ListWalletRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Catalyst.Protocol.Rpc.Node.ListWalletRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.query() != 0) {
    set_query(from.query());
  }
}

void ListWalletRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Catalyst.Protocol.Rpc.Node.ListWalletRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListWalletRequest::CopyFrom(const ListWalletRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Catalyst.Protocol.Rpc.Node.ListWalletRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListWalletRequest::IsInitialized() const {
  return true;
}

void ListWalletRequest::Swap(ListWalletRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListWalletRequest::InternalSwap(ListWalletRequest* other) {
  using std::swap;
  swap(query_, other->query_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListWalletRequest::GetMetadata() const {
  protobuf_Rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListWalletResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListWalletResponse::kQueryFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListWalletResponse::ListWalletResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Rpc_2eproto::scc_info_ListWalletResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Catalyst.Protocol.Rpc.Node.ListWalletResponse)
}
ListWalletResponse::ListWalletResponse(const ListWalletResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  query_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.query().size() > 0) {
    query_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.query_);
  }
  // @@protoc_insertion_point(copy_constructor:Catalyst.Protocol.Rpc.Node.ListWalletResponse)
}

void ListWalletResponse::SharedCtor() {
  query_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

ListWalletResponse::~ListWalletResponse() {
  // @@protoc_insertion_point(destructor:Catalyst.Protocol.Rpc.Node.ListWalletResponse)
  SharedDtor();
}

void ListWalletResponse::SharedDtor() {
  query_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ListWalletResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListWalletResponse::descriptor() {
  ::protobuf_Rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListWalletResponse& ListWalletResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Rpc_2eproto::scc_info_ListWalletResponse.base);
  return *internal_default_instance();
}


void ListWalletResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:Catalyst.Protocol.Rpc.Node.ListWalletResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  query_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool ListWalletResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Catalyst.Protocol.Rpc.Node.ListWalletResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string query = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_query()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->query().data(), static_cast<int>(this->query().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Catalyst.Protocol.Rpc.Node.ListWalletResponse.query"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Catalyst.Protocol.Rpc.Node.ListWalletResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Catalyst.Protocol.Rpc.Node.ListWalletResponse)
  return false;
#undef DO_
}

void ListWalletResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Catalyst.Protocol.Rpc.Node.ListWalletResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string query = 1;
  if (this->query().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->query().data(), static_cast<int>(this->query().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Catalyst.Protocol.Rpc.Node.ListWalletResponse.query");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->query(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Catalyst.Protocol.Rpc.Node.ListWalletResponse)
}

::google::protobuf::uint8* ListWalletResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Catalyst.Protocol.Rpc.Node.ListWalletResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string query = 1;
  if (this->query().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->query().data(), static_cast<int>(this->query().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Catalyst.Protocol.Rpc.Node.ListWalletResponse.query");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->query(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Catalyst.Protocol.Rpc.Node.ListWalletResponse)
  return target;
}

size_t ListWalletResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Catalyst.Protocol.Rpc.Node.ListWalletResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string query = 1;
  if (this->query().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->query());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListWalletResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Catalyst.Protocol.Rpc.Node.ListWalletResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ListWalletResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListWalletResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Catalyst.Protocol.Rpc.Node.ListWalletResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Catalyst.Protocol.Rpc.Node.ListWalletResponse)
    MergeFrom(*source);
  }
}

void ListWalletResponse::MergeFrom(const ListWalletResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Catalyst.Protocol.Rpc.Node.ListWalletResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.query().size() > 0) {

    query_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.query_);
  }
}

void ListWalletResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Catalyst.Protocol.Rpc.Node.ListWalletResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListWalletResponse::CopyFrom(const ListWalletResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Catalyst.Protocol.Rpc.Node.ListWalletResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListWalletResponse::IsInitialized() const {
  return true;
}

void ListWalletResponse::Swap(ListWalletResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListWalletResponse::InternalSwap(ListWalletResponse* other) {
  using std::swap;
  query_.Swap(&other->query_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListWalletResponse::GetMetadata() const {
  protobuf_Rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CreateAddressRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateAddressRequest::kQueryFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateAddressRequest::CreateAddressRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Rpc_2eproto::scc_info_CreateAddressRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Catalyst.Protocol.Rpc.Node.CreateAddressRequest)
}
CreateAddressRequest::CreateAddressRequest(const CreateAddressRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  query_ = from.query_;
  // @@protoc_insertion_point(copy_constructor:Catalyst.Protocol.Rpc.Node.CreateAddressRequest)
}

void CreateAddressRequest::SharedCtor() {
  query_ = false;
}

CreateAddressRequest::~CreateAddressRequest() {
  // @@protoc_insertion_point(destructor:Catalyst.Protocol.Rpc.Node.CreateAddressRequest)
  SharedDtor();
}

void CreateAddressRequest::SharedDtor() {
}

void CreateAddressRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CreateAddressRequest::descriptor() {
  ::protobuf_Rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CreateAddressRequest& CreateAddressRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Rpc_2eproto::scc_info_CreateAddressRequest.base);
  return *internal_default_instance();
}


void CreateAddressRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:Catalyst.Protocol.Rpc.Node.CreateAddressRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  query_ = false;
  _internal_metadata_.Clear();
}

bool CreateAddressRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Catalyst.Protocol.Rpc.Node.CreateAddressRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool query = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &query_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Catalyst.Protocol.Rpc.Node.CreateAddressRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Catalyst.Protocol.Rpc.Node.CreateAddressRequest)
  return false;
#undef DO_
}

void CreateAddressRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Catalyst.Protocol.Rpc.Node.CreateAddressRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool query = 1;
  if (this->query() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->query(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Catalyst.Protocol.Rpc.Node.CreateAddressRequest)
}

::google::protobuf::uint8* CreateAddressRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Catalyst.Protocol.Rpc.Node.CreateAddressRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool query = 1;
  if (this->query() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->query(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Catalyst.Protocol.Rpc.Node.CreateAddressRequest)
  return target;
}

size_t CreateAddressRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Catalyst.Protocol.Rpc.Node.CreateAddressRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bool query = 1;
  if (this->query() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreateAddressRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Catalyst.Protocol.Rpc.Node.CreateAddressRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateAddressRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CreateAddressRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Catalyst.Protocol.Rpc.Node.CreateAddressRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Catalyst.Protocol.Rpc.Node.CreateAddressRequest)
    MergeFrom(*source);
  }
}

void CreateAddressRequest::MergeFrom(const CreateAddressRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Catalyst.Protocol.Rpc.Node.CreateAddressRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.query() != 0) {
    set_query(from.query());
  }
}

void CreateAddressRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Catalyst.Protocol.Rpc.Node.CreateAddressRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateAddressRequest::CopyFrom(const CreateAddressRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Catalyst.Protocol.Rpc.Node.CreateAddressRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateAddressRequest::IsInitialized() const {
  return true;
}

void CreateAddressRequest::Swap(CreateAddressRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreateAddressRequest::InternalSwap(CreateAddressRequest* other) {
  using std::swap;
  swap(query_, other->query_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CreateAddressRequest::GetMetadata() const {
  protobuf_Rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CreateAddressResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateAddressResponse::kQueryFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateAddressResponse::CreateAddressResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Rpc_2eproto::scc_info_CreateAddressResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Catalyst.Protocol.Rpc.Node.CreateAddressResponse)
}
CreateAddressResponse::CreateAddressResponse(const CreateAddressResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  query_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.query().size() > 0) {
    query_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.query_);
  }
  // @@protoc_insertion_point(copy_constructor:Catalyst.Protocol.Rpc.Node.CreateAddressResponse)
}

void CreateAddressResponse::SharedCtor() {
  query_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CreateAddressResponse::~CreateAddressResponse() {
  // @@protoc_insertion_point(destructor:Catalyst.Protocol.Rpc.Node.CreateAddressResponse)
  SharedDtor();
}

void CreateAddressResponse::SharedDtor() {
  query_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CreateAddressResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CreateAddressResponse::descriptor() {
  ::protobuf_Rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CreateAddressResponse& CreateAddressResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Rpc_2eproto::scc_info_CreateAddressResponse.base);
  return *internal_default_instance();
}


void CreateAddressResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:Catalyst.Protocol.Rpc.Node.CreateAddressResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  query_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool CreateAddressResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Catalyst.Protocol.Rpc.Node.CreateAddressResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string query = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_query()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->query().data(), static_cast<int>(this->query().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Catalyst.Protocol.Rpc.Node.CreateAddressResponse.query"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Catalyst.Protocol.Rpc.Node.CreateAddressResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Catalyst.Protocol.Rpc.Node.CreateAddressResponse)
  return false;
#undef DO_
}

void CreateAddressResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Catalyst.Protocol.Rpc.Node.CreateAddressResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string query = 1;
  if (this->query().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->query().data(), static_cast<int>(this->query().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Catalyst.Protocol.Rpc.Node.CreateAddressResponse.query");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->query(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Catalyst.Protocol.Rpc.Node.CreateAddressResponse)
}

::google::protobuf::uint8* CreateAddressResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Catalyst.Protocol.Rpc.Node.CreateAddressResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string query = 1;
  if (this->query().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->query().data(), static_cast<int>(this->query().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Catalyst.Protocol.Rpc.Node.CreateAddressResponse.query");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->query(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Catalyst.Protocol.Rpc.Node.CreateAddressResponse)
  return target;
}

size_t CreateAddressResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Catalyst.Protocol.Rpc.Node.CreateAddressResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string query = 1;
  if (this->query().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->query());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreateAddressResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Catalyst.Protocol.Rpc.Node.CreateAddressResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateAddressResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CreateAddressResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Catalyst.Protocol.Rpc.Node.CreateAddressResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Catalyst.Protocol.Rpc.Node.CreateAddressResponse)
    MergeFrom(*source);
  }
}

void CreateAddressResponse::MergeFrom(const CreateAddressResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Catalyst.Protocol.Rpc.Node.CreateAddressResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.query().size() > 0) {

    query_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.query_);
  }
}

void CreateAddressResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Catalyst.Protocol.Rpc.Node.CreateAddressResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateAddressResponse::CopyFrom(const CreateAddressResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Catalyst.Protocol.Rpc.Node.CreateAddressResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateAddressResponse::IsInitialized() const {
  return true;
}

void CreateAddressResponse::Swap(CreateAddressResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreateAddressResponse::InternalSwap(CreateAddressResponse* other) {
  using std::swap;
  query_.Swap(&other->query_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CreateAddressResponse::GetMetadata() const {
  protobuf_Rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetAddressRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetAddressRequest::kQueryFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetAddressRequest::GetAddressRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Rpc_2eproto::scc_info_GetAddressRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Catalyst.Protocol.Rpc.Node.GetAddressRequest)
}
GetAddressRequest::GetAddressRequest(const GetAddressRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  query_ = from.query_;
  // @@protoc_insertion_point(copy_constructor:Catalyst.Protocol.Rpc.Node.GetAddressRequest)
}

void GetAddressRequest::SharedCtor() {
  query_ = false;
}

GetAddressRequest::~GetAddressRequest() {
  // @@protoc_insertion_point(destructor:Catalyst.Protocol.Rpc.Node.GetAddressRequest)
  SharedDtor();
}

void GetAddressRequest::SharedDtor() {
}

void GetAddressRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GetAddressRequest::descriptor() {
  ::protobuf_Rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetAddressRequest& GetAddressRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Rpc_2eproto::scc_info_GetAddressRequest.base);
  return *internal_default_instance();
}


void GetAddressRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:Catalyst.Protocol.Rpc.Node.GetAddressRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  query_ = false;
  _internal_metadata_.Clear();
}

bool GetAddressRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Catalyst.Protocol.Rpc.Node.GetAddressRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool query = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &query_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Catalyst.Protocol.Rpc.Node.GetAddressRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Catalyst.Protocol.Rpc.Node.GetAddressRequest)
  return false;
#undef DO_
}

void GetAddressRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Catalyst.Protocol.Rpc.Node.GetAddressRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool query = 1;
  if (this->query() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->query(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Catalyst.Protocol.Rpc.Node.GetAddressRequest)
}

::google::protobuf::uint8* GetAddressRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Catalyst.Protocol.Rpc.Node.GetAddressRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool query = 1;
  if (this->query() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->query(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Catalyst.Protocol.Rpc.Node.GetAddressRequest)
  return target;
}

size_t GetAddressRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Catalyst.Protocol.Rpc.Node.GetAddressRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bool query = 1;
  if (this->query() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetAddressRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Catalyst.Protocol.Rpc.Node.GetAddressRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetAddressRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetAddressRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Catalyst.Protocol.Rpc.Node.GetAddressRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Catalyst.Protocol.Rpc.Node.GetAddressRequest)
    MergeFrom(*source);
  }
}

void GetAddressRequest::MergeFrom(const GetAddressRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Catalyst.Protocol.Rpc.Node.GetAddressRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.query() != 0) {
    set_query(from.query());
  }
}

void GetAddressRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Catalyst.Protocol.Rpc.Node.GetAddressRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetAddressRequest::CopyFrom(const GetAddressRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Catalyst.Protocol.Rpc.Node.GetAddressRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetAddressRequest::IsInitialized() const {
  return true;
}

void GetAddressRequest::Swap(GetAddressRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetAddressRequest::InternalSwap(GetAddressRequest* other) {
  using std::swap;
  swap(query_, other->query_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GetAddressRequest::GetMetadata() const {
  protobuf_Rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetAddressResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetAddressResponse::kQueryFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetAddressResponse::GetAddressResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Rpc_2eproto::scc_info_GetAddressResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Catalyst.Protocol.Rpc.Node.GetAddressResponse)
}
GetAddressResponse::GetAddressResponse(const GetAddressResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  query_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.query().size() > 0) {
    query_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.query_);
  }
  // @@protoc_insertion_point(copy_constructor:Catalyst.Protocol.Rpc.Node.GetAddressResponse)
}

void GetAddressResponse::SharedCtor() {
  query_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

GetAddressResponse::~GetAddressResponse() {
  // @@protoc_insertion_point(destructor:Catalyst.Protocol.Rpc.Node.GetAddressResponse)
  SharedDtor();
}

void GetAddressResponse::SharedDtor() {
  query_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetAddressResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GetAddressResponse::descriptor() {
  ::protobuf_Rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetAddressResponse& GetAddressResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Rpc_2eproto::scc_info_GetAddressResponse.base);
  return *internal_default_instance();
}


void GetAddressResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:Catalyst.Protocol.Rpc.Node.GetAddressResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  query_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool GetAddressResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Catalyst.Protocol.Rpc.Node.GetAddressResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string query = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_query()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->query().data(), static_cast<int>(this->query().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Catalyst.Protocol.Rpc.Node.GetAddressResponse.query"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Catalyst.Protocol.Rpc.Node.GetAddressResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Catalyst.Protocol.Rpc.Node.GetAddressResponse)
  return false;
#undef DO_
}

void GetAddressResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Catalyst.Protocol.Rpc.Node.GetAddressResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string query = 1;
  if (this->query().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->query().data(), static_cast<int>(this->query().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Catalyst.Protocol.Rpc.Node.GetAddressResponse.query");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->query(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Catalyst.Protocol.Rpc.Node.GetAddressResponse)
}

::google::protobuf::uint8* GetAddressResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Catalyst.Protocol.Rpc.Node.GetAddressResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string query = 1;
  if (this->query().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->query().data(), static_cast<int>(this->query().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Catalyst.Protocol.Rpc.Node.GetAddressResponse.query");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->query(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Catalyst.Protocol.Rpc.Node.GetAddressResponse)
  return target;
}

size_t GetAddressResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Catalyst.Protocol.Rpc.Node.GetAddressResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string query = 1;
  if (this->query().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->query());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetAddressResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Catalyst.Protocol.Rpc.Node.GetAddressResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetAddressResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetAddressResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Catalyst.Protocol.Rpc.Node.GetAddressResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Catalyst.Protocol.Rpc.Node.GetAddressResponse)
    MergeFrom(*source);
  }
}

void GetAddressResponse::MergeFrom(const GetAddressResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Catalyst.Protocol.Rpc.Node.GetAddressResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.query().size() > 0) {

    query_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.query_);
  }
}

void GetAddressResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Catalyst.Protocol.Rpc.Node.GetAddressResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetAddressResponse::CopyFrom(const GetAddressResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Catalyst.Protocol.Rpc.Node.GetAddressResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetAddressResponse::IsInitialized() const {
  return true;
}

void GetAddressResponse::Swap(GetAddressResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetAddressResponse::InternalSwap(GetAddressResponse* other) {
  using std::swap;
  query_.Swap(&other->query_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GetAddressResponse::GetMetadata() const {
  protobuf_Rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListAddressRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListAddressRequest::kQueryFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListAddressRequest::ListAddressRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Rpc_2eproto::scc_info_ListAddressRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Catalyst.Protocol.Rpc.Node.ListAddressRequest)
}
ListAddressRequest::ListAddressRequest(const ListAddressRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  query_ = from.query_;
  // @@protoc_insertion_point(copy_constructor:Catalyst.Protocol.Rpc.Node.ListAddressRequest)
}

void ListAddressRequest::SharedCtor() {
  query_ = false;
}

ListAddressRequest::~ListAddressRequest() {
  // @@protoc_insertion_point(destructor:Catalyst.Protocol.Rpc.Node.ListAddressRequest)
  SharedDtor();
}

void ListAddressRequest::SharedDtor() {
}

void ListAddressRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListAddressRequest::descriptor() {
  ::protobuf_Rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListAddressRequest& ListAddressRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Rpc_2eproto::scc_info_ListAddressRequest.base);
  return *internal_default_instance();
}


void ListAddressRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:Catalyst.Protocol.Rpc.Node.ListAddressRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  query_ = false;
  _internal_metadata_.Clear();
}

bool ListAddressRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Catalyst.Protocol.Rpc.Node.ListAddressRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool query = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &query_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Catalyst.Protocol.Rpc.Node.ListAddressRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Catalyst.Protocol.Rpc.Node.ListAddressRequest)
  return false;
#undef DO_
}

void ListAddressRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Catalyst.Protocol.Rpc.Node.ListAddressRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool query = 1;
  if (this->query() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->query(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Catalyst.Protocol.Rpc.Node.ListAddressRequest)
}

::google::protobuf::uint8* ListAddressRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Catalyst.Protocol.Rpc.Node.ListAddressRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool query = 1;
  if (this->query() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->query(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Catalyst.Protocol.Rpc.Node.ListAddressRequest)
  return target;
}

size_t ListAddressRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Catalyst.Protocol.Rpc.Node.ListAddressRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bool query = 1;
  if (this->query() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListAddressRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Catalyst.Protocol.Rpc.Node.ListAddressRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ListAddressRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListAddressRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Catalyst.Protocol.Rpc.Node.ListAddressRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Catalyst.Protocol.Rpc.Node.ListAddressRequest)
    MergeFrom(*source);
  }
}

void ListAddressRequest::MergeFrom(const ListAddressRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Catalyst.Protocol.Rpc.Node.ListAddressRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.query() != 0) {
    set_query(from.query());
  }
}

void ListAddressRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Catalyst.Protocol.Rpc.Node.ListAddressRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListAddressRequest::CopyFrom(const ListAddressRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Catalyst.Protocol.Rpc.Node.ListAddressRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListAddressRequest::IsInitialized() const {
  return true;
}

void ListAddressRequest::Swap(ListAddressRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListAddressRequest::InternalSwap(ListAddressRequest* other) {
  using std::swap;
  swap(query_, other->query_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListAddressRequest::GetMetadata() const {
  protobuf_Rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListAddressResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListAddressResponse::kQueryFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListAddressResponse::ListAddressResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Rpc_2eproto::scc_info_ListAddressResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Catalyst.Protocol.Rpc.Node.ListAddressResponse)
}
ListAddressResponse::ListAddressResponse(const ListAddressResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  query_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.query().size() > 0) {
    query_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.query_);
  }
  // @@protoc_insertion_point(copy_constructor:Catalyst.Protocol.Rpc.Node.ListAddressResponse)
}

void ListAddressResponse::SharedCtor() {
  query_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

ListAddressResponse::~ListAddressResponse() {
  // @@protoc_insertion_point(destructor:Catalyst.Protocol.Rpc.Node.ListAddressResponse)
  SharedDtor();
}

void ListAddressResponse::SharedDtor() {
  query_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ListAddressResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListAddressResponse::descriptor() {
  ::protobuf_Rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListAddressResponse& ListAddressResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Rpc_2eproto::scc_info_ListAddressResponse.base);
  return *internal_default_instance();
}


void ListAddressResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:Catalyst.Protocol.Rpc.Node.ListAddressResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  query_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool ListAddressResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Catalyst.Protocol.Rpc.Node.ListAddressResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string query = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_query()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->query().data(), static_cast<int>(this->query().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Catalyst.Protocol.Rpc.Node.ListAddressResponse.query"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Catalyst.Protocol.Rpc.Node.ListAddressResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Catalyst.Protocol.Rpc.Node.ListAddressResponse)
  return false;
#undef DO_
}

void ListAddressResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Catalyst.Protocol.Rpc.Node.ListAddressResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string query = 1;
  if (this->query().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->query().data(), static_cast<int>(this->query().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Catalyst.Protocol.Rpc.Node.ListAddressResponse.query");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->query(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Catalyst.Protocol.Rpc.Node.ListAddressResponse)
}

::google::protobuf::uint8* ListAddressResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Catalyst.Protocol.Rpc.Node.ListAddressResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string query = 1;
  if (this->query().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->query().data(), static_cast<int>(this->query().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Catalyst.Protocol.Rpc.Node.ListAddressResponse.query");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->query(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Catalyst.Protocol.Rpc.Node.ListAddressResponse)
  return target;
}

size_t ListAddressResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Catalyst.Protocol.Rpc.Node.ListAddressResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string query = 1;
  if (this->query().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->query());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListAddressResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Catalyst.Protocol.Rpc.Node.ListAddressResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ListAddressResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListAddressResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Catalyst.Protocol.Rpc.Node.ListAddressResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Catalyst.Protocol.Rpc.Node.ListAddressResponse)
    MergeFrom(*source);
  }
}

void ListAddressResponse::MergeFrom(const ListAddressResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Catalyst.Protocol.Rpc.Node.ListAddressResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.query().size() > 0) {

    query_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.query_);
  }
}

void ListAddressResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Catalyst.Protocol.Rpc.Node.ListAddressResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListAddressResponse::CopyFrom(const ListAddressResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Catalyst.Protocol.Rpc.Node.ListAddressResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListAddressResponse::IsInitialized() const {
  return true;
}

void ListAddressResponse::Swap(ListAddressResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListAddressResponse::InternalSwap(ListAddressResponse* other) {
  using std::swap;
  query_.Swap(&other->query_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListAddressResponse::GetMetadata() const {
  protobuf_Rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ValidateAddressRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ValidateAddressRequest::kQueryFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ValidateAddressRequest::ValidateAddressRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Rpc_2eproto::scc_info_ValidateAddressRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Catalyst.Protocol.Rpc.Node.ValidateAddressRequest)
}
ValidateAddressRequest::ValidateAddressRequest(const ValidateAddressRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  query_ = from.query_;
  // @@protoc_insertion_point(copy_constructor:Catalyst.Protocol.Rpc.Node.ValidateAddressRequest)
}

void ValidateAddressRequest::SharedCtor() {
  query_ = false;
}

ValidateAddressRequest::~ValidateAddressRequest() {
  // @@protoc_insertion_point(destructor:Catalyst.Protocol.Rpc.Node.ValidateAddressRequest)
  SharedDtor();
}

void ValidateAddressRequest::SharedDtor() {
}

void ValidateAddressRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ValidateAddressRequest::descriptor() {
  ::protobuf_Rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ValidateAddressRequest& ValidateAddressRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Rpc_2eproto::scc_info_ValidateAddressRequest.base);
  return *internal_default_instance();
}


void ValidateAddressRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:Catalyst.Protocol.Rpc.Node.ValidateAddressRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  query_ = false;
  _internal_metadata_.Clear();
}

bool ValidateAddressRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Catalyst.Protocol.Rpc.Node.ValidateAddressRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool query = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &query_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Catalyst.Protocol.Rpc.Node.ValidateAddressRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Catalyst.Protocol.Rpc.Node.ValidateAddressRequest)
  return false;
#undef DO_
}

void ValidateAddressRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Catalyst.Protocol.Rpc.Node.ValidateAddressRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool query = 1;
  if (this->query() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->query(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Catalyst.Protocol.Rpc.Node.ValidateAddressRequest)
}

::google::protobuf::uint8* ValidateAddressRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Catalyst.Protocol.Rpc.Node.ValidateAddressRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool query = 1;
  if (this->query() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->query(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Catalyst.Protocol.Rpc.Node.ValidateAddressRequest)
  return target;
}

size_t ValidateAddressRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Catalyst.Protocol.Rpc.Node.ValidateAddressRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bool query = 1;
  if (this->query() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ValidateAddressRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Catalyst.Protocol.Rpc.Node.ValidateAddressRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ValidateAddressRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ValidateAddressRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Catalyst.Protocol.Rpc.Node.ValidateAddressRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Catalyst.Protocol.Rpc.Node.ValidateAddressRequest)
    MergeFrom(*source);
  }
}

void ValidateAddressRequest::MergeFrom(const ValidateAddressRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Catalyst.Protocol.Rpc.Node.ValidateAddressRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.query() != 0) {
    set_query(from.query());
  }
}

void ValidateAddressRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Catalyst.Protocol.Rpc.Node.ValidateAddressRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ValidateAddressRequest::CopyFrom(const ValidateAddressRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Catalyst.Protocol.Rpc.Node.ValidateAddressRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ValidateAddressRequest::IsInitialized() const {
  return true;
}

void ValidateAddressRequest::Swap(ValidateAddressRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ValidateAddressRequest::InternalSwap(ValidateAddressRequest* other) {
  using std::swap;
  swap(query_, other->query_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ValidateAddressRequest::GetMetadata() const {
  protobuf_Rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ValidateAddressResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ValidateAddressResponse::kQueryFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ValidateAddressResponse::ValidateAddressResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Rpc_2eproto::scc_info_ValidateAddressResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Catalyst.Protocol.Rpc.Node.ValidateAddressResponse)
}
ValidateAddressResponse::ValidateAddressResponse(const ValidateAddressResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  query_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.query().size() > 0) {
    query_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.query_);
  }
  // @@protoc_insertion_point(copy_constructor:Catalyst.Protocol.Rpc.Node.ValidateAddressResponse)
}

void ValidateAddressResponse::SharedCtor() {
  query_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

ValidateAddressResponse::~ValidateAddressResponse() {
  // @@protoc_insertion_point(destructor:Catalyst.Protocol.Rpc.Node.ValidateAddressResponse)
  SharedDtor();
}

void ValidateAddressResponse::SharedDtor() {
  query_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ValidateAddressResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ValidateAddressResponse::descriptor() {
  ::protobuf_Rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ValidateAddressResponse& ValidateAddressResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Rpc_2eproto::scc_info_ValidateAddressResponse.base);
  return *internal_default_instance();
}


void ValidateAddressResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:Catalyst.Protocol.Rpc.Node.ValidateAddressResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  query_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool ValidateAddressResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Catalyst.Protocol.Rpc.Node.ValidateAddressResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string query = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_query()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->query().data(), static_cast<int>(this->query().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Catalyst.Protocol.Rpc.Node.ValidateAddressResponse.query"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Catalyst.Protocol.Rpc.Node.ValidateAddressResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Catalyst.Protocol.Rpc.Node.ValidateAddressResponse)
  return false;
#undef DO_
}

void ValidateAddressResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Catalyst.Protocol.Rpc.Node.ValidateAddressResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string query = 1;
  if (this->query().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->query().data(), static_cast<int>(this->query().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Catalyst.Protocol.Rpc.Node.ValidateAddressResponse.query");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->query(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Catalyst.Protocol.Rpc.Node.ValidateAddressResponse)
}

::google::protobuf::uint8* ValidateAddressResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Catalyst.Protocol.Rpc.Node.ValidateAddressResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string query = 1;
  if (this->query().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->query().data(), static_cast<int>(this->query().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Catalyst.Protocol.Rpc.Node.ValidateAddressResponse.query");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->query(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Catalyst.Protocol.Rpc.Node.ValidateAddressResponse)
  return target;
}

size_t ValidateAddressResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Catalyst.Protocol.Rpc.Node.ValidateAddressResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string query = 1;
  if (this->query().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->query());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ValidateAddressResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Catalyst.Protocol.Rpc.Node.ValidateAddressResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ValidateAddressResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ValidateAddressResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Catalyst.Protocol.Rpc.Node.ValidateAddressResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Catalyst.Protocol.Rpc.Node.ValidateAddressResponse)
    MergeFrom(*source);
  }
}

void ValidateAddressResponse::MergeFrom(const ValidateAddressResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Catalyst.Protocol.Rpc.Node.ValidateAddressResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.query().size() > 0) {

    query_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.query_);
  }
}

void ValidateAddressResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Catalyst.Protocol.Rpc.Node.ValidateAddressResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ValidateAddressResponse::CopyFrom(const ValidateAddressResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Catalyst.Protocol.Rpc.Node.ValidateAddressResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ValidateAddressResponse::IsInitialized() const {
  return true;
}

void ValidateAddressResponse::Swap(ValidateAddressResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ValidateAddressResponse::InternalSwap(ValidateAddressResponse* other) {
  using std::swap;
  query_.Swap(&other->query_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ValidateAddressResponse::GetMetadata() const {
  protobuf_Rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetBalanceRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetBalanceRequest::kQueryFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetBalanceRequest::GetBalanceRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Rpc_2eproto::scc_info_GetBalanceRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Catalyst.Protocol.Rpc.Node.GetBalanceRequest)
}
GetBalanceRequest::GetBalanceRequest(const GetBalanceRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  query_ = from.query_;
  // @@protoc_insertion_point(copy_constructor:Catalyst.Protocol.Rpc.Node.GetBalanceRequest)
}

void GetBalanceRequest::SharedCtor() {
  query_ = false;
}

GetBalanceRequest::~GetBalanceRequest() {
  // @@protoc_insertion_point(destructor:Catalyst.Protocol.Rpc.Node.GetBalanceRequest)
  SharedDtor();
}

void GetBalanceRequest::SharedDtor() {
}

void GetBalanceRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GetBalanceRequest::descriptor() {
  ::protobuf_Rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetBalanceRequest& GetBalanceRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Rpc_2eproto::scc_info_GetBalanceRequest.base);
  return *internal_default_instance();
}


void GetBalanceRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:Catalyst.Protocol.Rpc.Node.GetBalanceRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  query_ = false;
  _internal_metadata_.Clear();
}

bool GetBalanceRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Catalyst.Protocol.Rpc.Node.GetBalanceRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool query = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &query_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Catalyst.Protocol.Rpc.Node.GetBalanceRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Catalyst.Protocol.Rpc.Node.GetBalanceRequest)
  return false;
#undef DO_
}

void GetBalanceRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Catalyst.Protocol.Rpc.Node.GetBalanceRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool query = 1;
  if (this->query() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->query(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Catalyst.Protocol.Rpc.Node.GetBalanceRequest)
}

::google::protobuf::uint8* GetBalanceRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Catalyst.Protocol.Rpc.Node.GetBalanceRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool query = 1;
  if (this->query() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->query(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Catalyst.Protocol.Rpc.Node.GetBalanceRequest)
  return target;
}

size_t GetBalanceRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Catalyst.Protocol.Rpc.Node.GetBalanceRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bool query = 1;
  if (this->query() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetBalanceRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Catalyst.Protocol.Rpc.Node.GetBalanceRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetBalanceRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetBalanceRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Catalyst.Protocol.Rpc.Node.GetBalanceRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Catalyst.Protocol.Rpc.Node.GetBalanceRequest)
    MergeFrom(*source);
  }
}

void GetBalanceRequest::MergeFrom(const GetBalanceRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Catalyst.Protocol.Rpc.Node.GetBalanceRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.query() != 0) {
    set_query(from.query());
  }
}

void GetBalanceRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Catalyst.Protocol.Rpc.Node.GetBalanceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetBalanceRequest::CopyFrom(const GetBalanceRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Catalyst.Protocol.Rpc.Node.GetBalanceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetBalanceRequest::IsInitialized() const {
  return true;
}

void GetBalanceRequest::Swap(GetBalanceRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetBalanceRequest::InternalSwap(GetBalanceRequest* other) {
  using std::swap;
  swap(query_, other->query_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GetBalanceRequest::GetMetadata() const {
  protobuf_Rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetBalanceResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetBalanceResponse::kQueryFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetBalanceResponse::GetBalanceResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Rpc_2eproto::scc_info_GetBalanceResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Catalyst.Protocol.Rpc.Node.GetBalanceResponse)
}
GetBalanceResponse::GetBalanceResponse(const GetBalanceResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  query_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.query().size() > 0) {
    query_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.query_);
  }
  // @@protoc_insertion_point(copy_constructor:Catalyst.Protocol.Rpc.Node.GetBalanceResponse)
}

void GetBalanceResponse::SharedCtor() {
  query_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

GetBalanceResponse::~GetBalanceResponse() {
  // @@protoc_insertion_point(destructor:Catalyst.Protocol.Rpc.Node.GetBalanceResponse)
  SharedDtor();
}

void GetBalanceResponse::SharedDtor() {
  query_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetBalanceResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GetBalanceResponse::descriptor() {
  ::protobuf_Rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetBalanceResponse& GetBalanceResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Rpc_2eproto::scc_info_GetBalanceResponse.base);
  return *internal_default_instance();
}


void GetBalanceResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:Catalyst.Protocol.Rpc.Node.GetBalanceResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  query_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool GetBalanceResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Catalyst.Protocol.Rpc.Node.GetBalanceResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string query = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_query()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->query().data(), static_cast<int>(this->query().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Catalyst.Protocol.Rpc.Node.GetBalanceResponse.query"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Catalyst.Protocol.Rpc.Node.GetBalanceResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Catalyst.Protocol.Rpc.Node.GetBalanceResponse)
  return false;
#undef DO_
}

void GetBalanceResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Catalyst.Protocol.Rpc.Node.GetBalanceResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string query = 1;
  if (this->query().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->query().data(), static_cast<int>(this->query().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Catalyst.Protocol.Rpc.Node.GetBalanceResponse.query");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->query(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Catalyst.Protocol.Rpc.Node.GetBalanceResponse)
}

::google::protobuf::uint8* GetBalanceResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Catalyst.Protocol.Rpc.Node.GetBalanceResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string query = 1;
  if (this->query().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->query().data(), static_cast<int>(this->query().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Catalyst.Protocol.Rpc.Node.GetBalanceResponse.query");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->query(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Catalyst.Protocol.Rpc.Node.GetBalanceResponse)
  return target;
}

size_t GetBalanceResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Catalyst.Protocol.Rpc.Node.GetBalanceResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string query = 1;
  if (this->query().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->query());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetBalanceResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Catalyst.Protocol.Rpc.Node.GetBalanceResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetBalanceResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetBalanceResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Catalyst.Protocol.Rpc.Node.GetBalanceResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Catalyst.Protocol.Rpc.Node.GetBalanceResponse)
    MergeFrom(*source);
  }
}

void GetBalanceResponse::MergeFrom(const GetBalanceResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Catalyst.Protocol.Rpc.Node.GetBalanceResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.query().size() > 0) {

    query_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.query_);
  }
}

void GetBalanceResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Catalyst.Protocol.Rpc.Node.GetBalanceResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetBalanceResponse::CopyFrom(const GetBalanceResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Catalyst.Protocol.Rpc.Node.GetBalanceResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetBalanceResponse::IsInitialized() const {
  return true;
}

void GetBalanceResponse::Swap(GetBalanceResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetBalanceResponse::InternalSwap(GetBalanceResponse* other) {
  using std::swap;
  query_.Swap(&other->query_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GetBalanceResponse::GetMetadata() const {
  protobuf_Rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CreateRawTransactionRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateRawTransactionRequest::kQueryFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateRawTransactionRequest::CreateRawTransactionRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Rpc_2eproto::scc_info_CreateRawTransactionRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Catalyst.Protocol.Rpc.Node.CreateRawTransactionRequest)
}
CreateRawTransactionRequest::CreateRawTransactionRequest(const CreateRawTransactionRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  query_ = from.query_;
  // @@protoc_insertion_point(copy_constructor:Catalyst.Protocol.Rpc.Node.CreateRawTransactionRequest)
}

void CreateRawTransactionRequest::SharedCtor() {
  query_ = false;
}

CreateRawTransactionRequest::~CreateRawTransactionRequest() {
  // @@protoc_insertion_point(destructor:Catalyst.Protocol.Rpc.Node.CreateRawTransactionRequest)
  SharedDtor();
}

void CreateRawTransactionRequest::SharedDtor() {
}

void CreateRawTransactionRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CreateRawTransactionRequest::descriptor() {
  ::protobuf_Rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CreateRawTransactionRequest& CreateRawTransactionRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Rpc_2eproto::scc_info_CreateRawTransactionRequest.base);
  return *internal_default_instance();
}


void CreateRawTransactionRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:Catalyst.Protocol.Rpc.Node.CreateRawTransactionRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  query_ = false;
  _internal_metadata_.Clear();
}

bool CreateRawTransactionRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Catalyst.Protocol.Rpc.Node.CreateRawTransactionRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool query = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &query_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Catalyst.Protocol.Rpc.Node.CreateRawTransactionRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Catalyst.Protocol.Rpc.Node.CreateRawTransactionRequest)
  return false;
#undef DO_
}

void CreateRawTransactionRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Catalyst.Protocol.Rpc.Node.CreateRawTransactionRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool query = 1;
  if (this->query() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->query(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Catalyst.Protocol.Rpc.Node.CreateRawTransactionRequest)
}

::google::protobuf::uint8* CreateRawTransactionRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Catalyst.Protocol.Rpc.Node.CreateRawTransactionRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool query = 1;
  if (this->query() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->query(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Catalyst.Protocol.Rpc.Node.CreateRawTransactionRequest)
  return target;
}

size_t CreateRawTransactionRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Catalyst.Protocol.Rpc.Node.CreateRawTransactionRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bool query = 1;
  if (this->query() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreateRawTransactionRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Catalyst.Protocol.Rpc.Node.CreateRawTransactionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateRawTransactionRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CreateRawTransactionRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Catalyst.Protocol.Rpc.Node.CreateRawTransactionRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Catalyst.Protocol.Rpc.Node.CreateRawTransactionRequest)
    MergeFrom(*source);
  }
}

void CreateRawTransactionRequest::MergeFrom(const CreateRawTransactionRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Catalyst.Protocol.Rpc.Node.CreateRawTransactionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.query() != 0) {
    set_query(from.query());
  }
}

void CreateRawTransactionRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Catalyst.Protocol.Rpc.Node.CreateRawTransactionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateRawTransactionRequest::CopyFrom(const CreateRawTransactionRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Catalyst.Protocol.Rpc.Node.CreateRawTransactionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateRawTransactionRequest::IsInitialized() const {
  return true;
}

void CreateRawTransactionRequest::Swap(CreateRawTransactionRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreateRawTransactionRequest::InternalSwap(CreateRawTransactionRequest* other) {
  using std::swap;
  swap(query_, other->query_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CreateRawTransactionRequest::GetMetadata() const {
  protobuf_Rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CreateRawTransactionResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateRawTransactionResponse::kQueryFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateRawTransactionResponse::CreateRawTransactionResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Rpc_2eproto::scc_info_CreateRawTransactionResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Catalyst.Protocol.Rpc.Node.CreateRawTransactionResponse)
}
CreateRawTransactionResponse::CreateRawTransactionResponse(const CreateRawTransactionResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  query_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.query().size() > 0) {
    query_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.query_);
  }
  // @@protoc_insertion_point(copy_constructor:Catalyst.Protocol.Rpc.Node.CreateRawTransactionResponse)
}

void CreateRawTransactionResponse::SharedCtor() {
  query_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CreateRawTransactionResponse::~CreateRawTransactionResponse() {
  // @@protoc_insertion_point(destructor:Catalyst.Protocol.Rpc.Node.CreateRawTransactionResponse)
  SharedDtor();
}

void CreateRawTransactionResponse::SharedDtor() {
  query_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CreateRawTransactionResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CreateRawTransactionResponse::descriptor() {
  ::protobuf_Rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CreateRawTransactionResponse& CreateRawTransactionResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Rpc_2eproto::scc_info_CreateRawTransactionResponse.base);
  return *internal_default_instance();
}


void CreateRawTransactionResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:Catalyst.Protocol.Rpc.Node.CreateRawTransactionResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  query_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool CreateRawTransactionResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Catalyst.Protocol.Rpc.Node.CreateRawTransactionResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string query = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_query()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->query().data(), static_cast<int>(this->query().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Catalyst.Protocol.Rpc.Node.CreateRawTransactionResponse.query"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Catalyst.Protocol.Rpc.Node.CreateRawTransactionResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Catalyst.Protocol.Rpc.Node.CreateRawTransactionResponse)
  return false;
#undef DO_
}

void CreateRawTransactionResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Catalyst.Protocol.Rpc.Node.CreateRawTransactionResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string query = 1;
  if (this->query().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->query().data(), static_cast<int>(this->query().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Catalyst.Protocol.Rpc.Node.CreateRawTransactionResponse.query");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->query(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Catalyst.Protocol.Rpc.Node.CreateRawTransactionResponse)
}

::google::protobuf::uint8* CreateRawTransactionResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Catalyst.Protocol.Rpc.Node.CreateRawTransactionResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string query = 1;
  if (this->query().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->query().data(), static_cast<int>(this->query().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Catalyst.Protocol.Rpc.Node.CreateRawTransactionResponse.query");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->query(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Catalyst.Protocol.Rpc.Node.CreateRawTransactionResponse)
  return target;
}

size_t CreateRawTransactionResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Catalyst.Protocol.Rpc.Node.CreateRawTransactionResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string query = 1;
  if (this->query().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->query());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreateRawTransactionResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Catalyst.Protocol.Rpc.Node.CreateRawTransactionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateRawTransactionResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CreateRawTransactionResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Catalyst.Protocol.Rpc.Node.CreateRawTransactionResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Catalyst.Protocol.Rpc.Node.CreateRawTransactionResponse)
    MergeFrom(*source);
  }
}

void CreateRawTransactionResponse::MergeFrom(const CreateRawTransactionResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Catalyst.Protocol.Rpc.Node.CreateRawTransactionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.query().size() > 0) {

    query_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.query_);
  }
}

void CreateRawTransactionResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Catalyst.Protocol.Rpc.Node.CreateRawTransactionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateRawTransactionResponse::CopyFrom(const CreateRawTransactionResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Catalyst.Protocol.Rpc.Node.CreateRawTransactionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateRawTransactionResponse::IsInitialized() const {
  return true;
}

void CreateRawTransactionResponse::Swap(CreateRawTransactionResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreateRawTransactionResponse::InternalSwap(CreateRawTransactionResponse* other) {
  using std::swap;
  query_.Swap(&other->query_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CreateRawTransactionResponse::GetMetadata() const {
  protobuf_Rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SignRawTransactionRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SignRawTransactionRequest::kQueryFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SignRawTransactionRequest::SignRawTransactionRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Rpc_2eproto::scc_info_SignRawTransactionRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Catalyst.Protocol.Rpc.Node.SignRawTransactionRequest)
}
SignRawTransactionRequest::SignRawTransactionRequest(const SignRawTransactionRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  query_ = from.query_;
  // @@protoc_insertion_point(copy_constructor:Catalyst.Protocol.Rpc.Node.SignRawTransactionRequest)
}

void SignRawTransactionRequest::SharedCtor() {
  query_ = false;
}

SignRawTransactionRequest::~SignRawTransactionRequest() {
  // @@protoc_insertion_point(destructor:Catalyst.Protocol.Rpc.Node.SignRawTransactionRequest)
  SharedDtor();
}

void SignRawTransactionRequest::SharedDtor() {
}

void SignRawTransactionRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SignRawTransactionRequest::descriptor() {
  ::protobuf_Rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SignRawTransactionRequest& SignRawTransactionRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Rpc_2eproto::scc_info_SignRawTransactionRequest.base);
  return *internal_default_instance();
}


void SignRawTransactionRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:Catalyst.Protocol.Rpc.Node.SignRawTransactionRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  query_ = false;
  _internal_metadata_.Clear();
}

bool SignRawTransactionRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Catalyst.Protocol.Rpc.Node.SignRawTransactionRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool query = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &query_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Catalyst.Protocol.Rpc.Node.SignRawTransactionRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Catalyst.Protocol.Rpc.Node.SignRawTransactionRequest)
  return false;
#undef DO_
}

void SignRawTransactionRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Catalyst.Protocol.Rpc.Node.SignRawTransactionRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool query = 1;
  if (this->query() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->query(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Catalyst.Protocol.Rpc.Node.SignRawTransactionRequest)
}

::google::protobuf::uint8* SignRawTransactionRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Catalyst.Protocol.Rpc.Node.SignRawTransactionRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool query = 1;
  if (this->query() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->query(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Catalyst.Protocol.Rpc.Node.SignRawTransactionRequest)
  return target;
}

size_t SignRawTransactionRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Catalyst.Protocol.Rpc.Node.SignRawTransactionRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bool query = 1;
  if (this->query() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SignRawTransactionRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Catalyst.Protocol.Rpc.Node.SignRawTransactionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const SignRawTransactionRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SignRawTransactionRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Catalyst.Protocol.Rpc.Node.SignRawTransactionRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Catalyst.Protocol.Rpc.Node.SignRawTransactionRequest)
    MergeFrom(*source);
  }
}

void SignRawTransactionRequest::MergeFrom(const SignRawTransactionRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Catalyst.Protocol.Rpc.Node.SignRawTransactionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.query() != 0) {
    set_query(from.query());
  }
}

void SignRawTransactionRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Catalyst.Protocol.Rpc.Node.SignRawTransactionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SignRawTransactionRequest::CopyFrom(const SignRawTransactionRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Catalyst.Protocol.Rpc.Node.SignRawTransactionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SignRawTransactionRequest::IsInitialized() const {
  return true;
}

void SignRawTransactionRequest::Swap(SignRawTransactionRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SignRawTransactionRequest::InternalSwap(SignRawTransactionRequest* other) {
  using std::swap;
  swap(query_, other->query_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SignRawTransactionRequest::GetMetadata() const {
  protobuf_Rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SignRawTransactionResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SignRawTransactionResponse::kQueryFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SignRawTransactionResponse::SignRawTransactionResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Rpc_2eproto::scc_info_SignRawTransactionResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Catalyst.Protocol.Rpc.Node.SignRawTransactionResponse)
}
SignRawTransactionResponse::SignRawTransactionResponse(const SignRawTransactionResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  query_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.query().size() > 0) {
    query_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.query_);
  }
  // @@protoc_insertion_point(copy_constructor:Catalyst.Protocol.Rpc.Node.SignRawTransactionResponse)
}

void SignRawTransactionResponse::SharedCtor() {
  query_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

SignRawTransactionResponse::~SignRawTransactionResponse() {
  // @@protoc_insertion_point(destructor:Catalyst.Protocol.Rpc.Node.SignRawTransactionResponse)
  SharedDtor();
}

void SignRawTransactionResponse::SharedDtor() {
  query_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SignRawTransactionResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SignRawTransactionResponse::descriptor() {
  ::protobuf_Rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SignRawTransactionResponse& SignRawTransactionResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Rpc_2eproto::scc_info_SignRawTransactionResponse.base);
  return *internal_default_instance();
}


void SignRawTransactionResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:Catalyst.Protocol.Rpc.Node.SignRawTransactionResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  query_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool SignRawTransactionResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Catalyst.Protocol.Rpc.Node.SignRawTransactionResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string query = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_query()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->query().data(), static_cast<int>(this->query().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Catalyst.Protocol.Rpc.Node.SignRawTransactionResponse.query"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Catalyst.Protocol.Rpc.Node.SignRawTransactionResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Catalyst.Protocol.Rpc.Node.SignRawTransactionResponse)
  return false;
#undef DO_
}

void SignRawTransactionResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Catalyst.Protocol.Rpc.Node.SignRawTransactionResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string query = 1;
  if (this->query().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->query().data(), static_cast<int>(this->query().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Catalyst.Protocol.Rpc.Node.SignRawTransactionResponse.query");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->query(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Catalyst.Protocol.Rpc.Node.SignRawTransactionResponse)
}

::google::protobuf::uint8* SignRawTransactionResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Catalyst.Protocol.Rpc.Node.SignRawTransactionResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string query = 1;
  if (this->query().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->query().data(), static_cast<int>(this->query().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Catalyst.Protocol.Rpc.Node.SignRawTransactionResponse.query");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->query(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Catalyst.Protocol.Rpc.Node.SignRawTransactionResponse)
  return target;
}

size_t SignRawTransactionResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Catalyst.Protocol.Rpc.Node.SignRawTransactionResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string query = 1;
  if (this->query().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->query());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SignRawTransactionResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Catalyst.Protocol.Rpc.Node.SignRawTransactionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const SignRawTransactionResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SignRawTransactionResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Catalyst.Protocol.Rpc.Node.SignRawTransactionResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Catalyst.Protocol.Rpc.Node.SignRawTransactionResponse)
    MergeFrom(*source);
  }
}

void SignRawTransactionResponse::MergeFrom(const SignRawTransactionResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Catalyst.Protocol.Rpc.Node.SignRawTransactionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.query().size() > 0) {

    query_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.query_);
  }
}

void SignRawTransactionResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Catalyst.Protocol.Rpc.Node.SignRawTransactionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SignRawTransactionResponse::CopyFrom(const SignRawTransactionResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Catalyst.Protocol.Rpc.Node.SignRawTransactionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SignRawTransactionResponse::IsInitialized() const {
  return true;
}

void SignRawTransactionResponse::Swap(SignRawTransactionResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SignRawTransactionResponse::InternalSwap(SignRawTransactionResponse* other) {
  using std::swap;
  query_.Swap(&other->query_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SignRawTransactionResponse::GetMetadata() const {
  protobuf_Rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DecodeRawTransactionRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DecodeRawTransactionRequest::kQueryFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DecodeRawTransactionRequest::DecodeRawTransactionRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Rpc_2eproto::scc_info_DecodeRawTransactionRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Catalyst.Protocol.Rpc.Node.DecodeRawTransactionRequest)
}
DecodeRawTransactionRequest::DecodeRawTransactionRequest(const DecodeRawTransactionRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  query_ = from.query_;
  // @@protoc_insertion_point(copy_constructor:Catalyst.Protocol.Rpc.Node.DecodeRawTransactionRequest)
}

void DecodeRawTransactionRequest::SharedCtor() {
  query_ = false;
}

DecodeRawTransactionRequest::~DecodeRawTransactionRequest() {
  // @@protoc_insertion_point(destructor:Catalyst.Protocol.Rpc.Node.DecodeRawTransactionRequest)
  SharedDtor();
}

void DecodeRawTransactionRequest::SharedDtor() {
}

void DecodeRawTransactionRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DecodeRawTransactionRequest::descriptor() {
  ::protobuf_Rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DecodeRawTransactionRequest& DecodeRawTransactionRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Rpc_2eproto::scc_info_DecodeRawTransactionRequest.base);
  return *internal_default_instance();
}


void DecodeRawTransactionRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:Catalyst.Protocol.Rpc.Node.DecodeRawTransactionRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  query_ = false;
  _internal_metadata_.Clear();
}

bool DecodeRawTransactionRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Catalyst.Protocol.Rpc.Node.DecodeRawTransactionRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool query = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &query_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Catalyst.Protocol.Rpc.Node.DecodeRawTransactionRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Catalyst.Protocol.Rpc.Node.DecodeRawTransactionRequest)
  return false;
#undef DO_
}

void DecodeRawTransactionRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Catalyst.Protocol.Rpc.Node.DecodeRawTransactionRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool query = 1;
  if (this->query() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->query(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Catalyst.Protocol.Rpc.Node.DecodeRawTransactionRequest)
}

::google::protobuf::uint8* DecodeRawTransactionRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Catalyst.Protocol.Rpc.Node.DecodeRawTransactionRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool query = 1;
  if (this->query() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->query(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Catalyst.Protocol.Rpc.Node.DecodeRawTransactionRequest)
  return target;
}

size_t DecodeRawTransactionRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Catalyst.Protocol.Rpc.Node.DecodeRawTransactionRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bool query = 1;
  if (this->query() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DecodeRawTransactionRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Catalyst.Protocol.Rpc.Node.DecodeRawTransactionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const DecodeRawTransactionRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DecodeRawTransactionRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Catalyst.Protocol.Rpc.Node.DecodeRawTransactionRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Catalyst.Protocol.Rpc.Node.DecodeRawTransactionRequest)
    MergeFrom(*source);
  }
}

void DecodeRawTransactionRequest::MergeFrom(const DecodeRawTransactionRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Catalyst.Protocol.Rpc.Node.DecodeRawTransactionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.query() != 0) {
    set_query(from.query());
  }
}

void DecodeRawTransactionRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Catalyst.Protocol.Rpc.Node.DecodeRawTransactionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DecodeRawTransactionRequest::CopyFrom(const DecodeRawTransactionRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Catalyst.Protocol.Rpc.Node.DecodeRawTransactionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DecodeRawTransactionRequest::IsInitialized() const {
  return true;
}

void DecodeRawTransactionRequest::Swap(DecodeRawTransactionRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DecodeRawTransactionRequest::InternalSwap(DecodeRawTransactionRequest* other) {
  using std::swap;
  swap(query_, other->query_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DecodeRawTransactionRequest::GetMetadata() const {
  protobuf_Rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DecodeRawTransactionResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DecodeRawTransactionResponse::kQueryFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DecodeRawTransactionResponse::DecodeRawTransactionResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Rpc_2eproto::scc_info_DecodeRawTransactionResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Catalyst.Protocol.Rpc.Node.DecodeRawTransactionResponse)
}
DecodeRawTransactionResponse::DecodeRawTransactionResponse(const DecodeRawTransactionResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  query_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.query().size() > 0) {
    query_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.query_);
  }
  // @@protoc_insertion_point(copy_constructor:Catalyst.Protocol.Rpc.Node.DecodeRawTransactionResponse)
}

void DecodeRawTransactionResponse::SharedCtor() {
  query_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

DecodeRawTransactionResponse::~DecodeRawTransactionResponse() {
  // @@protoc_insertion_point(destructor:Catalyst.Protocol.Rpc.Node.DecodeRawTransactionResponse)
  SharedDtor();
}

void DecodeRawTransactionResponse::SharedDtor() {
  query_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DecodeRawTransactionResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DecodeRawTransactionResponse::descriptor() {
  ::protobuf_Rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DecodeRawTransactionResponse& DecodeRawTransactionResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Rpc_2eproto::scc_info_DecodeRawTransactionResponse.base);
  return *internal_default_instance();
}


void DecodeRawTransactionResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:Catalyst.Protocol.Rpc.Node.DecodeRawTransactionResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  query_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool DecodeRawTransactionResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Catalyst.Protocol.Rpc.Node.DecodeRawTransactionResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string query = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_query()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->query().data(), static_cast<int>(this->query().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Catalyst.Protocol.Rpc.Node.DecodeRawTransactionResponse.query"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Catalyst.Protocol.Rpc.Node.DecodeRawTransactionResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Catalyst.Protocol.Rpc.Node.DecodeRawTransactionResponse)
  return false;
#undef DO_
}

void DecodeRawTransactionResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Catalyst.Protocol.Rpc.Node.DecodeRawTransactionResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string query = 1;
  if (this->query().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->query().data(), static_cast<int>(this->query().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Catalyst.Protocol.Rpc.Node.DecodeRawTransactionResponse.query");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->query(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Catalyst.Protocol.Rpc.Node.DecodeRawTransactionResponse)
}

::google::protobuf::uint8* DecodeRawTransactionResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Catalyst.Protocol.Rpc.Node.DecodeRawTransactionResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string query = 1;
  if (this->query().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->query().data(), static_cast<int>(this->query().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Catalyst.Protocol.Rpc.Node.DecodeRawTransactionResponse.query");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->query(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Catalyst.Protocol.Rpc.Node.DecodeRawTransactionResponse)
  return target;
}

size_t DecodeRawTransactionResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Catalyst.Protocol.Rpc.Node.DecodeRawTransactionResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string query = 1;
  if (this->query().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->query());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DecodeRawTransactionResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Catalyst.Protocol.Rpc.Node.DecodeRawTransactionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const DecodeRawTransactionResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DecodeRawTransactionResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Catalyst.Protocol.Rpc.Node.DecodeRawTransactionResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Catalyst.Protocol.Rpc.Node.DecodeRawTransactionResponse)
    MergeFrom(*source);
  }
}

void DecodeRawTransactionResponse::MergeFrom(const DecodeRawTransactionResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Catalyst.Protocol.Rpc.Node.DecodeRawTransactionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.query().size() > 0) {

    query_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.query_);
  }
}

void DecodeRawTransactionResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Catalyst.Protocol.Rpc.Node.DecodeRawTransactionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DecodeRawTransactionResponse::CopyFrom(const DecodeRawTransactionResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Catalyst.Protocol.Rpc.Node.DecodeRawTransactionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DecodeRawTransactionResponse::IsInitialized() const {
  return true;
}

void DecodeRawTransactionResponse::Swap(DecodeRawTransactionResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DecodeRawTransactionResponse::InternalSwap(DecodeRawTransactionResponse* other) {
  using std::swap;
  query_.Swap(&other->query_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DecodeRawTransactionResponse::GetMetadata() const {
  protobuf_Rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void BroadcastRawTransactionRequest::InitAsDefaultInstance() {
  ::Catalyst::Protocol::Rpc::Node::_BroadcastRawTransactionRequest_default_instance_._instance.get_mutable()->transaction_ = const_cast< ::Catalyst::Protocol::Transaction::TransactionBroadcast*>(
      ::Catalyst::Protocol::Transaction::TransactionBroadcast::internal_default_instance());
}
void BroadcastRawTransactionRequest::clear_transaction() {
  if (GetArenaNoVirtual() == NULL && transaction_ != NULL) {
    delete transaction_;
  }
  transaction_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BroadcastRawTransactionRequest::kTransactionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BroadcastRawTransactionRequest::BroadcastRawTransactionRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Rpc_2eproto::scc_info_BroadcastRawTransactionRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Catalyst.Protocol.Rpc.Node.BroadcastRawTransactionRequest)
}
BroadcastRawTransactionRequest::BroadcastRawTransactionRequest(const BroadcastRawTransactionRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_transaction()) {
    transaction_ = new ::Catalyst::Protocol::Transaction::TransactionBroadcast(*from.transaction_);
  } else {
    transaction_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:Catalyst.Protocol.Rpc.Node.BroadcastRawTransactionRequest)
}

void BroadcastRawTransactionRequest::SharedCtor() {
  transaction_ = NULL;
}

BroadcastRawTransactionRequest::~BroadcastRawTransactionRequest() {
  // @@protoc_insertion_point(destructor:Catalyst.Protocol.Rpc.Node.BroadcastRawTransactionRequest)
  SharedDtor();
}

void BroadcastRawTransactionRequest::SharedDtor() {
  if (this != internal_default_instance()) delete transaction_;
}

void BroadcastRawTransactionRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* BroadcastRawTransactionRequest::descriptor() {
  ::protobuf_Rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BroadcastRawTransactionRequest& BroadcastRawTransactionRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Rpc_2eproto::scc_info_BroadcastRawTransactionRequest.base);
  return *internal_default_instance();
}


void BroadcastRawTransactionRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:Catalyst.Protocol.Rpc.Node.BroadcastRawTransactionRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && transaction_ != NULL) {
    delete transaction_;
  }
  transaction_ = NULL;
  _internal_metadata_.Clear();
}

bool BroadcastRawTransactionRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Catalyst.Protocol.Rpc.Node.BroadcastRawTransactionRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .Catalyst.Protocol.Transaction.TransactionBroadcast transaction = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_transaction()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Catalyst.Protocol.Rpc.Node.BroadcastRawTransactionRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Catalyst.Protocol.Rpc.Node.BroadcastRawTransactionRequest)
  return false;
#undef DO_
}

void BroadcastRawTransactionRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Catalyst.Protocol.Rpc.Node.BroadcastRawTransactionRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .Catalyst.Protocol.Transaction.TransactionBroadcast transaction = 1;
  if (this->has_transaction()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_transaction(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Catalyst.Protocol.Rpc.Node.BroadcastRawTransactionRequest)
}

::google::protobuf::uint8* BroadcastRawTransactionRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Catalyst.Protocol.Rpc.Node.BroadcastRawTransactionRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .Catalyst.Protocol.Transaction.TransactionBroadcast transaction = 1;
  if (this->has_transaction()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_transaction(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Catalyst.Protocol.Rpc.Node.BroadcastRawTransactionRequest)
  return target;
}

size_t BroadcastRawTransactionRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Catalyst.Protocol.Rpc.Node.BroadcastRawTransactionRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .Catalyst.Protocol.Transaction.TransactionBroadcast transaction = 1;
  if (this->has_transaction()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *transaction_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BroadcastRawTransactionRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Catalyst.Protocol.Rpc.Node.BroadcastRawTransactionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const BroadcastRawTransactionRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BroadcastRawTransactionRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Catalyst.Protocol.Rpc.Node.BroadcastRawTransactionRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Catalyst.Protocol.Rpc.Node.BroadcastRawTransactionRequest)
    MergeFrom(*source);
  }
}

void BroadcastRawTransactionRequest::MergeFrom(const BroadcastRawTransactionRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Catalyst.Protocol.Rpc.Node.BroadcastRawTransactionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_transaction()) {
    mutable_transaction()->::Catalyst::Protocol::Transaction::TransactionBroadcast::MergeFrom(from.transaction());
  }
}

void BroadcastRawTransactionRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Catalyst.Protocol.Rpc.Node.BroadcastRawTransactionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BroadcastRawTransactionRequest::CopyFrom(const BroadcastRawTransactionRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Catalyst.Protocol.Rpc.Node.BroadcastRawTransactionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BroadcastRawTransactionRequest::IsInitialized() const {
  return true;
}

void BroadcastRawTransactionRequest::Swap(BroadcastRawTransactionRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BroadcastRawTransactionRequest::InternalSwap(BroadcastRawTransactionRequest* other) {
  using std::swap;
  swap(transaction_, other->transaction_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata BroadcastRawTransactionRequest::GetMetadata() const {
  protobuf_Rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void BroadcastRawTransactionResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BroadcastRawTransactionResponse::kResponseCodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BroadcastRawTransactionResponse::BroadcastRawTransactionResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Rpc_2eproto::scc_info_BroadcastRawTransactionResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Catalyst.Protocol.Rpc.Node.BroadcastRawTransactionResponse)
}
BroadcastRawTransactionResponse::BroadcastRawTransactionResponse(const BroadcastRawTransactionResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  responsecode_ = from.responsecode_;
  // @@protoc_insertion_point(copy_constructor:Catalyst.Protocol.Rpc.Node.BroadcastRawTransactionResponse)
}

void BroadcastRawTransactionResponse::SharedCtor() {
  responsecode_ = 0;
}

BroadcastRawTransactionResponse::~BroadcastRawTransactionResponse() {
  // @@protoc_insertion_point(destructor:Catalyst.Protocol.Rpc.Node.BroadcastRawTransactionResponse)
  SharedDtor();
}

void BroadcastRawTransactionResponse::SharedDtor() {
}

void BroadcastRawTransactionResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* BroadcastRawTransactionResponse::descriptor() {
  ::protobuf_Rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BroadcastRawTransactionResponse& BroadcastRawTransactionResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Rpc_2eproto::scc_info_BroadcastRawTransactionResponse.base);
  return *internal_default_instance();
}


void BroadcastRawTransactionResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:Catalyst.Protocol.Rpc.Node.BroadcastRawTransactionResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  responsecode_ = 0;
  _internal_metadata_.Clear();
}

bool BroadcastRawTransactionResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Catalyst.Protocol.Rpc.Node.BroadcastRawTransactionResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .Catalyst.Protocol.Rpc.Node.ResponseCode responseCode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_responsecode(static_cast< ::Catalyst::Protocol::Rpc::Node::ResponseCode >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Catalyst.Protocol.Rpc.Node.BroadcastRawTransactionResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Catalyst.Protocol.Rpc.Node.BroadcastRawTransactionResponse)
  return false;
#undef DO_
}

void BroadcastRawTransactionResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Catalyst.Protocol.Rpc.Node.BroadcastRawTransactionResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .Catalyst.Protocol.Rpc.Node.ResponseCode responseCode = 1;
  if (this->responsecode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->responsecode(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Catalyst.Protocol.Rpc.Node.BroadcastRawTransactionResponse)
}

::google::protobuf::uint8* BroadcastRawTransactionResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Catalyst.Protocol.Rpc.Node.BroadcastRawTransactionResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .Catalyst.Protocol.Rpc.Node.ResponseCode responseCode = 1;
  if (this->responsecode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->responsecode(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Catalyst.Protocol.Rpc.Node.BroadcastRawTransactionResponse)
  return target;
}

size_t BroadcastRawTransactionResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Catalyst.Protocol.Rpc.Node.BroadcastRawTransactionResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .Catalyst.Protocol.Rpc.Node.ResponseCode responseCode = 1;
  if (this->responsecode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->responsecode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BroadcastRawTransactionResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Catalyst.Protocol.Rpc.Node.BroadcastRawTransactionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const BroadcastRawTransactionResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BroadcastRawTransactionResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Catalyst.Protocol.Rpc.Node.BroadcastRawTransactionResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Catalyst.Protocol.Rpc.Node.BroadcastRawTransactionResponse)
    MergeFrom(*source);
  }
}

void BroadcastRawTransactionResponse::MergeFrom(const BroadcastRawTransactionResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Catalyst.Protocol.Rpc.Node.BroadcastRawTransactionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.responsecode() != 0) {
    set_responsecode(from.responsecode());
  }
}

void BroadcastRawTransactionResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Catalyst.Protocol.Rpc.Node.BroadcastRawTransactionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BroadcastRawTransactionResponse::CopyFrom(const BroadcastRawTransactionResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Catalyst.Protocol.Rpc.Node.BroadcastRawTransactionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BroadcastRawTransactionResponse::IsInitialized() const {
  return true;
}

void BroadcastRawTransactionResponse::Swap(BroadcastRawTransactionResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BroadcastRawTransactionResponse::InternalSwap(BroadcastRawTransactionResponse* other) {
  using std::swap;
  swap(responsecode_, other->responsecode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata BroadcastRawTransactionResponse::GetMetadata() const {
  protobuf_Rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SendToRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SendToRequest::kQueryFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SendToRequest::SendToRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Rpc_2eproto::scc_info_SendToRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Catalyst.Protocol.Rpc.Node.SendToRequest)
}
SendToRequest::SendToRequest(const SendToRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  query_ = from.query_;
  // @@protoc_insertion_point(copy_constructor:Catalyst.Protocol.Rpc.Node.SendToRequest)
}

void SendToRequest::SharedCtor() {
  query_ = false;
}

SendToRequest::~SendToRequest() {
  // @@protoc_insertion_point(destructor:Catalyst.Protocol.Rpc.Node.SendToRequest)
  SharedDtor();
}

void SendToRequest::SharedDtor() {
}

void SendToRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SendToRequest::descriptor() {
  ::protobuf_Rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SendToRequest& SendToRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Rpc_2eproto::scc_info_SendToRequest.base);
  return *internal_default_instance();
}


void SendToRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:Catalyst.Protocol.Rpc.Node.SendToRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  query_ = false;
  _internal_metadata_.Clear();
}

bool SendToRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Catalyst.Protocol.Rpc.Node.SendToRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool query = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &query_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Catalyst.Protocol.Rpc.Node.SendToRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Catalyst.Protocol.Rpc.Node.SendToRequest)
  return false;
#undef DO_
}

void SendToRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Catalyst.Protocol.Rpc.Node.SendToRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool query = 1;
  if (this->query() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->query(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Catalyst.Protocol.Rpc.Node.SendToRequest)
}

::google::protobuf::uint8* SendToRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Catalyst.Protocol.Rpc.Node.SendToRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool query = 1;
  if (this->query() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->query(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Catalyst.Protocol.Rpc.Node.SendToRequest)
  return target;
}

size_t SendToRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Catalyst.Protocol.Rpc.Node.SendToRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bool query = 1;
  if (this->query() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SendToRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Catalyst.Protocol.Rpc.Node.SendToRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const SendToRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SendToRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Catalyst.Protocol.Rpc.Node.SendToRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Catalyst.Protocol.Rpc.Node.SendToRequest)
    MergeFrom(*source);
  }
}

void SendToRequest::MergeFrom(const SendToRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Catalyst.Protocol.Rpc.Node.SendToRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.query() != 0) {
    set_query(from.query());
  }
}

void SendToRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Catalyst.Protocol.Rpc.Node.SendToRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SendToRequest::CopyFrom(const SendToRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Catalyst.Protocol.Rpc.Node.SendToRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SendToRequest::IsInitialized() const {
  return true;
}

void SendToRequest::Swap(SendToRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SendToRequest::InternalSwap(SendToRequest* other) {
  using std::swap;
  swap(query_, other->query_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SendToRequest::GetMetadata() const {
  protobuf_Rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SendToResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SendToResponse::kQueryFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SendToResponse::SendToResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Rpc_2eproto::scc_info_SendToResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Catalyst.Protocol.Rpc.Node.SendToResponse)
}
SendToResponse::SendToResponse(const SendToResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  query_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.query().size() > 0) {
    query_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.query_);
  }
  // @@protoc_insertion_point(copy_constructor:Catalyst.Protocol.Rpc.Node.SendToResponse)
}

void SendToResponse::SharedCtor() {
  query_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

SendToResponse::~SendToResponse() {
  // @@protoc_insertion_point(destructor:Catalyst.Protocol.Rpc.Node.SendToResponse)
  SharedDtor();
}

void SendToResponse::SharedDtor() {
  query_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SendToResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SendToResponse::descriptor() {
  ::protobuf_Rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SendToResponse& SendToResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Rpc_2eproto::scc_info_SendToResponse.base);
  return *internal_default_instance();
}


void SendToResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:Catalyst.Protocol.Rpc.Node.SendToResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  query_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool SendToResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Catalyst.Protocol.Rpc.Node.SendToResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string query = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_query()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->query().data(), static_cast<int>(this->query().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Catalyst.Protocol.Rpc.Node.SendToResponse.query"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Catalyst.Protocol.Rpc.Node.SendToResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Catalyst.Protocol.Rpc.Node.SendToResponse)
  return false;
#undef DO_
}

void SendToResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Catalyst.Protocol.Rpc.Node.SendToResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string query = 1;
  if (this->query().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->query().data(), static_cast<int>(this->query().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Catalyst.Protocol.Rpc.Node.SendToResponse.query");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->query(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Catalyst.Protocol.Rpc.Node.SendToResponse)
}

::google::protobuf::uint8* SendToResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Catalyst.Protocol.Rpc.Node.SendToResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string query = 1;
  if (this->query().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->query().data(), static_cast<int>(this->query().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Catalyst.Protocol.Rpc.Node.SendToResponse.query");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->query(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Catalyst.Protocol.Rpc.Node.SendToResponse)
  return target;
}

size_t SendToResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Catalyst.Protocol.Rpc.Node.SendToResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string query = 1;
  if (this->query().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->query());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SendToResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Catalyst.Protocol.Rpc.Node.SendToResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const SendToResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SendToResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Catalyst.Protocol.Rpc.Node.SendToResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Catalyst.Protocol.Rpc.Node.SendToResponse)
    MergeFrom(*source);
  }
}

void SendToResponse::MergeFrom(const SendToResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Catalyst.Protocol.Rpc.Node.SendToResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.query().size() > 0) {

    query_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.query_);
  }
}

void SendToResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Catalyst.Protocol.Rpc.Node.SendToResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SendToResponse::CopyFrom(const SendToResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Catalyst.Protocol.Rpc.Node.SendToResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SendToResponse::IsInitialized() const {
  return true;
}

void SendToResponse::Swap(SendToResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SendToResponse::InternalSwap(SendToResponse* other) {
  using std::swap;
  query_.Swap(&other->query_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SendToResponse::GetMetadata() const {
  protobuf_Rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SendToFromRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SendToFromRequest::kQueryFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SendToFromRequest::SendToFromRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Rpc_2eproto::scc_info_SendToFromRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Catalyst.Protocol.Rpc.Node.SendToFromRequest)
}
SendToFromRequest::SendToFromRequest(const SendToFromRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  query_ = from.query_;
  // @@protoc_insertion_point(copy_constructor:Catalyst.Protocol.Rpc.Node.SendToFromRequest)
}

void SendToFromRequest::SharedCtor() {
  query_ = false;
}

SendToFromRequest::~SendToFromRequest() {
  // @@protoc_insertion_point(destructor:Catalyst.Protocol.Rpc.Node.SendToFromRequest)
  SharedDtor();
}

void SendToFromRequest::SharedDtor() {
}

void SendToFromRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SendToFromRequest::descriptor() {
  ::protobuf_Rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SendToFromRequest& SendToFromRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Rpc_2eproto::scc_info_SendToFromRequest.base);
  return *internal_default_instance();
}


void SendToFromRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:Catalyst.Protocol.Rpc.Node.SendToFromRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  query_ = false;
  _internal_metadata_.Clear();
}

bool SendToFromRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Catalyst.Protocol.Rpc.Node.SendToFromRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool query = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &query_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Catalyst.Protocol.Rpc.Node.SendToFromRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Catalyst.Protocol.Rpc.Node.SendToFromRequest)
  return false;
#undef DO_
}

void SendToFromRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Catalyst.Protocol.Rpc.Node.SendToFromRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool query = 1;
  if (this->query() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->query(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Catalyst.Protocol.Rpc.Node.SendToFromRequest)
}

::google::protobuf::uint8* SendToFromRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Catalyst.Protocol.Rpc.Node.SendToFromRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool query = 1;
  if (this->query() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->query(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Catalyst.Protocol.Rpc.Node.SendToFromRequest)
  return target;
}

size_t SendToFromRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Catalyst.Protocol.Rpc.Node.SendToFromRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bool query = 1;
  if (this->query() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SendToFromRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Catalyst.Protocol.Rpc.Node.SendToFromRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const SendToFromRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SendToFromRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Catalyst.Protocol.Rpc.Node.SendToFromRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Catalyst.Protocol.Rpc.Node.SendToFromRequest)
    MergeFrom(*source);
  }
}

void SendToFromRequest::MergeFrom(const SendToFromRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Catalyst.Protocol.Rpc.Node.SendToFromRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.query() != 0) {
    set_query(from.query());
  }
}

void SendToFromRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Catalyst.Protocol.Rpc.Node.SendToFromRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SendToFromRequest::CopyFrom(const SendToFromRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Catalyst.Protocol.Rpc.Node.SendToFromRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SendToFromRequest::IsInitialized() const {
  return true;
}

void SendToFromRequest::Swap(SendToFromRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SendToFromRequest::InternalSwap(SendToFromRequest* other) {
  using std::swap;
  swap(query_, other->query_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SendToFromRequest::GetMetadata() const {
  protobuf_Rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SendToFromResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SendToFromResponse::kQueryFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SendToFromResponse::SendToFromResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Rpc_2eproto::scc_info_SendToFromResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Catalyst.Protocol.Rpc.Node.SendToFromResponse)
}
SendToFromResponse::SendToFromResponse(const SendToFromResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  query_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.query().size() > 0) {
    query_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.query_);
  }
  // @@protoc_insertion_point(copy_constructor:Catalyst.Protocol.Rpc.Node.SendToFromResponse)
}

void SendToFromResponse::SharedCtor() {
  query_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

SendToFromResponse::~SendToFromResponse() {
  // @@protoc_insertion_point(destructor:Catalyst.Protocol.Rpc.Node.SendToFromResponse)
  SharedDtor();
}

void SendToFromResponse::SharedDtor() {
  query_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SendToFromResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SendToFromResponse::descriptor() {
  ::protobuf_Rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SendToFromResponse& SendToFromResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Rpc_2eproto::scc_info_SendToFromResponse.base);
  return *internal_default_instance();
}


void SendToFromResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:Catalyst.Protocol.Rpc.Node.SendToFromResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  query_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool SendToFromResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Catalyst.Protocol.Rpc.Node.SendToFromResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string query = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_query()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->query().data(), static_cast<int>(this->query().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Catalyst.Protocol.Rpc.Node.SendToFromResponse.query"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Catalyst.Protocol.Rpc.Node.SendToFromResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Catalyst.Protocol.Rpc.Node.SendToFromResponse)
  return false;
#undef DO_
}

void SendToFromResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Catalyst.Protocol.Rpc.Node.SendToFromResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string query = 1;
  if (this->query().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->query().data(), static_cast<int>(this->query().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Catalyst.Protocol.Rpc.Node.SendToFromResponse.query");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->query(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Catalyst.Protocol.Rpc.Node.SendToFromResponse)
}

::google::protobuf::uint8* SendToFromResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Catalyst.Protocol.Rpc.Node.SendToFromResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string query = 1;
  if (this->query().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->query().data(), static_cast<int>(this->query().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Catalyst.Protocol.Rpc.Node.SendToFromResponse.query");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->query(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Catalyst.Protocol.Rpc.Node.SendToFromResponse)
  return target;
}

size_t SendToFromResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Catalyst.Protocol.Rpc.Node.SendToFromResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string query = 1;
  if (this->query().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->query());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SendToFromResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Catalyst.Protocol.Rpc.Node.SendToFromResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const SendToFromResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SendToFromResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Catalyst.Protocol.Rpc.Node.SendToFromResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Catalyst.Protocol.Rpc.Node.SendToFromResponse)
    MergeFrom(*source);
  }
}

void SendToFromResponse::MergeFrom(const SendToFromResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Catalyst.Protocol.Rpc.Node.SendToFromResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.query().size() > 0) {

    query_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.query_);
  }
}

void SendToFromResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Catalyst.Protocol.Rpc.Node.SendToFromResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SendToFromResponse::CopyFrom(const SendToFromResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Catalyst.Protocol.Rpc.Node.SendToFromResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SendToFromResponse::IsInitialized() const {
  return true;
}

void SendToFromResponse::Swap(SendToFromResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SendToFromResponse::InternalSwap(SendToFromResponse* other) {
  using std::swap;
  query_.Swap(&other->query_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SendToFromResponse::GetMetadata() const {
  protobuf_Rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SendManyRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SendManyRequest::kQueryFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SendManyRequest::SendManyRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Rpc_2eproto::scc_info_SendManyRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Catalyst.Protocol.Rpc.Node.SendManyRequest)
}
SendManyRequest::SendManyRequest(const SendManyRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  query_ = from.query_;
  // @@protoc_insertion_point(copy_constructor:Catalyst.Protocol.Rpc.Node.SendManyRequest)
}

void SendManyRequest::SharedCtor() {
  query_ = false;
}

SendManyRequest::~SendManyRequest() {
  // @@protoc_insertion_point(destructor:Catalyst.Protocol.Rpc.Node.SendManyRequest)
  SharedDtor();
}

void SendManyRequest::SharedDtor() {
}

void SendManyRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SendManyRequest::descriptor() {
  ::protobuf_Rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SendManyRequest& SendManyRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Rpc_2eproto::scc_info_SendManyRequest.base);
  return *internal_default_instance();
}


void SendManyRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:Catalyst.Protocol.Rpc.Node.SendManyRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  query_ = false;
  _internal_metadata_.Clear();
}

bool SendManyRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Catalyst.Protocol.Rpc.Node.SendManyRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool query = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &query_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Catalyst.Protocol.Rpc.Node.SendManyRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Catalyst.Protocol.Rpc.Node.SendManyRequest)
  return false;
#undef DO_
}

void SendManyRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Catalyst.Protocol.Rpc.Node.SendManyRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool query = 1;
  if (this->query() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->query(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Catalyst.Protocol.Rpc.Node.SendManyRequest)
}

::google::protobuf::uint8* SendManyRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Catalyst.Protocol.Rpc.Node.SendManyRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool query = 1;
  if (this->query() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->query(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Catalyst.Protocol.Rpc.Node.SendManyRequest)
  return target;
}

size_t SendManyRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Catalyst.Protocol.Rpc.Node.SendManyRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bool query = 1;
  if (this->query() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SendManyRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Catalyst.Protocol.Rpc.Node.SendManyRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const SendManyRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SendManyRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Catalyst.Protocol.Rpc.Node.SendManyRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Catalyst.Protocol.Rpc.Node.SendManyRequest)
    MergeFrom(*source);
  }
}

void SendManyRequest::MergeFrom(const SendManyRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Catalyst.Protocol.Rpc.Node.SendManyRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.query() != 0) {
    set_query(from.query());
  }
}

void SendManyRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Catalyst.Protocol.Rpc.Node.SendManyRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SendManyRequest::CopyFrom(const SendManyRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Catalyst.Protocol.Rpc.Node.SendManyRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SendManyRequest::IsInitialized() const {
  return true;
}

void SendManyRequest::Swap(SendManyRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SendManyRequest::InternalSwap(SendManyRequest* other) {
  using std::swap;
  swap(query_, other->query_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SendManyRequest::GetMetadata() const {
  protobuf_Rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SendManyResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SendManyResponse::kQueryFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SendManyResponse::SendManyResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Rpc_2eproto::scc_info_SendManyResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Catalyst.Protocol.Rpc.Node.SendManyResponse)
}
SendManyResponse::SendManyResponse(const SendManyResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  query_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.query().size() > 0) {
    query_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.query_);
  }
  // @@protoc_insertion_point(copy_constructor:Catalyst.Protocol.Rpc.Node.SendManyResponse)
}

void SendManyResponse::SharedCtor() {
  query_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

SendManyResponse::~SendManyResponse() {
  // @@protoc_insertion_point(destructor:Catalyst.Protocol.Rpc.Node.SendManyResponse)
  SharedDtor();
}

void SendManyResponse::SharedDtor() {
  query_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SendManyResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SendManyResponse::descriptor() {
  ::protobuf_Rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SendManyResponse& SendManyResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Rpc_2eproto::scc_info_SendManyResponse.base);
  return *internal_default_instance();
}


void SendManyResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:Catalyst.Protocol.Rpc.Node.SendManyResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  query_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool SendManyResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Catalyst.Protocol.Rpc.Node.SendManyResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string query = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_query()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->query().data(), static_cast<int>(this->query().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Catalyst.Protocol.Rpc.Node.SendManyResponse.query"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Catalyst.Protocol.Rpc.Node.SendManyResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Catalyst.Protocol.Rpc.Node.SendManyResponse)
  return false;
#undef DO_
}

void SendManyResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Catalyst.Protocol.Rpc.Node.SendManyResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string query = 1;
  if (this->query().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->query().data(), static_cast<int>(this->query().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Catalyst.Protocol.Rpc.Node.SendManyResponse.query");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->query(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Catalyst.Protocol.Rpc.Node.SendManyResponse)
}

::google::protobuf::uint8* SendManyResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Catalyst.Protocol.Rpc.Node.SendManyResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string query = 1;
  if (this->query().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->query().data(), static_cast<int>(this->query().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Catalyst.Protocol.Rpc.Node.SendManyResponse.query");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->query(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Catalyst.Protocol.Rpc.Node.SendManyResponse)
  return target;
}

size_t SendManyResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Catalyst.Protocol.Rpc.Node.SendManyResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string query = 1;
  if (this->query().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->query());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SendManyResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Catalyst.Protocol.Rpc.Node.SendManyResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const SendManyResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SendManyResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Catalyst.Protocol.Rpc.Node.SendManyResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Catalyst.Protocol.Rpc.Node.SendManyResponse)
    MergeFrom(*source);
  }
}

void SendManyResponse::MergeFrom(const SendManyResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Catalyst.Protocol.Rpc.Node.SendManyResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.query().size() > 0) {

    query_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.query_);
  }
}

void SendManyResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Catalyst.Protocol.Rpc.Node.SendManyResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SendManyResponse::CopyFrom(const SendManyResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Catalyst.Protocol.Rpc.Node.SendManyResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SendManyResponse::IsInitialized() const {
  return true;
}

void SendManyResponse::Swap(SendManyResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SendManyResponse::InternalSwap(SendManyResponse* other) {
  using std::swap;
  query_.Swap(&other->query_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SendManyResponse::GetMetadata() const {
  protobuf_Rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SendFromManyRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SendFromManyRequest::kQueryFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SendFromManyRequest::SendFromManyRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Rpc_2eproto::scc_info_SendFromManyRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Catalyst.Protocol.Rpc.Node.SendFromManyRequest)
}
SendFromManyRequest::SendFromManyRequest(const SendFromManyRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  query_ = from.query_;
  // @@protoc_insertion_point(copy_constructor:Catalyst.Protocol.Rpc.Node.SendFromManyRequest)
}

void SendFromManyRequest::SharedCtor() {
  query_ = false;
}

SendFromManyRequest::~SendFromManyRequest() {
  // @@protoc_insertion_point(destructor:Catalyst.Protocol.Rpc.Node.SendFromManyRequest)
  SharedDtor();
}

void SendFromManyRequest::SharedDtor() {
}

void SendFromManyRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SendFromManyRequest::descriptor() {
  ::protobuf_Rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SendFromManyRequest& SendFromManyRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Rpc_2eproto::scc_info_SendFromManyRequest.base);
  return *internal_default_instance();
}


void SendFromManyRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:Catalyst.Protocol.Rpc.Node.SendFromManyRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  query_ = false;
  _internal_metadata_.Clear();
}

bool SendFromManyRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Catalyst.Protocol.Rpc.Node.SendFromManyRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool query = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &query_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Catalyst.Protocol.Rpc.Node.SendFromManyRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Catalyst.Protocol.Rpc.Node.SendFromManyRequest)
  return false;
#undef DO_
}

void SendFromManyRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Catalyst.Protocol.Rpc.Node.SendFromManyRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool query = 1;
  if (this->query() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->query(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Catalyst.Protocol.Rpc.Node.SendFromManyRequest)
}

::google::protobuf::uint8* SendFromManyRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Catalyst.Protocol.Rpc.Node.SendFromManyRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool query = 1;
  if (this->query() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->query(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Catalyst.Protocol.Rpc.Node.SendFromManyRequest)
  return target;
}

size_t SendFromManyRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Catalyst.Protocol.Rpc.Node.SendFromManyRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bool query = 1;
  if (this->query() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SendFromManyRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Catalyst.Protocol.Rpc.Node.SendFromManyRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const SendFromManyRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SendFromManyRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Catalyst.Protocol.Rpc.Node.SendFromManyRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Catalyst.Protocol.Rpc.Node.SendFromManyRequest)
    MergeFrom(*source);
  }
}

void SendFromManyRequest::MergeFrom(const SendFromManyRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Catalyst.Protocol.Rpc.Node.SendFromManyRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.query() != 0) {
    set_query(from.query());
  }
}

void SendFromManyRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Catalyst.Protocol.Rpc.Node.SendFromManyRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SendFromManyRequest::CopyFrom(const SendFromManyRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Catalyst.Protocol.Rpc.Node.SendFromManyRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SendFromManyRequest::IsInitialized() const {
  return true;
}

void SendFromManyRequest::Swap(SendFromManyRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SendFromManyRequest::InternalSwap(SendFromManyRequest* other) {
  using std::swap;
  swap(query_, other->query_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SendFromManyRequest::GetMetadata() const {
  protobuf_Rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SendFromManyResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SendFromManyResponse::kQueryFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SendFromManyResponse::SendFromManyResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Rpc_2eproto::scc_info_SendFromManyResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Catalyst.Protocol.Rpc.Node.SendFromManyResponse)
}
SendFromManyResponse::SendFromManyResponse(const SendFromManyResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  query_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.query().size() > 0) {
    query_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.query_);
  }
  // @@protoc_insertion_point(copy_constructor:Catalyst.Protocol.Rpc.Node.SendFromManyResponse)
}

void SendFromManyResponse::SharedCtor() {
  query_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

SendFromManyResponse::~SendFromManyResponse() {
  // @@protoc_insertion_point(destructor:Catalyst.Protocol.Rpc.Node.SendFromManyResponse)
  SharedDtor();
}

void SendFromManyResponse::SharedDtor() {
  query_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SendFromManyResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SendFromManyResponse::descriptor() {
  ::protobuf_Rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SendFromManyResponse& SendFromManyResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Rpc_2eproto::scc_info_SendFromManyResponse.base);
  return *internal_default_instance();
}


void SendFromManyResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:Catalyst.Protocol.Rpc.Node.SendFromManyResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  query_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool SendFromManyResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Catalyst.Protocol.Rpc.Node.SendFromManyResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string query = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_query()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->query().data(), static_cast<int>(this->query().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Catalyst.Protocol.Rpc.Node.SendFromManyResponse.query"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Catalyst.Protocol.Rpc.Node.SendFromManyResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Catalyst.Protocol.Rpc.Node.SendFromManyResponse)
  return false;
#undef DO_
}

void SendFromManyResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Catalyst.Protocol.Rpc.Node.SendFromManyResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string query = 1;
  if (this->query().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->query().data(), static_cast<int>(this->query().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Catalyst.Protocol.Rpc.Node.SendFromManyResponse.query");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->query(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Catalyst.Protocol.Rpc.Node.SendFromManyResponse)
}

::google::protobuf::uint8* SendFromManyResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Catalyst.Protocol.Rpc.Node.SendFromManyResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string query = 1;
  if (this->query().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->query().data(), static_cast<int>(this->query().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Catalyst.Protocol.Rpc.Node.SendFromManyResponse.query");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->query(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Catalyst.Protocol.Rpc.Node.SendFromManyResponse)
  return target;
}

size_t SendFromManyResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Catalyst.Protocol.Rpc.Node.SendFromManyResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string query = 1;
  if (this->query().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->query());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SendFromManyResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Catalyst.Protocol.Rpc.Node.SendFromManyResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const SendFromManyResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SendFromManyResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Catalyst.Protocol.Rpc.Node.SendFromManyResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Catalyst.Protocol.Rpc.Node.SendFromManyResponse)
    MergeFrom(*source);
  }
}

void SendFromManyResponse::MergeFrom(const SendFromManyResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Catalyst.Protocol.Rpc.Node.SendFromManyResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.query().size() > 0) {

    query_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.query_);
  }
}

void SendFromManyResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Catalyst.Protocol.Rpc.Node.SendFromManyResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SendFromManyResponse::CopyFrom(const SendFromManyResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Catalyst.Protocol.Rpc.Node.SendFromManyResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SendFromManyResponse::IsInitialized() const {
  return true;
}

void SendFromManyResponse::Swap(SendFromManyResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SendFromManyResponse::InternalSwap(SendFromManyResponse* other) {
  using std::swap;
  query_.Swap(&other->query_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SendFromManyResponse::GetMetadata() const {
  protobuf_Rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AddNodeRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AddNodeRequest::kQueryFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AddNodeRequest::AddNodeRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Rpc_2eproto::scc_info_AddNodeRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Catalyst.Protocol.Rpc.Node.AddNodeRequest)
}
AddNodeRequest::AddNodeRequest(const AddNodeRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  query_ = from.query_;
  // @@protoc_insertion_point(copy_constructor:Catalyst.Protocol.Rpc.Node.AddNodeRequest)
}

void AddNodeRequest::SharedCtor() {
  query_ = false;
}

AddNodeRequest::~AddNodeRequest() {
  // @@protoc_insertion_point(destructor:Catalyst.Protocol.Rpc.Node.AddNodeRequest)
  SharedDtor();
}

void AddNodeRequest::SharedDtor() {
}

void AddNodeRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* AddNodeRequest::descriptor() {
  ::protobuf_Rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AddNodeRequest& AddNodeRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Rpc_2eproto::scc_info_AddNodeRequest.base);
  return *internal_default_instance();
}


void AddNodeRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:Catalyst.Protocol.Rpc.Node.AddNodeRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  query_ = false;
  _internal_metadata_.Clear();
}

bool AddNodeRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Catalyst.Protocol.Rpc.Node.AddNodeRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool query = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &query_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Catalyst.Protocol.Rpc.Node.AddNodeRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Catalyst.Protocol.Rpc.Node.AddNodeRequest)
  return false;
#undef DO_
}

void AddNodeRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Catalyst.Protocol.Rpc.Node.AddNodeRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool query = 1;
  if (this->query() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->query(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Catalyst.Protocol.Rpc.Node.AddNodeRequest)
}

::google::protobuf::uint8* AddNodeRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Catalyst.Protocol.Rpc.Node.AddNodeRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool query = 1;
  if (this->query() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->query(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Catalyst.Protocol.Rpc.Node.AddNodeRequest)
  return target;
}

size_t AddNodeRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Catalyst.Protocol.Rpc.Node.AddNodeRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bool query = 1;
  if (this->query() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AddNodeRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Catalyst.Protocol.Rpc.Node.AddNodeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const AddNodeRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AddNodeRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Catalyst.Protocol.Rpc.Node.AddNodeRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Catalyst.Protocol.Rpc.Node.AddNodeRequest)
    MergeFrom(*source);
  }
}

void AddNodeRequest::MergeFrom(const AddNodeRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Catalyst.Protocol.Rpc.Node.AddNodeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.query() != 0) {
    set_query(from.query());
  }
}

void AddNodeRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Catalyst.Protocol.Rpc.Node.AddNodeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddNodeRequest::CopyFrom(const AddNodeRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Catalyst.Protocol.Rpc.Node.AddNodeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddNodeRequest::IsInitialized() const {
  return true;
}

void AddNodeRequest::Swap(AddNodeRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AddNodeRequest::InternalSwap(AddNodeRequest* other) {
  using std::swap;
  swap(query_, other->query_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata AddNodeRequest::GetMetadata() const {
  protobuf_Rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AddNodeResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AddNodeResponse::kQueryFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AddNodeResponse::AddNodeResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Rpc_2eproto::scc_info_AddNodeResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Catalyst.Protocol.Rpc.Node.AddNodeResponse)
}
AddNodeResponse::AddNodeResponse(const AddNodeResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  query_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.query().size() > 0) {
    query_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.query_);
  }
  // @@protoc_insertion_point(copy_constructor:Catalyst.Protocol.Rpc.Node.AddNodeResponse)
}

void AddNodeResponse::SharedCtor() {
  query_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

AddNodeResponse::~AddNodeResponse() {
  // @@protoc_insertion_point(destructor:Catalyst.Protocol.Rpc.Node.AddNodeResponse)
  SharedDtor();
}

void AddNodeResponse::SharedDtor() {
  query_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void AddNodeResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* AddNodeResponse::descriptor() {
  ::protobuf_Rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AddNodeResponse& AddNodeResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Rpc_2eproto::scc_info_AddNodeResponse.base);
  return *internal_default_instance();
}


void AddNodeResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:Catalyst.Protocol.Rpc.Node.AddNodeResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  query_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool AddNodeResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Catalyst.Protocol.Rpc.Node.AddNodeResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string query = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_query()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->query().data(), static_cast<int>(this->query().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Catalyst.Protocol.Rpc.Node.AddNodeResponse.query"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Catalyst.Protocol.Rpc.Node.AddNodeResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Catalyst.Protocol.Rpc.Node.AddNodeResponse)
  return false;
#undef DO_
}

void AddNodeResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Catalyst.Protocol.Rpc.Node.AddNodeResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string query = 1;
  if (this->query().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->query().data(), static_cast<int>(this->query().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Catalyst.Protocol.Rpc.Node.AddNodeResponse.query");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->query(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Catalyst.Protocol.Rpc.Node.AddNodeResponse)
}

::google::protobuf::uint8* AddNodeResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Catalyst.Protocol.Rpc.Node.AddNodeResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string query = 1;
  if (this->query().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->query().data(), static_cast<int>(this->query().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Catalyst.Protocol.Rpc.Node.AddNodeResponse.query");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->query(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Catalyst.Protocol.Rpc.Node.AddNodeResponse)
  return target;
}

size_t AddNodeResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Catalyst.Protocol.Rpc.Node.AddNodeResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string query = 1;
  if (this->query().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->query());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AddNodeResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Catalyst.Protocol.Rpc.Node.AddNodeResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const AddNodeResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AddNodeResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Catalyst.Protocol.Rpc.Node.AddNodeResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Catalyst.Protocol.Rpc.Node.AddNodeResponse)
    MergeFrom(*source);
  }
}

void AddNodeResponse::MergeFrom(const AddNodeResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Catalyst.Protocol.Rpc.Node.AddNodeResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.query().size() > 0) {

    query_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.query_);
  }
}

void AddNodeResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Catalyst.Protocol.Rpc.Node.AddNodeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddNodeResponse::CopyFrom(const AddNodeResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Catalyst.Protocol.Rpc.Node.AddNodeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddNodeResponse::IsInitialized() const {
  return true;
}

void AddNodeResponse::Swap(AddNodeResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AddNodeResponse::InternalSwap(AddNodeResponse* other) {
  using std::swap;
  query_.Swap(&other->query_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata AddNodeResponse::GetMetadata() const {
  protobuf_Rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetPeerListRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetPeerListRequest::GetPeerListRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Rpc_2eproto::scc_info_GetPeerListRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Catalyst.Protocol.Rpc.Node.GetPeerListRequest)
}
GetPeerListRequest::GetPeerListRequest(const GetPeerListRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Catalyst.Protocol.Rpc.Node.GetPeerListRequest)
}

void GetPeerListRequest::SharedCtor() {
}

GetPeerListRequest::~GetPeerListRequest() {
  // @@protoc_insertion_point(destructor:Catalyst.Protocol.Rpc.Node.GetPeerListRequest)
  SharedDtor();
}

void GetPeerListRequest::SharedDtor() {
}

void GetPeerListRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GetPeerListRequest::descriptor() {
  ::protobuf_Rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetPeerListRequest& GetPeerListRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Rpc_2eproto::scc_info_GetPeerListRequest.base);
  return *internal_default_instance();
}


void GetPeerListRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:Catalyst.Protocol.Rpc.Node.GetPeerListRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool GetPeerListRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Catalyst.Protocol.Rpc.Node.GetPeerListRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:Catalyst.Protocol.Rpc.Node.GetPeerListRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Catalyst.Protocol.Rpc.Node.GetPeerListRequest)
  return false;
#undef DO_
}

void GetPeerListRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Catalyst.Protocol.Rpc.Node.GetPeerListRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Catalyst.Protocol.Rpc.Node.GetPeerListRequest)
}

::google::protobuf::uint8* GetPeerListRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Catalyst.Protocol.Rpc.Node.GetPeerListRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Catalyst.Protocol.Rpc.Node.GetPeerListRequest)
  return target;
}

size_t GetPeerListRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Catalyst.Protocol.Rpc.Node.GetPeerListRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetPeerListRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Catalyst.Protocol.Rpc.Node.GetPeerListRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetPeerListRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetPeerListRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Catalyst.Protocol.Rpc.Node.GetPeerListRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Catalyst.Protocol.Rpc.Node.GetPeerListRequest)
    MergeFrom(*source);
  }
}

void GetPeerListRequest::MergeFrom(const GetPeerListRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Catalyst.Protocol.Rpc.Node.GetPeerListRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void GetPeerListRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Catalyst.Protocol.Rpc.Node.GetPeerListRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetPeerListRequest::CopyFrom(const GetPeerListRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Catalyst.Protocol.Rpc.Node.GetPeerListRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetPeerListRequest::IsInitialized() const {
  return true;
}

void GetPeerListRequest::Swap(GetPeerListRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetPeerListRequest::InternalSwap(GetPeerListRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GetPeerListRequest::GetMetadata() const {
  protobuf_Rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetPeerListResponse::InitAsDefaultInstance() {
}
void GetPeerListResponse::clear_peers() {
  peers_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetPeerListResponse::kPeersFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetPeerListResponse::GetPeerListResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Rpc_2eproto::scc_info_GetPeerListResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Catalyst.Protocol.Rpc.Node.GetPeerListResponse)
}
GetPeerListResponse::GetPeerListResponse(const GetPeerListResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      peers_(from.peers_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Catalyst.Protocol.Rpc.Node.GetPeerListResponse)
}

void GetPeerListResponse::SharedCtor() {
}

GetPeerListResponse::~GetPeerListResponse() {
  // @@protoc_insertion_point(destructor:Catalyst.Protocol.Rpc.Node.GetPeerListResponse)
  SharedDtor();
}

void GetPeerListResponse::SharedDtor() {
}

void GetPeerListResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GetPeerListResponse::descriptor() {
  ::protobuf_Rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetPeerListResponse& GetPeerListResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Rpc_2eproto::scc_info_GetPeerListResponse.base);
  return *internal_default_instance();
}


void GetPeerListResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:Catalyst.Protocol.Rpc.Node.GetPeerListResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  peers_.Clear();
  _internal_metadata_.Clear();
}

bool GetPeerListResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Catalyst.Protocol.Rpc.Node.GetPeerListResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .Catalyst.Protocol.Common.PeerId Peers = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_peers()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Catalyst.Protocol.Rpc.Node.GetPeerListResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Catalyst.Protocol.Rpc.Node.GetPeerListResponse)
  return false;
#undef DO_
}

void GetPeerListResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Catalyst.Protocol.Rpc.Node.GetPeerListResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .Catalyst.Protocol.Common.PeerId Peers = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->peers_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->peers(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Catalyst.Protocol.Rpc.Node.GetPeerListResponse)
}

::google::protobuf::uint8* GetPeerListResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Catalyst.Protocol.Rpc.Node.GetPeerListResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .Catalyst.Protocol.Common.PeerId Peers = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->peers_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->peers(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Catalyst.Protocol.Rpc.Node.GetPeerListResponse)
  return target;
}

size_t GetPeerListResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Catalyst.Protocol.Rpc.Node.GetPeerListResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .Catalyst.Protocol.Common.PeerId Peers = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->peers_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->peers(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetPeerListResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Catalyst.Protocol.Rpc.Node.GetPeerListResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetPeerListResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetPeerListResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Catalyst.Protocol.Rpc.Node.GetPeerListResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Catalyst.Protocol.Rpc.Node.GetPeerListResponse)
    MergeFrom(*source);
  }
}

void GetPeerListResponse::MergeFrom(const GetPeerListResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Catalyst.Protocol.Rpc.Node.GetPeerListResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  peers_.MergeFrom(from.peers_);
}

void GetPeerListResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Catalyst.Protocol.Rpc.Node.GetPeerListResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetPeerListResponse::CopyFrom(const GetPeerListResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Catalyst.Protocol.Rpc.Node.GetPeerListResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetPeerListResponse::IsInitialized() const {
  return true;
}

void GetPeerListResponse::Swap(GetPeerListResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetPeerListResponse::InternalSwap(GetPeerListResponse* other) {
  using std::swap;
  CastToBase(&peers_)->InternalSwap(CastToBase(&other->peers_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GetPeerListResponse::GetMetadata() const {
  protobuf_Rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetPeerReputationRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetPeerReputationRequest::kPublicKeyFieldNumber;
const int GetPeerReputationRequest::kIpFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetPeerReputationRequest::GetPeerReputationRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Rpc_2eproto::scc_info_GetPeerReputationRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Catalyst.Protocol.Rpc.Node.GetPeerReputationRequest)
}
GetPeerReputationRequest::GetPeerReputationRequest(const GetPeerReputationRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  publickey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.publickey().size() > 0) {
    publickey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.publickey_);
  }
  ip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.ip().size() > 0) {
    ip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ip_);
  }
  // @@protoc_insertion_point(copy_constructor:Catalyst.Protocol.Rpc.Node.GetPeerReputationRequest)
}

void GetPeerReputationRequest::SharedCtor() {
  publickey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

GetPeerReputationRequest::~GetPeerReputationRequest() {
  // @@protoc_insertion_point(destructor:Catalyst.Protocol.Rpc.Node.GetPeerReputationRequest)
  SharedDtor();
}

void GetPeerReputationRequest::SharedDtor() {
  publickey_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ip_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetPeerReputationRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GetPeerReputationRequest::descriptor() {
  ::protobuf_Rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetPeerReputationRequest& GetPeerReputationRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Rpc_2eproto::scc_info_GetPeerReputationRequest.base);
  return *internal_default_instance();
}


void GetPeerReputationRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:Catalyst.Protocol.Rpc.Node.GetPeerReputationRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  publickey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool GetPeerReputationRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Catalyst.Protocol.Rpc.Node.GetPeerReputationRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes publicKey = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_publickey()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes ip = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_ip()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Catalyst.Protocol.Rpc.Node.GetPeerReputationRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Catalyst.Protocol.Rpc.Node.GetPeerReputationRequest)
  return false;
#undef DO_
}

void GetPeerReputationRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Catalyst.Protocol.Rpc.Node.GetPeerReputationRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes publicKey = 1;
  if (this->publickey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->publickey(), output);
  }

  // bytes ip = 2;
  if (this->ip().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->ip(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Catalyst.Protocol.Rpc.Node.GetPeerReputationRequest)
}

::google::protobuf::uint8* GetPeerReputationRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Catalyst.Protocol.Rpc.Node.GetPeerReputationRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes publicKey = 1;
  if (this->publickey().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->publickey(), target);
  }

  // bytes ip = 2;
  if (this->ip().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->ip(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Catalyst.Protocol.Rpc.Node.GetPeerReputationRequest)
  return target;
}

size_t GetPeerReputationRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Catalyst.Protocol.Rpc.Node.GetPeerReputationRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes publicKey = 1;
  if (this->publickey().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->publickey());
  }

  // bytes ip = 2;
  if (this->ip().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->ip());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetPeerReputationRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Catalyst.Protocol.Rpc.Node.GetPeerReputationRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetPeerReputationRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetPeerReputationRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Catalyst.Protocol.Rpc.Node.GetPeerReputationRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Catalyst.Protocol.Rpc.Node.GetPeerReputationRequest)
    MergeFrom(*source);
  }
}

void GetPeerReputationRequest::MergeFrom(const GetPeerReputationRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Catalyst.Protocol.Rpc.Node.GetPeerReputationRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.publickey().size() > 0) {

    publickey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.publickey_);
  }
  if (from.ip().size() > 0) {

    ip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ip_);
  }
}

void GetPeerReputationRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Catalyst.Protocol.Rpc.Node.GetPeerReputationRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetPeerReputationRequest::CopyFrom(const GetPeerReputationRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Catalyst.Protocol.Rpc.Node.GetPeerReputationRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetPeerReputationRequest::IsInitialized() const {
  return true;
}

void GetPeerReputationRequest::Swap(GetPeerReputationRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetPeerReputationRequest::InternalSwap(GetPeerReputationRequest* other) {
  using std::swap;
  publickey_.Swap(&other->publickey_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  ip_.Swap(&other->ip_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GetPeerReputationRequest::GetMetadata() const {
  protobuf_Rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetPeerReputationResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetPeerReputationResponse::kReputationFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetPeerReputationResponse::GetPeerReputationResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Rpc_2eproto::scc_info_GetPeerReputationResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Catalyst.Protocol.Rpc.Node.GetPeerReputationResponse)
}
GetPeerReputationResponse::GetPeerReputationResponse(const GetPeerReputationResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  reputation_ = from.reputation_;
  // @@protoc_insertion_point(copy_constructor:Catalyst.Protocol.Rpc.Node.GetPeerReputationResponse)
}

void GetPeerReputationResponse::SharedCtor() {
  reputation_ = 0;
}

GetPeerReputationResponse::~GetPeerReputationResponse() {
  // @@protoc_insertion_point(destructor:Catalyst.Protocol.Rpc.Node.GetPeerReputationResponse)
  SharedDtor();
}

void GetPeerReputationResponse::SharedDtor() {
}

void GetPeerReputationResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GetPeerReputationResponse::descriptor() {
  ::protobuf_Rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetPeerReputationResponse& GetPeerReputationResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Rpc_2eproto::scc_info_GetPeerReputationResponse.base);
  return *internal_default_instance();
}


void GetPeerReputationResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:Catalyst.Protocol.Rpc.Node.GetPeerReputationResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  reputation_ = 0;
  _internal_metadata_.Clear();
}

bool GetPeerReputationResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Catalyst.Protocol.Rpc.Node.GetPeerReputationResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 reputation = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &reputation_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Catalyst.Protocol.Rpc.Node.GetPeerReputationResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Catalyst.Protocol.Rpc.Node.GetPeerReputationResponse)
  return false;
#undef DO_
}

void GetPeerReputationResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Catalyst.Protocol.Rpc.Node.GetPeerReputationResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 reputation = 1;
  if (this->reputation() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->reputation(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Catalyst.Protocol.Rpc.Node.GetPeerReputationResponse)
}

::google::protobuf::uint8* GetPeerReputationResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Catalyst.Protocol.Rpc.Node.GetPeerReputationResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 reputation = 1;
  if (this->reputation() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->reputation(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Catalyst.Protocol.Rpc.Node.GetPeerReputationResponse)
  return target;
}

size_t GetPeerReputationResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Catalyst.Protocol.Rpc.Node.GetPeerReputationResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 reputation = 1;
  if (this->reputation() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->reputation());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetPeerReputationResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Catalyst.Protocol.Rpc.Node.GetPeerReputationResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetPeerReputationResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetPeerReputationResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Catalyst.Protocol.Rpc.Node.GetPeerReputationResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Catalyst.Protocol.Rpc.Node.GetPeerReputationResponse)
    MergeFrom(*source);
  }
}

void GetPeerReputationResponse::MergeFrom(const GetPeerReputationResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Catalyst.Protocol.Rpc.Node.GetPeerReputationResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.reputation() != 0) {
    set_reputation(from.reputation());
  }
}

void GetPeerReputationResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Catalyst.Protocol.Rpc.Node.GetPeerReputationResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetPeerReputationResponse::CopyFrom(const GetPeerReputationResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Catalyst.Protocol.Rpc.Node.GetPeerReputationResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetPeerReputationResponse::IsInitialized() const {
  return true;
}

void GetPeerReputationResponse::Swap(GetPeerReputationResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetPeerReputationResponse::InternalSwap(GetPeerReputationResponse* other) {
  using std::swap;
  swap(reputation_, other->reputation_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GetPeerReputationResponse::GetMetadata() const {
  protobuf_Rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SetPeerBlackListRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetPeerBlackListRequest::kPublicKeyFieldNumber;
const int SetPeerBlackListRequest::kIpFieldNumber;
const int SetPeerBlackListRequest::kBlacklistFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetPeerBlackListRequest::SetPeerBlackListRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Rpc_2eproto::scc_info_SetPeerBlackListRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Catalyst.Protocol.Rpc.Node.SetPeerBlackListRequest)
}
SetPeerBlackListRequest::SetPeerBlackListRequest(const SetPeerBlackListRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  publickey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.publickey().size() > 0) {
    publickey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.publickey_);
  }
  ip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.ip().size() > 0) {
    ip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ip_);
  }
  blacklist_ = from.blacklist_;
  // @@protoc_insertion_point(copy_constructor:Catalyst.Protocol.Rpc.Node.SetPeerBlackListRequest)
}

void SetPeerBlackListRequest::SharedCtor() {
  publickey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  blacklist_ = false;
}

SetPeerBlackListRequest::~SetPeerBlackListRequest() {
  // @@protoc_insertion_point(destructor:Catalyst.Protocol.Rpc.Node.SetPeerBlackListRequest)
  SharedDtor();
}

void SetPeerBlackListRequest::SharedDtor() {
  publickey_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ip_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SetPeerBlackListRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SetPeerBlackListRequest::descriptor() {
  ::protobuf_Rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SetPeerBlackListRequest& SetPeerBlackListRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Rpc_2eproto::scc_info_SetPeerBlackListRequest.base);
  return *internal_default_instance();
}


void SetPeerBlackListRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:Catalyst.Protocol.Rpc.Node.SetPeerBlackListRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  publickey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  blacklist_ = false;
  _internal_metadata_.Clear();
}

bool SetPeerBlackListRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Catalyst.Protocol.Rpc.Node.SetPeerBlackListRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes publicKey = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_publickey()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes ip = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_ip()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool blacklist = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &blacklist_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Catalyst.Protocol.Rpc.Node.SetPeerBlackListRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Catalyst.Protocol.Rpc.Node.SetPeerBlackListRequest)
  return false;
#undef DO_
}

void SetPeerBlackListRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Catalyst.Protocol.Rpc.Node.SetPeerBlackListRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes publicKey = 1;
  if (this->publickey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->publickey(), output);
  }

  // bytes ip = 2;
  if (this->ip().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->ip(), output);
  }

  // bool blacklist = 3;
  if (this->blacklist() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->blacklist(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Catalyst.Protocol.Rpc.Node.SetPeerBlackListRequest)
}

::google::protobuf::uint8* SetPeerBlackListRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Catalyst.Protocol.Rpc.Node.SetPeerBlackListRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes publicKey = 1;
  if (this->publickey().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->publickey(), target);
  }

  // bytes ip = 2;
  if (this->ip().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->ip(), target);
  }

  // bool blacklist = 3;
  if (this->blacklist() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->blacklist(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Catalyst.Protocol.Rpc.Node.SetPeerBlackListRequest)
  return target;
}

size_t SetPeerBlackListRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Catalyst.Protocol.Rpc.Node.SetPeerBlackListRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes publicKey = 1;
  if (this->publickey().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->publickey());
  }

  // bytes ip = 2;
  if (this->ip().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->ip());
  }

  // bool blacklist = 3;
  if (this->blacklist() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SetPeerBlackListRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Catalyst.Protocol.Rpc.Node.SetPeerBlackListRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const SetPeerBlackListRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SetPeerBlackListRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Catalyst.Protocol.Rpc.Node.SetPeerBlackListRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Catalyst.Protocol.Rpc.Node.SetPeerBlackListRequest)
    MergeFrom(*source);
  }
}

void SetPeerBlackListRequest::MergeFrom(const SetPeerBlackListRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Catalyst.Protocol.Rpc.Node.SetPeerBlackListRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.publickey().size() > 0) {

    publickey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.publickey_);
  }
  if (from.ip().size() > 0) {

    ip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ip_);
  }
  if (from.blacklist() != 0) {
    set_blacklist(from.blacklist());
  }
}

void SetPeerBlackListRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Catalyst.Protocol.Rpc.Node.SetPeerBlackListRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetPeerBlackListRequest::CopyFrom(const SetPeerBlackListRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Catalyst.Protocol.Rpc.Node.SetPeerBlackListRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetPeerBlackListRequest::IsInitialized() const {
  return true;
}

void SetPeerBlackListRequest::Swap(SetPeerBlackListRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetPeerBlackListRequest::InternalSwap(SetPeerBlackListRequest* other) {
  using std::swap;
  publickey_.Swap(&other->publickey_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  ip_.Swap(&other->ip_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(blacklist_, other->blacklist_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SetPeerBlackListRequest::GetMetadata() const {
  protobuf_Rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SetPeerBlackListResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetPeerBlackListResponse::kPublicKeyFieldNumber;
const int SetPeerBlackListResponse::kIpFieldNumber;
const int SetPeerBlackListResponse::kBlacklistFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetPeerBlackListResponse::SetPeerBlackListResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Rpc_2eproto::scc_info_SetPeerBlackListResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Catalyst.Protocol.Rpc.Node.SetPeerBlackListResponse)
}
SetPeerBlackListResponse::SetPeerBlackListResponse(const SetPeerBlackListResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  publickey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.publickey().size() > 0) {
    publickey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.publickey_);
  }
  ip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.ip().size() > 0) {
    ip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ip_);
  }
  blacklist_ = from.blacklist_;
  // @@protoc_insertion_point(copy_constructor:Catalyst.Protocol.Rpc.Node.SetPeerBlackListResponse)
}

void SetPeerBlackListResponse::SharedCtor() {
  publickey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  blacklist_ = false;
}

SetPeerBlackListResponse::~SetPeerBlackListResponse() {
  // @@protoc_insertion_point(destructor:Catalyst.Protocol.Rpc.Node.SetPeerBlackListResponse)
  SharedDtor();
}

void SetPeerBlackListResponse::SharedDtor() {
  publickey_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ip_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SetPeerBlackListResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SetPeerBlackListResponse::descriptor() {
  ::protobuf_Rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SetPeerBlackListResponse& SetPeerBlackListResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Rpc_2eproto::scc_info_SetPeerBlackListResponse.base);
  return *internal_default_instance();
}


void SetPeerBlackListResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:Catalyst.Protocol.Rpc.Node.SetPeerBlackListResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  publickey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  blacklist_ = false;
  _internal_metadata_.Clear();
}

bool SetPeerBlackListResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Catalyst.Protocol.Rpc.Node.SetPeerBlackListResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes publicKey = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_publickey()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes ip = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_ip()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool blacklist = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &blacklist_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Catalyst.Protocol.Rpc.Node.SetPeerBlackListResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Catalyst.Protocol.Rpc.Node.SetPeerBlackListResponse)
  return false;
#undef DO_
}

void SetPeerBlackListResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Catalyst.Protocol.Rpc.Node.SetPeerBlackListResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes publicKey = 1;
  if (this->publickey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->publickey(), output);
  }

  // bytes ip = 2;
  if (this->ip().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->ip(), output);
  }

  // bool blacklist = 3;
  if (this->blacklist() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->blacklist(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Catalyst.Protocol.Rpc.Node.SetPeerBlackListResponse)
}

::google::protobuf::uint8* SetPeerBlackListResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Catalyst.Protocol.Rpc.Node.SetPeerBlackListResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes publicKey = 1;
  if (this->publickey().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->publickey(), target);
  }

  // bytes ip = 2;
  if (this->ip().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->ip(), target);
  }

  // bool blacklist = 3;
  if (this->blacklist() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->blacklist(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Catalyst.Protocol.Rpc.Node.SetPeerBlackListResponse)
  return target;
}

size_t SetPeerBlackListResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Catalyst.Protocol.Rpc.Node.SetPeerBlackListResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes publicKey = 1;
  if (this->publickey().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->publickey());
  }

  // bytes ip = 2;
  if (this->ip().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->ip());
  }

  // bool blacklist = 3;
  if (this->blacklist() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SetPeerBlackListResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Catalyst.Protocol.Rpc.Node.SetPeerBlackListResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const SetPeerBlackListResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SetPeerBlackListResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Catalyst.Protocol.Rpc.Node.SetPeerBlackListResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Catalyst.Protocol.Rpc.Node.SetPeerBlackListResponse)
    MergeFrom(*source);
  }
}

void SetPeerBlackListResponse::MergeFrom(const SetPeerBlackListResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Catalyst.Protocol.Rpc.Node.SetPeerBlackListResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.publickey().size() > 0) {

    publickey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.publickey_);
  }
  if (from.ip().size() > 0) {

    ip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ip_);
  }
  if (from.blacklist() != 0) {
    set_blacklist(from.blacklist());
  }
}

void SetPeerBlackListResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Catalyst.Protocol.Rpc.Node.SetPeerBlackListResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetPeerBlackListResponse::CopyFrom(const SetPeerBlackListResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Catalyst.Protocol.Rpc.Node.SetPeerBlackListResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetPeerBlackListResponse::IsInitialized() const {
  return true;
}

void SetPeerBlackListResponse::Swap(SetPeerBlackListResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetPeerBlackListResponse::InternalSwap(SetPeerBlackListResponse* other) {
  using std::swap;
  publickey_.Swap(&other->publickey_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  ip_.Swap(&other->ip_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(blacklist_, other->blacklist_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SetPeerBlackListResponse::GetMetadata() const {
  protobuf_Rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetPeerInfoRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetPeerInfoRequest::kPublicKeyFieldNumber;
const int GetPeerInfoRequest::kIpFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetPeerInfoRequest::GetPeerInfoRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Rpc_2eproto::scc_info_GetPeerInfoRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Catalyst.Protocol.Rpc.Node.GetPeerInfoRequest)
}
GetPeerInfoRequest::GetPeerInfoRequest(const GetPeerInfoRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  publickey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.publickey().size() > 0) {
    publickey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.publickey_);
  }
  ip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.ip().size() > 0) {
    ip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ip_);
  }
  // @@protoc_insertion_point(copy_constructor:Catalyst.Protocol.Rpc.Node.GetPeerInfoRequest)
}

void GetPeerInfoRequest::SharedCtor() {
  publickey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

GetPeerInfoRequest::~GetPeerInfoRequest() {
  // @@protoc_insertion_point(destructor:Catalyst.Protocol.Rpc.Node.GetPeerInfoRequest)
  SharedDtor();
}

void GetPeerInfoRequest::SharedDtor() {
  publickey_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ip_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetPeerInfoRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GetPeerInfoRequest::descriptor() {
  ::protobuf_Rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetPeerInfoRequest& GetPeerInfoRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Rpc_2eproto::scc_info_GetPeerInfoRequest.base);
  return *internal_default_instance();
}


void GetPeerInfoRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:Catalyst.Protocol.Rpc.Node.GetPeerInfoRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  publickey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool GetPeerInfoRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Catalyst.Protocol.Rpc.Node.GetPeerInfoRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes publicKey = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_publickey()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes ip = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_ip()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Catalyst.Protocol.Rpc.Node.GetPeerInfoRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Catalyst.Protocol.Rpc.Node.GetPeerInfoRequest)
  return false;
#undef DO_
}

void GetPeerInfoRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Catalyst.Protocol.Rpc.Node.GetPeerInfoRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes publicKey = 1;
  if (this->publickey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->publickey(), output);
  }

  // bytes ip = 2;
  if (this->ip().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->ip(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Catalyst.Protocol.Rpc.Node.GetPeerInfoRequest)
}

::google::protobuf::uint8* GetPeerInfoRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Catalyst.Protocol.Rpc.Node.GetPeerInfoRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes publicKey = 1;
  if (this->publickey().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->publickey(), target);
  }

  // bytes ip = 2;
  if (this->ip().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->ip(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Catalyst.Protocol.Rpc.Node.GetPeerInfoRequest)
  return target;
}

size_t GetPeerInfoRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Catalyst.Protocol.Rpc.Node.GetPeerInfoRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes publicKey = 1;
  if (this->publickey().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->publickey());
  }

  // bytes ip = 2;
  if (this->ip().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->ip());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetPeerInfoRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Catalyst.Protocol.Rpc.Node.GetPeerInfoRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetPeerInfoRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetPeerInfoRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Catalyst.Protocol.Rpc.Node.GetPeerInfoRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Catalyst.Protocol.Rpc.Node.GetPeerInfoRequest)
    MergeFrom(*source);
  }
}

void GetPeerInfoRequest::MergeFrom(const GetPeerInfoRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Catalyst.Protocol.Rpc.Node.GetPeerInfoRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.publickey().size() > 0) {

    publickey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.publickey_);
  }
  if (from.ip().size() > 0) {

    ip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ip_);
  }
}

void GetPeerInfoRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Catalyst.Protocol.Rpc.Node.GetPeerInfoRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetPeerInfoRequest::CopyFrom(const GetPeerInfoRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Catalyst.Protocol.Rpc.Node.GetPeerInfoRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetPeerInfoRequest::IsInitialized() const {
  return true;
}

void GetPeerInfoRequest::Swap(GetPeerInfoRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetPeerInfoRequest::InternalSwap(GetPeerInfoRequest* other) {
  using std::swap;
  publickey_.Swap(&other->publickey_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  ip_.Swap(&other->ip_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GetPeerInfoRequest::GetMetadata() const {
  protobuf_Rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetPeerInfoResponse::InitAsDefaultInstance() {
}
void GetPeerInfoResponse::clear_peerinfo() {
  peerinfo_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetPeerInfoResponse::kPeerInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetPeerInfoResponse::GetPeerInfoResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Rpc_2eproto::scc_info_GetPeerInfoResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Catalyst.Protocol.Rpc.Node.GetPeerInfoResponse)
}
GetPeerInfoResponse::GetPeerInfoResponse(const GetPeerInfoResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      peerinfo_(from.peerinfo_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Catalyst.Protocol.Rpc.Node.GetPeerInfoResponse)
}

void GetPeerInfoResponse::SharedCtor() {
}

GetPeerInfoResponse::~GetPeerInfoResponse() {
  // @@protoc_insertion_point(destructor:Catalyst.Protocol.Rpc.Node.GetPeerInfoResponse)
  SharedDtor();
}

void GetPeerInfoResponse::SharedDtor() {
}

void GetPeerInfoResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GetPeerInfoResponse::descriptor() {
  ::protobuf_Rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetPeerInfoResponse& GetPeerInfoResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Rpc_2eproto::scc_info_GetPeerInfoResponse.base);
  return *internal_default_instance();
}


void GetPeerInfoResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:Catalyst.Protocol.Rpc.Node.GetPeerInfoResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  peerinfo_.Clear();
  _internal_metadata_.Clear();
}

bool GetPeerInfoResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Catalyst.Protocol.Rpc.Node.GetPeerInfoResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .Catalyst.Protocol.Common.PeerInfo PeerInfo = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_peerinfo()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Catalyst.Protocol.Rpc.Node.GetPeerInfoResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Catalyst.Protocol.Rpc.Node.GetPeerInfoResponse)
  return false;
#undef DO_
}

void GetPeerInfoResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Catalyst.Protocol.Rpc.Node.GetPeerInfoResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .Catalyst.Protocol.Common.PeerInfo PeerInfo = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->peerinfo_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->peerinfo(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Catalyst.Protocol.Rpc.Node.GetPeerInfoResponse)
}

::google::protobuf::uint8* GetPeerInfoResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Catalyst.Protocol.Rpc.Node.GetPeerInfoResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .Catalyst.Protocol.Common.PeerInfo PeerInfo = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->peerinfo_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->peerinfo(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Catalyst.Protocol.Rpc.Node.GetPeerInfoResponse)
  return target;
}

size_t GetPeerInfoResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Catalyst.Protocol.Rpc.Node.GetPeerInfoResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .Catalyst.Protocol.Common.PeerInfo PeerInfo = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->peerinfo_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->peerinfo(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetPeerInfoResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Catalyst.Protocol.Rpc.Node.GetPeerInfoResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetPeerInfoResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetPeerInfoResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Catalyst.Protocol.Rpc.Node.GetPeerInfoResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Catalyst.Protocol.Rpc.Node.GetPeerInfoResponse)
    MergeFrom(*source);
  }
}

void GetPeerInfoResponse::MergeFrom(const GetPeerInfoResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Catalyst.Protocol.Rpc.Node.GetPeerInfoResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  peerinfo_.MergeFrom(from.peerinfo_);
}

void GetPeerInfoResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Catalyst.Protocol.Rpc.Node.GetPeerInfoResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetPeerInfoResponse::CopyFrom(const GetPeerInfoResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Catalyst.Protocol.Rpc.Node.GetPeerInfoResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetPeerInfoResponse::IsInitialized() const {
  return true;
}

void GetPeerInfoResponse::Swap(GetPeerInfoResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetPeerInfoResponse::InternalSwap(GetPeerInfoResponse* other) {
  using std::swap;
  CastToBase(&peerinfo_)->InternalSwap(CastToBase(&other->peerinfo_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GetPeerInfoResponse::GetMetadata() const {
  protobuf_Rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetConnectionCountRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetConnectionCountRequest::kQueryFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetConnectionCountRequest::GetConnectionCountRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Rpc_2eproto::scc_info_GetConnectionCountRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Catalyst.Protocol.Rpc.Node.GetConnectionCountRequest)
}
GetConnectionCountRequest::GetConnectionCountRequest(const GetConnectionCountRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  query_ = from.query_;
  // @@protoc_insertion_point(copy_constructor:Catalyst.Protocol.Rpc.Node.GetConnectionCountRequest)
}

void GetConnectionCountRequest::SharedCtor() {
  query_ = false;
}

GetConnectionCountRequest::~GetConnectionCountRequest() {
  // @@protoc_insertion_point(destructor:Catalyst.Protocol.Rpc.Node.GetConnectionCountRequest)
  SharedDtor();
}

void GetConnectionCountRequest::SharedDtor() {
}

void GetConnectionCountRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GetConnectionCountRequest::descriptor() {
  ::protobuf_Rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetConnectionCountRequest& GetConnectionCountRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Rpc_2eproto::scc_info_GetConnectionCountRequest.base);
  return *internal_default_instance();
}


void GetConnectionCountRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:Catalyst.Protocol.Rpc.Node.GetConnectionCountRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  query_ = false;
  _internal_metadata_.Clear();
}

bool GetConnectionCountRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Catalyst.Protocol.Rpc.Node.GetConnectionCountRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool query = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &query_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Catalyst.Protocol.Rpc.Node.GetConnectionCountRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Catalyst.Protocol.Rpc.Node.GetConnectionCountRequest)
  return false;
#undef DO_
}

void GetConnectionCountRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Catalyst.Protocol.Rpc.Node.GetConnectionCountRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool query = 1;
  if (this->query() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->query(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Catalyst.Protocol.Rpc.Node.GetConnectionCountRequest)
}

::google::protobuf::uint8* GetConnectionCountRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Catalyst.Protocol.Rpc.Node.GetConnectionCountRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool query = 1;
  if (this->query() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->query(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Catalyst.Protocol.Rpc.Node.GetConnectionCountRequest)
  return target;
}

size_t GetConnectionCountRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Catalyst.Protocol.Rpc.Node.GetConnectionCountRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bool query = 1;
  if (this->query() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetConnectionCountRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Catalyst.Protocol.Rpc.Node.GetConnectionCountRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetConnectionCountRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetConnectionCountRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Catalyst.Protocol.Rpc.Node.GetConnectionCountRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Catalyst.Protocol.Rpc.Node.GetConnectionCountRequest)
    MergeFrom(*source);
  }
}

void GetConnectionCountRequest::MergeFrom(const GetConnectionCountRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Catalyst.Protocol.Rpc.Node.GetConnectionCountRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.query() != 0) {
    set_query(from.query());
  }
}

void GetConnectionCountRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Catalyst.Protocol.Rpc.Node.GetConnectionCountRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetConnectionCountRequest::CopyFrom(const GetConnectionCountRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Catalyst.Protocol.Rpc.Node.GetConnectionCountRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetConnectionCountRequest::IsInitialized() const {
  return true;
}

void GetConnectionCountRequest::Swap(GetConnectionCountRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetConnectionCountRequest::InternalSwap(GetConnectionCountRequest* other) {
  using std::swap;
  swap(query_, other->query_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GetConnectionCountRequest::GetMetadata() const {
  protobuf_Rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetConnectionCountResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetConnectionCountResponse::kQueryFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetConnectionCountResponse::GetConnectionCountResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Rpc_2eproto::scc_info_GetConnectionCountResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Catalyst.Protocol.Rpc.Node.GetConnectionCountResponse)
}
GetConnectionCountResponse::GetConnectionCountResponse(const GetConnectionCountResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  query_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.query().size() > 0) {
    query_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.query_);
  }
  // @@protoc_insertion_point(copy_constructor:Catalyst.Protocol.Rpc.Node.GetConnectionCountResponse)
}

void GetConnectionCountResponse::SharedCtor() {
  query_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

GetConnectionCountResponse::~GetConnectionCountResponse() {
  // @@protoc_insertion_point(destructor:Catalyst.Protocol.Rpc.Node.GetConnectionCountResponse)
  SharedDtor();
}

void GetConnectionCountResponse::SharedDtor() {
  query_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetConnectionCountResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GetConnectionCountResponse::descriptor() {
  ::protobuf_Rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetConnectionCountResponse& GetConnectionCountResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Rpc_2eproto::scc_info_GetConnectionCountResponse.base);
  return *internal_default_instance();
}


void GetConnectionCountResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:Catalyst.Protocol.Rpc.Node.GetConnectionCountResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  query_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool GetConnectionCountResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Catalyst.Protocol.Rpc.Node.GetConnectionCountResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string query = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_query()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->query().data(), static_cast<int>(this->query().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Catalyst.Protocol.Rpc.Node.GetConnectionCountResponse.query"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Catalyst.Protocol.Rpc.Node.GetConnectionCountResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Catalyst.Protocol.Rpc.Node.GetConnectionCountResponse)
  return false;
#undef DO_
}

void GetConnectionCountResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Catalyst.Protocol.Rpc.Node.GetConnectionCountResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string query = 1;
  if (this->query().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->query().data(), static_cast<int>(this->query().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Catalyst.Protocol.Rpc.Node.GetConnectionCountResponse.query");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->query(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Catalyst.Protocol.Rpc.Node.GetConnectionCountResponse)
}

::google::protobuf::uint8* GetConnectionCountResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Catalyst.Protocol.Rpc.Node.GetConnectionCountResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string query = 1;
  if (this->query().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->query().data(), static_cast<int>(this->query().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Catalyst.Protocol.Rpc.Node.GetConnectionCountResponse.query");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->query(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Catalyst.Protocol.Rpc.Node.GetConnectionCountResponse)
  return target;
}

size_t GetConnectionCountResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Catalyst.Protocol.Rpc.Node.GetConnectionCountResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string query = 1;
  if (this->query().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->query());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetConnectionCountResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Catalyst.Protocol.Rpc.Node.GetConnectionCountResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetConnectionCountResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetConnectionCountResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Catalyst.Protocol.Rpc.Node.GetConnectionCountResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Catalyst.Protocol.Rpc.Node.GetConnectionCountResponse)
    MergeFrom(*source);
  }
}

void GetConnectionCountResponse::MergeFrom(const GetConnectionCountResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Catalyst.Protocol.Rpc.Node.GetConnectionCountResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.query().size() > 0) {

    query_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.query_);
  }
}

void GetConnectionCountResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Catalyst.Protocol.Rpc.Node.GetConnectionCountResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetConnectionCountResponse::CopyFrom(const GetConnectionCountResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Catalyst.Protocol.Rpc.Node.GetConnectionCountResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetConnectionCountResponse::IsInitialized() const {
  return true;
}

void GetConnectionCountResponse::Swap(GetConnectionCountResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetConnectionCountResponse::InternalSwap(GetConnectionCountResponse* other) {
  using std::swap;
  query_.Swap(&other->query_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GetConnectionCountResponse::GetMetadata() const {
  protobuf_Rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetDeltaRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetDeltaRequest::kDeltaDfsHashFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetDeltaRequest::GetDeltaRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Rpc_2eproto::scc_info_GetDeltaRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Catalyst.Protocol.Rpc.Node.GetDeltaRequest)
}
GetDeltaRequest::GetDeltaRequest(const GetDeltaRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  deltadfshash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.deltadfshash().size() > 0) {
    deltadfshash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.deltadfshash_);
  }
  // @@protoc_insertion_point(copy_constructor:Catalyst.Protocol.Rpc.Node.GetDeltaRequest)
}

void GetDeltaRequest::SharedCtor() {
  deltadfshash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

GetDeltaRequest::~GetDeltaRequest() {
  // @@protoc_insertion_point(destructor:Catalyst.Protocol.Rpc.Node.GetDeltaRequest)
  SharedDtor();
}

void GetDeltaRequest::SharedDtor() {
  deltadfshash_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetDeltaRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GetDeltaRequest::descriptor() {
  ::protobuf_Rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetDeltaRequest& GetDeltaRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Rpc_2eproto::scc_info_GetDeltaRequest.base);
  return *internal_default_instance();
}


void GetDeltaRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:Catalyst.Protocol.Rpc.Node.GetDeltaRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  deltadfshash_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool GetDeltaRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Catalyst.Protocol.Rpc.Node.GetDeltaRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes DeltaDfsHash = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_deltadfshash()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Catalyst.Protocol.Rpc.Node.GetDeltaRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Catalyst.Protocol.Rpc.Node.GetDeltaRequest)
  return false;
#undef DO_
}

void GetDeltaRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Catalyst.Protocol.Rpc.Node.GetDeltaRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes DeltaDfsHash = 1;
  if (this->deltadfshash().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->deltadfshash(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Catalyst.Protocol.Rpc.Node.GetDeltaRequest)
}

::google::protobuf::uint8* GetDeltaRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Catalyst.Protocol.Rpc.Node.GetDeltaRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes DeltaDfsHash = 1;
  if (this->deltadfshash().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->deltadfshash(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Catalyst.Protocol.Rpc.Node.GetDeltaRequest)
  return target;
}

size_t GetDeltaRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Catalyst.Protocol.Rpc.Node.GetDeltaRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes DeltaDfsHash = 1;
  if (this->deltadfshash().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->deltadfshash());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetDeltaRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Catalyst.Protocol.Rpc.Node.GetDeltaRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetDeltaRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetDeltaRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Catalyst.Protocol.Rpc.Node.GetDeltaRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Catalyst.Protocol.Rpc.Node.GetDeltaRequest)
    MergeFrom(*source);
  }
}

void GetDeltaRequest::MergeFrom(const GetDeltaRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Catalyst.Protocol.Rpc.Node.GetDeltaRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.deltadfshash().size() > 0) {

    deltadfshash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.deltadfshash_);
  }
}

void GetDeltaRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Catalyst.Protocol.Rpc.Node.GetDeltaRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetDeltaRequest::CopyFrom(const GetDeltaRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Catalyst.Protocol.Rpc.Node.GetDeltaRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetDeltaRequest::IsInitialized() const {
  return true;
}

void GetDeltaRequest::Swap(GetDeltaRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetDeltaRequest::InternalSwap(GetDeltaRequest* other) {
  using std::swap;
  deltadfshash_.Swap(&other->deltadfshash_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GetDeltaRequest::GetMetadata() const {
  protobuf_Rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetDeltaResponse::InitAsDefaultInstance() {
  ::Catalyst::Protocol::Rpc::Node::_GetDeltaResponse_default_instance_._instance.get_mutable()->delta_ = const_cast< ::Catalyst::Protocol::Deltas::Delta*>(
      ::Catalyst::Protocol::Deltas::Delta::internal_default_instance());
}
void GetDeltaResponse::clear_delta() {
  if (GetArenaNoVirtual() == NULL && delta_ != NULL) {
    delete delta_;
  }
  delta_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetDeltaResponse::kDeltaFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetDeltaResponse::GetDeltaResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Rpc_2eproto::scc_info_GetDeltaResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Catalyst.Protocol.Rpc.Node.GetDeltaResponse)
}
GetDeltaResponse::GetDeltaResponse(const GetDeltaResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_delta()) {
    delta_ = new ::Catalyst::Protocol::Deltas::Delta(*from.delta_);
  } else {
    delta_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:Catalyst.Protocol.Rpc.Node.GetDeltaResponse)
}

void GetDeltaResponse::SharedCtor() {
  delta_ = NULL;
}

GetDeltaResponse::~GetDeltaResponse() {
  // @@protoc_insertion_point(destructor:Catalyst.Protocol.Rpc.Node.GetDeltaResponse)
  SharedDtor();
}

void GetDeltaResponse::SharedDtor() {
  if (this != internal_default_instance()) delete delta_;
}

void GetDeltaResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GetDeltaResponse::descriptor() {
  ::protobuf_Rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetDeltaResponse& GetDeltaResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Rpc_2eproto::scc_info_GetDeltaResponse.base);
  return *internal_default_instance();
}


void GetDeltaResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:Catalyst.Protocol.Rpc.Node.GetDeltaResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && delta_ != NULL) {
    delete delta_;
  }
  delta_ = NULL;
  _internal_metadata_.Clear();
}

bool GetDeltaResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Catalyst.Protocol.Rpc.Node.GetDeltaResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .Catalyst.Protocol.Deltas.Delta Delta = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_delta()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Catalyst.Protocol.Rpc.Node.GetDeltaResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Catalyst.Protocol.Rpc.Node.GetDeltaResponse)
  return false;
#undef DO_
}

void GetDeltaResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Catalyst.Protocol.Rpc.Node.GetDeltaResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .Catalyst.Protocol.Deltas.Delta Delta = 1;
  if (this->has_delta()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_delta(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Catalyst.Protocol.Rpc.Node.GetDeltaResponse)
}

::google::protobuf::uint8* GetDeltaResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Catalyst.Protocol.Rpc.Node.GetDeltaResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .Catalyst.Protocol.Deltas.Delta Delta = 1;
  if (this->has_delta()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_delta(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Catalyst.Protocol.Rpc.Node.GetDeltaResponse)
  return target;
}

size_t GetDeltaResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Catalyst.Protocol.Rpc.Node.GetDeltaResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .Catalyst.Protocol.Deltas.Delta Delta = 1;
  if (this->has_delta()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *delta_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetDeltaResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Catalyst.Protocol.Rpc.Node.GetDeltaResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetDeltaResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetDeltaResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Catalyst.Protocol.Rpc.Node.GetDeltaResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Catalyst.Protocol.Rpc.Node.GetDeltaResponse)
    MergeFrom(*source);
  }
}

void GetDeltaResponse::MergeFrom(const GetDeltaResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Catalyst.Protocol.Rpc.Node.GetDeltaResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_delta()) {
    mutable_delta()->::Catalyst::Protocol::Deltas::Delta::MergeFrom(from.delta());
  }
}

void GetDeltaResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Catalyst.Protocol.Rpc.Node.GetDeltaResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetDeltaResponse::CopyFrom(const GetDeltaResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Catalyst.Protocol.Rpc.Node.GetDeltaResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetDeltaResponse::IsInitialized() const {
  return true;
}

void GetDeltaResponse::Swap(GetDeltaResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetDeltaResponse::InternalSwap(GetDeltaResponse* other) {
  using std::swap;
  swap(delta_, other->delta_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GetDeltaResponse::GetMetadata() const {
  protobuf_Rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetMempoolRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetMempoolRequest::kQueryFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetMempoolRequest::GetMempoolRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Rpc_2eproto::scc_info_GetMempoolRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Catalyst.Protocol.Rpc.Node.GetMempoolRequest)
}
GetMempoolRequest::GetMempoolRequest(const GetMempoolRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  query_ = from.query_;
  // @@protoc_insertion_point(copy_constructor:Catalyst.Protocol.Rpc.Node.GetMempoolRequest)
}

void GetMempoolRequest::SharedCtor() {
  query_ = false;
}

GetMempoolRequest::~GetMempoolRequest() {
  // @@protoc_insertion_point(destructor:Catalyst.Protocol.Rpc.Node.GetMempoolRequest)
  SharedDtor();
}

void GetMempoolRequest::SharedDtor() {
}

void GetMempoolRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GetMempoolRequest::descriptor() {
  ::protobuf_Rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetMempoolRequest& GetMempoolRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Rpc_2eproto::scc_info_GetMempoolRequest.base);
  return *internal_default_instance();
}


void GetMempoolRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:Catalyst.Protocol.Rpc.Node.GetMempoolRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  query_ = false;
  _internal_metadata_.Clear();
}

bool GetMempoolRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Catalyst.Protocol.Rpc.Node.GetMempoolRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool query = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &query_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Catalyst.Protocol.Rpc.Node.GetMempoolRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Catalyst.Protocol.Rpc.Node.GetMempoolRequest)
  return false;
#undef DO_
}

void GetMempoolRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Catalyst.Protocol.Rpc.Node.GetMempoolRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool query = 1;
  if (this->query() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->query(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Catalyst.Protocol.Rpc.Node.GetMempoolRequest)
}

::google::protobuf::uint8* GetMempoolRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Catalyst.Protocol.Rpc.Node.GetMempoolRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool query = 1;
  if (this->query() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->query(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Catalyst.Protocol.Rpc.Node.GetMempoolRequest)
  return target;
}

size_t GetMempoolRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Catalyst.Protocol.Rpc.Node.GetMempoolRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bool query = 1;
  if (this->query() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetMempoolRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Catalyst.Protocol.Rpc.Node.GetMempoolRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetMempoolRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetMempoolRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Catalyst.Protocol.Rpc.Node.GetMempoolRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Catalyst.Protocol.Rpc.Node.GetMempoolRequest)
    MergeFrom(*source);
  }
}

void GetMempoolRequest::MergeFrom(const GetMempoolRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Catalyst.Protocol.Rpc.Node.GetMempoolRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.query() != 0) {
    set_query(from.query());
  }
}

void GetMempoolRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Catalyst.Protocol.Rpc.Node.GetMempoolRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetMempoolRequest::CopyFrom(const GetMempoolRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Catalyst.Protocol.Rpc.Node.GetMempoolRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetMempoolRequest::IsInitialized() const {
  return true;
}

void GetMempoolRequest::Swap(GetMempoolRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetMempoolRequest::InternalSwap(GetMempoolRequest* other) {
  using std::swap;
  swap(query_, other->query_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GetMempoolRequest::GetMetadata() const {
  protobuf_Rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetMempoolResponse::InitAsDefaultInstance() {
}
void GetMempoolResponse::clear_transactions() {
  transactions_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetMempoolResponse::kTransactionsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetMempoolResponse::GetMempoolResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Rpc_2eproto::scc_info_GetMempoolResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Catalyst.Protocol.Rpc.Node.GetMempoolResponse)
}
GetMempoolResponse::GetMempoolResponse(const GetMempoolResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      transactions_(from.transactions_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Catalyst.Protocol.Rpc.Node.GetMempoolResponse)
}

void GetMempoolResponse::SharedCtor() {
}

GetMempoolResponse::~GetMempoolResponse() {
  // @@protoc_insertion_point(destructor:Catalyst.Protocol.Rpc.Node.GetMempoolResponse)
  SharedDtor();
}

void GetMempoolResponse::SharedDtor() {
}

void GetMempoolResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GetMempoolResponse::descriptor() {
  ::protobuf_Rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetMempoolResponse& GetMempoolResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Rpc_2eproto::scc_info_GetMempoolResponse.base);
  return *internal_default_instance();
}


void GetMempoolResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:Catalyst.Protocol.Rpc.Node.GetMempoolResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  transactions_.Clear();
  _internal_metadata_.Clear();
}

bool GetMempoolResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Catalyst.Protocol.Rpc.Node.GetMempoolResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .Catalyst.Protocol.Transaction.TransactionBroadcast transactions = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_transactions()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Catalyst.Protocol.Rpc.Node.GetMempoolResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Catalyst.Protocol.Rpc.Node.GetMempoolResponse)
  return false;
#undef DO_
}

void GetMempoolResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Catalyst.Protocol.Rpc.Node.GetMempoolResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .Catalyst.Protocol.Transaction.TransactionBroadcast transactions = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->transactions_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->transactions(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Catalyst.Protocol.Rpc.Node.GetMempoolResponse)
}

::google::protobuf::uint8* GetMempoolResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Catalyst.Protocol.Rpc.Node.GetMempoolResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .Catalyst.Protocol.Transaction.TransactionBroadcast transactions = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->transactions_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->transactions(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Catalyst.Protocol.Rpc.Node.GetMempoolResponse)
  return target;
}

size_t GetMempoolResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Catalyst.Protocol.Rpc.Node.GetMempoolResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .Catalyst.Protocol.Transaction.TransactionBroadcast transactions = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->transactions_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->transactions(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetMempoolResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Catalyst.Protocol.Rpc.Node.GetMempoolResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetMempoolResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetMempoolResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Catalyst.Protocol.Rpc.Node.GetMempoolResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Catalyst.Protocol.Rpc.Node.GetMempoolResponse)
    MergeFrom(*source);
  }
}

void GetMempoolResponse::MergeFrom(const GetMempoolResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Catalyst.Protocol.Rpc.Node.GetMempoolResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  transactions_.MergeFrom(from.transactions_);
}

void GetMempoolResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Catalyst.Protocol.Rpc.Node.GetMempoolResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetMempoolResponse::CopyFrom(const GetMempoolResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Catalyst.Protocol.Rpc.Node.GetMempoolResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetMempoolResponse::IsInitialized() const {
  return true;
}

void GetMempoolResponse::Swap(GetMempoolResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetMempoolResponse::InternalSwap(GetMempoolResponse* other) {
  using std::swap;
  CastToBase(&transactions_)->InternalSwap(CastToBase(&other->transactions_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GetMempoolResponse::GetMetadata() const {
  protobuf_Rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SignMessageRequest::InitAsDefaultInstance() {
  ::Catalyst::Protocol::Rpc::Node::_SignMessageRequest_default_instance_._instance.get_mutable()->signingcontext_ = const_cast< ::Catalyst::Protocol::Common::SigningContext*>(
      ::Catalyst::Protocol::Common::SigningContext::internal_default_instance());
}
void SignMessageRequest::clear_signingcontext() {
  if (GetArenaNoVirtual() == NULL && signingcontext_ != NULL) {
    delete signingcontext_;
  }
  signingcontext_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SignMessageRequest::kMessageFieldNumber;
const int SignMessageRequest::kKeyIdFieldNumber;
const int SignMessageRequest::kSigningContextFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SignMessageRequest::SignMessageRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Rpc_2eproto::scc_info_SignMessageRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Catalyst.Protocol.Rpc.Node.SignMessageRequest)
}
SignMessageRequest::SignMessageRequest(const SignMessageRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.message().size() > 0) {
    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  keyid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.keyid().size() > 0) {
    keyid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.keyid_);
  }
  if (from.has_signingcontext()) {
    signingcontext_ = new ::Catalyst::Protocol::Common::SigningContext(*from.signingcontext_);
  } else {
    signingcontext_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:Catalyst.Protocol.Rpc.Node.SignMessageRequest)
}

void SignMessageRequest::SharedCtor() {
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  keyid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  signingcontext_ = NULL;
}

SignMessageRequest::~SignMessageRequest() {
  // @@protoc_insertion_point(destructor:Catalyst.Protocol.Rpc.Node.SignMessageRequest)
  SharedDtor();
}

void SignMessageRequest::SharedDtor() {
  message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  keyid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete signingcontext_;
}

void SignMessageRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SignMessageRequest::descriptor() {
  ::protobuf_Rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SignMessageRequest& SignMessageRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Rpc_2eproto::scc_info_SignMessageRequest.base);
  return *internal_default_instance();
}


void SignMessageRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:Catalyst.Protocol.Rpc.Node.SignMessageRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  keyid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && signingcontext_ != NULL) {
    delete signingcontext_;
  }
  signingcontext_ = NULL;
  _internal_metadata_.Clear();
}

bool SignMessageRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Catalyst.Protocol.Rpc.Node.SignMessageRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes message = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_message()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string keyId = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_keyid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->keyid().data(), static_cast<int>(this->keyid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Catalyst.Protocol.Rpc.Node.SignMessageRequest.keyId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Catalyst.Protocol.Common.SigningContext signingContext = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_signingcontext()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Catalyst.Protocol.Rpc.Node.SignMessageRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Catalyst.Protocol.Rpc.Node.SignMessageRequest)
  return false;
#undef DO_
}

void SignMessageRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Catalyst.Protocol.Rpc.Node.SignMessageRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes message = 1;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->message(), output);
  }

  // string keyId = 2;
  if (this->keyid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->keyid().data(), static_cast<int>(this->keyid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Catalyst.Protocol.Rpc.Node.SignMessageRequest.keyId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->keyid(), output);
  }

  // .Catalyst.Protocol.Common.SigningContext signingContext = 3;
  if (this->has_signingcontext()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_signingcontext(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Catalyst.Protocol.Rpc.Node.SignMessageRequest)
}

::google::protobuf::uint8* SignMessageRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Catalyst.Protocol.Rpc.Node.SignMessageRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes message = 1;
  if (this->message().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->message(), target);
  }

  // string keyId = 2;
  if (this->keyid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->keyid().data(), static_cast<int>(this->keyid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Catalyst.Protocol.Rpc.Node.SignMessageRequest.keyId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->keyid(), target);
  }

  // .Catalyst.Protocol.Common.SigningContext signingContext = 3;
  if (this->has_signingcontext()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_signingcontext(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Catalyst.Protocol.Rpc.Node.SignMessageRequest)
  return target;
}

size_t SignMessageRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Catalyst.Protocol.Rpc.Node.SignMessageRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes message = 1;
  if (this->message().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->message());
  }

  // string keyId = 2;
  if (this->keyid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->keyid());
  }

  // .Catalyst.Protocol.Common.SigningContext signingContext = 3;
  if (this->has_signingcontext()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *signingcontext_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SignMessageRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Catalyst.Protocol.Rpc.Node.SignMessageRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const SignMessageRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SignMessageRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Catalyst.Protocol.Rpc.Node.SignMessageRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Catalyst.Protocol.Rpc.Node.SignMessageRequest)
    MergeFrom(*source);
  }
}

void SignMessageRequest::MergeFrom(const SignMessageRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Catalyst.Protocol.Rpc.Node.SignMessageRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.message().size() > 0) {

    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  if (from.keyid().size() > 0) {

    keyid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.keyid_);
  }
  if (from.has_signingcontext()) {
    mutable_signingcontext()->::Catalyst::Protocol::Common::SigningContext::MergeFrom(from.signingcontext());
  }
}

void SignMessageRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Catalyst.Protocol.Rpc.Node.SignMessageRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SignMessageRequest::CopyFrom(const SignMessageRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Catalyst.Protocol.Rpc.Node.SignMessageRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SignMessageRequest::IsInitialized() const {
  return true;
}

void SignMessageRequest::Swap(SignMessageRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SignMessageRequest::InternalSwap(SignMessageRequest* other) {
  using std::swap;
  message_.Swap(&other->message_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  keyid_.Swap(&other->keyid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(signingcontext_, other->signingcontext_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SignMessageRequest::GetMetadata() const {
  protobuf_Rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SignMessageResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SignMessageResponse::kSignatureFieldNumber;
const int SignMessageResponse::kPublicKeyFieldNumber;
const int SignMessageResponse::kOriginalMessageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SignMessageResponse::SignMessageResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Rpc_2eproto::scc_info_SignMessageResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Catalyst.Protocol.Rpc.Node.SignMessageResponse)
}
SignMessageResponse::SignMessageResponse(const SignMessageResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  signature_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.signature().size() > 0) {
    signature_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.signature_);
  }
  publickey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.publickey().size() > 0) {
    publickey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.publickey_);
  }
  originalmessage_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.originalmessage().size() > 0) {
    originalmessage_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.originalmessage_);
  }
  // @@protoc_insertion_point(copy_constructor:Catalyst.Protocol.Rpc.Node.SignMessageResponse)
}

void SignMessageResponse::SharedCtor() {
  signature_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  publickey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  originalmessage_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

SignMessageResponse::~SignMessageResponse() {
  // @@protoc_insertion_point(destructor:Catalyst.Protocol.Rpc.Node.SignMessageResponse)
  SharedDtor();
}

void SignMessageResponse::SharedDtor() {
  signature_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  publickey_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  originalmessage_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SignMessageResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SignMessageResponse::descriptor() {
  ::protobuf_Rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SignMessageResponse& SignMessageResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Rpc_2eproto::scc_info_SignMessageResponse.base);
  return *internal_default_instance();
}


void SignMessageResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:Catalyst.Protocol.Rpc.Node.SignMessageResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  signature_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  publickey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  originalmessage_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool SignMessageResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Catalyst.Protocol.Rpc.Node.SignMessageResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes signature = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_signature()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes publicKey = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_publickey()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes originalMessage = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_originalmessage()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Catalyst.Protocol.Rpc.Node.SignMessageResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Catalyst.Protocol.Rpc.Node.SignMessageResponse)
  return false;
#undef DO_
}

void SignMessageResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Catalyst.Protocol.Rpc.Node.SignMessageResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes signature = 1;
  if (this->signature().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->signature(), output);
  }

  // bytes publicKey = 2;
  if (this->publickey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->publickey(), output);
  }

  // bytes originalMessage = 3;
  if (this->originalmessage().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->originalmessage(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Catalyst.Protocol.Rpc.Node.SignMessageResponse)
}

::google::protobuf::uint8* SignMessageResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Catalyst.Protocol.Rpc.Node.SignMessageResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes signature = 1;
  if (this->signature().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->signature(), target);
  }

  // bytes publicKey = 2;
  if (this->publickey().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->publickey(), target);
  }

  // bytes originalMessage = 3;
  if (this->originalmessage().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->originalmessage(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Catalyst.Protocol.Rpc.Node.SignMessageResponse)
  return target;
}

size_t SignMessageResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Catalyst.Protocol.Rpc.Node.SignMessageResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes signature = 1;
  if (this->signature().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->signature());
  }

  // bytes publicKey = 2;
  if (this->publickey().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->publickey());
  }

  // bytes originalMessage = 3;
  if (this->originalmessage().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->originalmessage());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SignMessageResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Catalyst.Protocol.Rpc.Node.SignMessageResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const SignMessageResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SignMessageResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Catalyst.Protocol.Rpc.Node.SignMessageResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Catalyst.Protocol.Rpc.Node.SignMessageResponse)
    MergeFrom(*source);
  }
}

void SignMessageResponse::MergeFrom(const SignMessageResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Catalyst.Protocol.Rpc.Node.SignMessageResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.signature().size() > 0) {

    signature_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.signature_);
  }
  if (from.publickey().size() > 0) {

    publickey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.publickey_);
  }
  if (from.originalmessage().size() > 0) {

    originalmessage_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.originalmessage_);
  }
}

void SignMessageResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Catalyst.Protocol.Rpc.Node.SignMessageResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SignMessageResponse::CopyFrom(const SignMessageResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Catalyst.Protocol.Rpc.Node.SignMessageResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SignMessageResponse::IsInitialized() const {
  return true;
}

void SignMessageResponse::Swap(SignMessageResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SignMessageResponse::InternalSwap(SignMessageResponse* other) {
  using std::swap;
  signature_.Swap(&other->signature_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  publickey_.Swap(&other->publickey_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  originalmessage_.Swap(&other->originalmessage_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SignMessageResponse::GetMetadata() const {
  protobuf_Rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void VerifyMessageRequest::InitAsDefaultInstance() {
  ::Catalyst::Protocol::Rpc::Node::_VerifyMessageRequest_default_instance_._instance.get_mutable()->signingcontext_ = const_cast< ::Catalyst::Protocol::Common::SigningContext*>(
      ::Catalyst::Protocol::Common::SigningContext::internal_default_instance());
}
void VerifyMessageRequest::clear_signingcontext() {
  if (GetArenaNoVirtual() == NULL && signingcontext_ != NULL) {
    delete signingcontext_;
  }
  signingcontext_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int VerifyMessageRequest::kSignatureFieldNumber;
const int VerifyMessageRequest::kPublicKeyFieldNumber;
const int VerifyMessageRequest::kMessageFieldNumber;
const int VerifyMessageRequest::kSigningContextFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

VerifyMessageRequest::VerifyMessageRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Rpc_2eproto::scc_info_VerifyMessageRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Catalyst.Protocol.Rpc.Node.VerifyMessageRequest)
}
VerifyMessageRequest::VerifyMessageRequest(const VerifyMessageRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  signature_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.signature().size() > 0) {
    signature_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.signature_);
  }
  publickey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.publickey().size() > 0) {
    publickey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.publickey_);
  }
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.message().size() > 0) {
    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  if (from.has_signingcontext()) {
    signingcontext_ = new ::Catalyst::Protocol::Common::SigningContext(*from.signingcontext_);
  } else {
    signingcontext_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:Catalyst.Protocol.Rpc.Node.VerifyMessageRequest)
}

void VerifyMessageRequest::SharedCtor() {
  signature_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  publickey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  signingcontext_ = NULL;
}

VerifyMessageRequest::~VerifyMessageRequest() {
  // @@protoc_insertion_point(destructor:Catalyst.Protocol.Rpc.Node.VerifyMessageRequest)
  SharedDtor();
}

void VerifyMessageRequest::SharedDtor() {
  signature_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  publickey_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete signingcontext_;
}

void VerifyMessageRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* VerifyMessageRequest::descriptor() {
  ::protobuf_Rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const VerifyMessageRequest& VerifyMessageRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Rpc_2eproto::scc_info_VerifyMessageRequest.base);
  return *internal_default_instance();
}


void VerifyMessageRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:Catalyst.Protocol.Rpc.Node.VerifyMessageRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  signature_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  publickey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && signingcontext_ != NULL) {
    delete signingcontext_;
  }
  signingcontext_ = NULL;
  _internal_metadata_.Clear();
}

bool VerifyMessageRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Catalyst.Protocol.Rpc.Node.VerifyMessageRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes signature = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_signature()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes publicKey = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_publickey()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes message = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_message()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Catalyst.Protocol.Common.SigningContext signingContext = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_signingcontext()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Catalyst.Protocol.Rpc.Node.VerifyMessageRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Catalyst.Protocol.Rpc.Node.VerifyMessageRequest)
  return false;
#undef DO_
}

void VerifyMessageRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Catalyst.Protocol.Rpc.Node.VerifyMessageRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes signature = 1;
  if (this->signature().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->signature(), output);
  }

  // bytes publicKey = 2;
  if (this->publickey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->publickey(), output);
  }

  // bytes message = 3;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->message(), output);
  }

  // .Catalyst.Protocol.Common.SigningContext signingContext = 4;
  if (this->has_signingcontext()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_signingcontext(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Catalyst.Protocol.Rpc.Node.VerifyMessageRequest)
}

::google::protobuf::uint8* VerifyMessageRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Catalyst.Protocol.Rpc.Node.VerifyMessageRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes signature = 1;
  if (this->signature().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->signature(), target);
  }

  // bytes publicKey = 2;
  if (this->publickey().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->publickey(), target);
  }

  // bytes message = 3;
  if (this->message().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->message(), target);
  }

  // .Catalyst.Protocol.Common.SigningContext signingContext = 4;
  if (this->has_signingcontext()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_signingcontext(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Catalyst.Protocol.Rpc.Node.VerifyMessageRequest)
  return target;
}

size_t VerifyMessageRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Catalyst.Protocol.Rpc.Node.VerifyMessageRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes signature = 1;
  if (this->signature().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->signature());
  }

  // bytes publicKey = 2;
  if (this->publickey().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->publickey());
  }

  // bytes message = 3;
  if (this->message().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->message());
  }

  // .Catalyst.Protocol.Common.SigningContext signingContext = 4;
  if (this->has_signingcontext()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *signingcontext_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void VerifyMessageRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Catalyst.Protocol.Rpc.Node.VerifyMessageRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const VerifyMessageRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const VerifyMessageRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Catalyst.Protocol.Rpc.Node.VerifyMessageRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Catalyst.Protocol.Rpc.Node.VerifyMessageRequest)
    MergeFrom(*source);
  }
}

void VerifyMessageRequest::MergeFrom(const VerifyMessageRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Catalyst.Protocol.Rpc.Node.VerifyMessageRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.signature().size() > 0) {

    signature_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.signature_);
  }
  if (from.publickey().size() > 0) {

    publickey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.publickey_);
  }
  if (from.message().size() > 0) {

    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  if (from.has_signingcontext()) {
    mutable_signingcontext()->::Catalyst::Protocol::Common::SigningContext::MergeFrom(from.signingcontext());
  }
}

void VerifyMessageRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Catalyst.Protocol.Rpc.Node.VerifyMessageRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VerifyMessageRequest::CopyFrom(const VerifyMessageRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Catalyst.Protocol.Rpc.Node.VerifyMessageRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VerifyMessageRequest::IsInitialized() const {
  return true;
}

void VerifyMessageRequest::Swap(VerifyMessageRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void VerifyMessageRequest::InternalSwap(VerifyMessageRequest* other) {
  using std::swap;
  signature_.Swap(&other->signature_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  publickey_.Swap(&other->publickey_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  message_.Swap(&other->message_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(signingcontext_, other->signingcontext_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata VerifyMessageRequest::GetMetadata() const {
  protobuf_Rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void VerifyMessageResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int VerifyMessageResponse::kIsSignedByKeyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

VerifyMessageResponse::VerifyMessageResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Rpc_2eproto::scc_info_VerifyMessageResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Catalyst.Protocol.Rpc.Node.VerifyMessageResponse)
}
VerifyMessageResponse::VerifyMessageResponse(const VerifyMessageResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  issignedbykey_ = from.issignedbykey_;
  // @@protoc_insertion_point(copy_constructor:Catalyst.Protocol.Rpc.Node.VerifyMessageResponse)
}

void VerifyMessageResponse::SharedCtor() {
  issignedbykey_ = false;
}

VerifyMessageResponse::~VerifyMessageResponse() {
  // @@protoc_insertion_point(destructor:Catalyst.Protocol.Rpc.Node.VerifyMessageResponse)
  SharedDtor();
}

void VerifyMessageResponse::SharedDtor() {
}

void VerifyMessageResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* VerifyMessageResponse::descriptor() {
  ::protobuf_Rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const VerifyMessageResponse& VerifyMessageResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Rpc_2eproto::scc_info_VerifyMessageResponse.base);
  return *internal_default_instance();
}


void VerifyMessageResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:Catalyst.Protocol.Rpc.Node.VerifyMessageResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  issignedbykey_ = false;
  _internal_metadata_.Clear();
}

bool VerifyMessageResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Catalyst.Protocol.Rpc.Node.VerifyMessageResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool isSignedByKey = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &issignedbykey_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Catalyst.Protocol.Rpc.Node.VerifyMessageResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Catalyst.Protocol.Rpc.Node.VerifyMessageResponse)
  return false;
#undef DO_
}

void VerifyMessageResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Catalyst.Protocol.Rpc.Node.VerifyMessageResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool isSignedByKey = 1;
  if (this->issignedbykey() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->issignedbykey(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Catalyst.Protocol.Rpc.Node.VerifyMessageResponse)
}

::google::protobuf::uint8* VerifyMessageResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Catalyst.Protocol.Rpc.Node.VerifyMessageResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool isSignedByKey = 1;
  if (this->issignedbykey() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->issignedbykey(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Catalyst.Protocol.Rpc.Node.VerifyMessageResponse)
  return target;
}

size_t VerifyMessageResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Catalyst.Protocol.Rpc.Node.VerifyMessageResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bool isSignedByKey = 1;
  if (this->issignedbykey() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void VerifyMessageResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Catalyst.Protocol.Rpc.Node.VerifyMessageResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const VerifyMessageResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const VerifyMessageResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Catalyst.Protocol.Rpc.Node.VerifyMessageResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Catalyst.Protocol.Rpc.Node.VerifyMessageResponse)
    MergeFrom(*source);
  }
}

void VerifyMessageResponse::MergeFrom(const VerifyMessageResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Catalyst.Protocol.Rpc.Node.VerifyMessageResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.issignedbykey() != 0) {
    set_issignedbykey(from.issignedbykey());
  }
}

void VerifyMessageResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Catalyst.Protocol.Rpc.Node.VerifyMessageResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VerifyMessageResponse::CopyFrom(const VerifyMessageResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Catalyst.Protocol.Rpc.Node.VerifyMessageResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VerifyMessageResponse::IsInitialized() const {
  return true;
}

void VerifyMessageResponse::Swap(VerifyMessageResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void VerifyMessageResponse::InternalSwap(VerifyMessageResponse* other) {
  using std::swap;
  swap(issignedbykey_, other->issignedbykey_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata VerifyMessageResponse::GetMetadata() const {
  protobuf_Rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ServiceStatusRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ServiceStatusRequest::kQueryFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ServiceStatusRequest::ServiceStatusRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Rpc_2eproto::scc_info_ServiceStatusRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Catalyst.Protocol.Rpc.Node.ServiceStatusRequest)
}
ServiceStatusRequest::ServiceStatusRequest(const ServiceStatusRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  query_ = from.query_;
  // @@protoc_insertion_point(copy_constructor:Catalyst.Protocol.Rpc.Node.ServiceStatusRequest)
}

void ServiceStatusRequest::SharedCtor() {
  query_ = false;
}

ServiceStatusRequest::~ServiceStatusRequest() {
  // @@protoc_insertion_point(destructor:Catalyst.Protocol.Rpc.Node.ServiceStatusRequest)
  SharedDtor();
}

void ServiceStatusRequest::SharedDtor() {
}

void ServiceStatusRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ServiceStatusRequest::descriptor() {
  ::protobuf_Rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ServiceStatusRequest& ServiceStatusRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Rpc_2eproto::scc_info_ServiceStatusRequest.base);
  return *internal_default_instance();
}


void ServiceStatusRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:Catalyst.Protocol.Rpc.Node.ServiceStatusRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  query_ = false;
  _internal_metadata_.Clear();
}

bool ServiceStatusRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Catalyst.Protocol.Rpc.Node.ServiceStatusRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool query = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &query_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Catalyst.Protocol.Rpc.Node.ServiceStatusRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Catalyst.Protocol.Rpc.Node.ServiceStatusRequest)
  return false;
#undef DO_
}

void ServiceStatusRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Catalyst.Protocol.Rpc.Node.ServiceStatusRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool query = 1;
  if (this->query() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->query(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Catalyst.Protocol.Rpc.Node.ServiceStatusRequest)
}

::google::protobuf::uint8* ServiceStatusRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Catalyst.Protocol.Rpc.Node.ServiceStatusRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool query = 1;
  if (this->query() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->query(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Catalyst.Protocol.Rpc.Node.ServiceStatusRequest)
  return target;
}

size_t ServiceStatusRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Catalyst.Protocol.Rpc.Node.ServiceStatusRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bool query = 1;
  if (this->query() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ServiceStatusRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Catalyst.Protocol.Rpc.Node.ServiceStatusRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ServiceStatusRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ServiceStatusRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Catalyst.Protocol.Rpc.Node.ServiceStatusRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Catalyst.Protocol.Rpc.Node.ServiceStatusRequest)
    MergeFrom(*source);
  }
}

void ServiceStatusRequest::MergeFrom(const ServiceStatusRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Catalyst.Protocol.Rpc.Node.ServiceStatusRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.query() != 0) {
    set_query(from.query());
  }
}

void ServiceStatusRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Catalyst.Protocol.Rpc.Node.ServiceStatusRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServiceStatusRequest::CopyFrom(const ServiceStatusRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Catalyst.Protocol.Rpc.Node.ServiceStatusRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServiceStatusRequest::IsInitialized() const {
  return true;
}

void ServiceStatusRequest::Swap(ServiceStatusRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ServiceStatusRequest::InternalSwap(ServiceStatusRequest* other) {
  using std::swap;
  swap(query_, other->query_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ServiceStatusRequest::GetMetadata() const {
  protobuf_Rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ServiceStatusResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ServiceStatusResponse::kQueryFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ServiceStatusResponse::ServiceStatusResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Rpc_2eproto::scc_info_ServiceStatusResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Catalyst.Protocol.Rpc.Node.ServiceStatusResponse)
}
ServiceStatusResponse::ServiceStatusResponse(const ServiceStatusResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  query_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.query().size() > 0) {
    query_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.query_);
  }
  // @@protoc_insertion_point(copy_constructor:Catalyst.Protocol.Rpc.Node.ServiceStatusResponse)
}

void ServiceStatusResponse::SharedCtor() {
  query_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

ServiceStatusResponse::~ServiceStatusResponse() {
  // @@protoc_insertion_point(destructor:Catalyst.Protocol.Rpc.Node.ServiceStatusResponse)
  SharedDtor();
}

void ServiceStatusResponse::SharedDtor() {
  query_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ServiceStatusResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ServiceStatusResponse::descriptor() {
  ::protobuf_Rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ServiceStatusResponse& ServiceStatusResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Rpc_2eproto::scc_info_ServiceStatusResponse.base);
  return *internal_default_instance();
}


void ServiceStatusResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:Catalyst.Protocol.Rpc.Node.ServiceStatusResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  query_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool ServiceStatusResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Catalyst.Protocol.Rpc.Node.ServiceStatusResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string query = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_query()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->query().data(), static_cast<int>(this->query().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Catalyst.Protocol.Rpc.Node.ServiceStatusResponse.query"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Catalyst.Protocol.Rpc.Node.ServiceStatusResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Catalyst.Protocol.Rpc.Node.ServiceStatusResponse)
  return false;
#undef DO_
}

void ServiceStatusResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Catalyst.Protocol.Rpc.Node.ServiceStatusResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string query = 1;
  if (this->query().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->query().data(), static_cast<int>(this->query().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Catalyst.Protocol.Rpc.Node.ServiceStatusResponse.query");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->query(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Catalyst.Protocol.Rpc.Node.ServiceStatusResponse)
}

::google::protobuf::uint8* ServiceStatusResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Catalyst.Protocol.Rpc.Node.ServiceStatusResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string query = 1;
  if (this->query().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->query().data(), static_cast<int>(this->query().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Catalyst.Protocol.Rpc.Node.ServiceStatusResponse.query");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->query(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Catalyst.Protocol.Rpc.Node.ServiceStatusResponse)
  return target;
}

size_t ServiceStatusResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Catalyst.Protocol.Rpc.Node.ServiceStatusResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string query = 1;
  if (this->query().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->query());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ServiceStatusResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Catalyst.Protocol.Rpc.Node.ServiceStatusResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ServiceStatusResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ServiceStatusResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Catalyst.Protocol.Rpc.Node.ServiceStatusResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Catalyst.Protocol.Rpc.Node.ServiceStatusResponse)
    MergeFrom(*source);
  }
}

void ServiceStatusResponse::MergeFrom(const ServiceStatusResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Catalyst.Protocol.Rpc.Node.ServiceStatusResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.query().size() > 0) {

    query_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.query_);
  }
}

void ServiceStatusResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Catalyst.Protocol.Rpc.Node.ServiceStatusResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServiceStatusResponse::CopyFrom(const ServiceStatusResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Catalyst.Protocol.Rpc.Node.ServiceStatusResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServiceStatusResponse::IsInitialized() const {
  return true;
}

void ServiceStatusResponse::Swap(ServiceStatusResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ServiceStatusResponse::InternalSwap(ServiceStatusResponse* other) {
  using std::swap;
  query_.Swap(&other->query_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ServiceStatusResponse::GetMetadata() const {
  protobuf_Rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AddFileToDfsRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AddFileToDfsRequest::kFileSizeFieldNumber;
const int AddFileToDfsRequest::kFileNameFieldNumber;
const int AddFileToDfsRequest::kNodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AddFileToDfsRequest::AddFileToDfsRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Rpc_2eproto::scc_info_AddFileToDfsRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Catalyst.Protocol.Rpc.Node.AddFileToDfsRequest)
}
AddFileToDfsRequest::AddFileToDfsRequest(const AddFileToDfsRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  filename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.filename().size() > 0) {
    filename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filename_);
  }
  node_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.node().size() > 0) {
    node_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.node_);
  }
  filesize_ = from.filesize_;
  // @@protoc_insertion_point(copy_constructor:Catalyst.Protocol.Rpc.Node.AddFileToDfsRequest)
}

void AddFileToDfsRequest::SharedCtor() {
  filename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  node_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  filesize_ = GOOGLE_ULONGLONG(0);
}

AddFileToDfsRequest::~AddFileToDfsRequest() {
  // @@protoc_insertion_point(destructor:Catalyst.Protocol.Rpc.Node.AddFileToDfsRequest)
  SharedDtor();
}

void AddFileToDfsRequest::SharedDtor() {
  filename_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  node_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void AddFileToDfsRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* AddFileToDfsRequest::descriptor() {
  ::protobuf_Rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AddFileToDfsRequest& AddFileToDfsRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Rpc_2eproto::scc_info_AddFileToDfsRequest.base);
  return *internal_default_instance();
}


void AddFileToDfsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:Catalyst.Protocol.Rpc.Node.AddFileToDfsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  filename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  node_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  filesize_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool AddFileToDfsRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Catalyst.Protocol.Rpc.Node.AddFileToDfsRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 fileSize = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &filesize_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string fileName = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_filename()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->filename().data(), static_cast<int>(this->filename().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Catalyst.Protocol.Rpc.Node.AddFileToDfsRequest.fileName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string node = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_node()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->node().data(), static_cast<int>(this->node().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Catalyst.Protocol.Rpc.Node.AddFileToDfsRequest.node"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Catalyst.Protocol.Rpc.Node.AddFileToDfsRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Catalyst.Protocol.Rpc.Node.AddFileToDfsRequest)
  return false;
#undef DO_
}

void AddFileToDfsRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Catalyst.Protocol.Rpc.Node.AddFileToDfsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 fileSize = 1;
  if (this->filesize() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->filesize(), output);
  }

  // string fileName = 2;
  if (this->filename().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->filename().data(), static_cast<int>(this->filename().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Catalyst.Protocol.Rpc.Node.AddFileToDfsRequest.fileName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->filename(), output);
  }

  // string node = 3;
  if (this->node().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->node().data(), static_cast<int>(this->node().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Catalyst.Protocol.Rpc.Node.AddFileToDfsRequest.node");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->node(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Catalyst.Protocol.Rpc.Node.AddFileToDfsRequest)
}

::google::protobuf::uint8* AddFileToDfsRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Catalyst.Protocol.Rpc.Node.AddFileToDfsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 fileSize = 1;
  if (this->filesize() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->filesize(), target);
  }

  // string fileName = 2;
  if (this->filename().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->filename().data(), static_cast<int>(this->filename().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Catalyst.Protocol.Rpc.Node.AddFileToDfsRequest.fileName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->filename(), target);
  }

  // string node = 3;
  if (this->node().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->node().data(), static_cast<int>(this->node().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Catalyst.Protocol.Rpc.Node.AddFileToDfsRequest.node");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->node(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Catalyst.Protocol.Rpc.Node.AddFileToDfsRequest)
  return target;
}

size_t AddFileToDfsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Catalyst.Protocol.Rpc.Node.AddFileToDfsRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string fileName = 2;
  if (this->filename().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->filename());
  }

  // string node = 3;
  if (this->node().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->node());
  }

  // uint64 fileSize = 1;
  if (this->filesize() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->filesize());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AddFileToDfsRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Catalyst.Protocol.Rpc.Node.AddFileToDfsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const AddFileToDfsRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AddFileToDfsRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Catalyst.Protocol.Rpc.Node.AddFileToDfsRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Catalyst.Protocol.Rpc.Node.AddFileToDfsRequest)
    MergeFrom(*source);
  }
}

void AddFileToDfsRequest::MergeFrom(const AddFileToDfsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Catalyst.Protocol.Rpc.Node.AddFileToDfsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.filename().size() > 0) {

    filename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filename_);
  }
  if (from.node().size() > 0) {

    node_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.node_);
  }
  if (from.filesize() != 0) {
    set_filesize(from.filesize());
  }
}

void AddFileToDfsRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Catalyst.Protocol.Rpc.Node.AddFileToDfsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddFileToDfsRequest::CopyFrom(const AddFileToDfsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Catalyst.Protocol.Rpc.Node.AddFileToDfsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddFileToDfsRequest::IsInitialized() const {
  return true;
}

void AddFileToDfsRequest::Swap(AddFileToDfsRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AddFileToDfsRequest::InternalSwap(AddFileToDfsRequest* other) {
  using std::swap;
  filename_.Swap(&other->filename_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  node_.Swap(&other->node_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(filesize_, other->filesize_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata AddFileToDfsRequest::GetMetadata() const {
  protobuf_Rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AddFileToDfsResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AddFileToDfsResponse::kResponseCodeFieldNumber;
const int AddFileToDfsResponse::kDfsHashFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AddFileToDfsResponse::AddFileToDfsResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Rpc_2eproto::scc_info_AddFileToDfsResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Catalyst.Protocol.Rpc.Node.AddFileToDfsResponse)
}
AddFileToDfsResponse::AddFileToDfsResponse(const AddFileToDfsResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  responsecode_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.responsecode().size() > 0) {
    responsecode_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.responsecode_);
  }
  dfshash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.dfshash().size() > 0) {
    dfshash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.dfshash_);
  }
  // @@protoc_insertion_point(copy_constructor:Catalyst.Protocol.Rpc.Node.AddFileToDfsResponse)
}

void AddFileToDfsResponse::SharedCtor() {
  responsecode_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  dfshash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

AddFileToDfsResponse::~AddFileToDfsResponse() {
  // @@protoc_insertion_point(destructor:Catalyst.Protocol.Rpc.Node.AddFileToDfsResponse)
  SharedDtor();
}

void AddFileToDfsResponse::SharedDtor() {
  responsecode_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  dfshash_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void AddFileToDfsResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* AddFileToDfsResponse::descriptor() {
  ::protobuf_Rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AddFileToDfsResponse& AddFileToDfsResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Rpc_2eproto::scc_info_AddFileToDfsResponse.base);
  return *internal_default_instance();
}


void AddFileToDfsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:Catalyst.Protocol.Rpc.Node.AddFileToDfsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  responsecode_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  dfshash_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool AddFileToDfsResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Catalyst.Protocol.Rpc.Node.AddFileToDfsResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes responseCode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_responsecode()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string dfsHash = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_dfshash()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->dfshash().data(), static_cast<int>(this->dfshash().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Catalyst.Protocol.Rpc.Node.AddFileToDfsResponse.dfsHash"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Catalyst.Protocol.Rpc.Node.AddFileToDfsResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Catalyst.Protocol.Rpc.Node.AddFileToDfsResponse)
  return false;
#undef DO_
}

void AddFileToDfsResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Catalyst.Protocol.Rpc.Node.AddFileToDfsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes responseCode = 1;
  if (this->responsecode().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->responsecode(), output);
  }

  // string dfsHash = 2;
  if (this->dfshash().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->dfshash().data(), static_cast<int>(this->dfshash().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Catalyst.Protocol.Rpc.Node.AddFileToDfsResponse.dfsHash");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->dfshash(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Catalyst.Protocol.Rpc.Node.AddFileToDfsResponse)
}

::google::protobuf::uint8* AddFileToDfsResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Catalyst.Protocol.Rpc.Node.AddFileToDfsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes responseCode = 1;
  if (this->responsecode().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->responsecode(), target);
  }

  // string dfsHash = 2;
  if (this->dfshash().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->dfshash().data(), static_cast<int>(this->dfshash().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Catalyst.Protocol.Rpc.Node.AddFileToDfsResponse.dfsHash");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->dfshash(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Catalyst.Protocol.Rpc.Node.AddFileToDfsResponse)
  return target;
}

size_t AddFileToDfsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Catalyst.Protocol.Rpc.Node.AddFileToDfsResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes responseCode = 1;
  if (this->responsecode().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->responsecode());
  }

  // string dfsHash = 2;
  if (this->dfshash().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->dfshash());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AddFileToDfsResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Catalyst.Protocol.Rpc.Node.AddFileToDfsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const AddFileToDfsResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AddFileToDfsResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Catalyst.Protocol.Rpc.Node.AddFileToDfsResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Catalyst.Protocol.Rpc.Node.AddFileToDfsResponse)
    MergeFrom(*source);
  }
}

void AddFileToDfsResponse::MergeFrom(const AddFileToDfsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Catalyst.Protocol.Rpc.Node.AddFileToDfsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.responsecode().size() > 0) {

    responsecode_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.responsecode_);
  }
  if (from.dfshash().size() > 0) {

    dfshash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.dfshash_);
  }
}

void AddFileToDfsResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Catalyst.Protocol.Rpc.Node.AddFileToDfsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddFileToDfsResponse::CopyFrom(const AddFileToDfsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Catalyst.Protocol.Rpc.Node.AddFileToDfsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddFileToDfsResponse::IsInitialized() const {
  return true;
}

void AddFileToDfsResponse::Swap(AddFileToDfsResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AddFileToDfsResponse::InternalSwap(AddFileToDfsResponse* other) {
  using std::swap;
  responsecode_.Swap(&other->responsecode_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  dfshash_.Swap(&other->dfshash_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata AddFileToDfsResponse::GetMetadata() const {
  protobuf_Rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TransferFileBytesRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TransferFileBytesRequest::kChunkIdFieldNumber;
const int TransferFileBytesRequest::kChunkBytesFieldNumber;
const int TransferFileBytesRequest::kCorrelationFileNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TransferFileBytesRequest::TransferFileBytesRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Rpc_2eproto::scc_info_TransferFileBytesRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Catalyst.Protocol.Rpc.Node.TransferFileBytesRequest)
}
TransferFileBytesRequest::TransferFileBytesRequest(const TransferFileBytesRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  chunkbytes_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.chunkbytes().size() > 0) {
    chunkbytes_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.chunkbytes_);
  }
  correlationfilename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.correlationfilename().size() > 0) {
    correlationfilename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.correlationfilename_);
  }
  chunkid_ = from.chunkid_;
  // @@protoc_insertion_point(copy_constructor:Catalyst.Protocol.Rpc.Node.TransferFileBytesRequest)
}

void TransferFileBytesRequest::SharedCtor() {
  chunkbytes_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  correlationfilename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  chunkid_ = 0u;
}

TransferFileBytesRequest::~TransferFileBytesRequest() {
  // @@protoc_insertion_point(destructor:Catalyst.Protocol.Rpc.Node.TransferFileBytesRequest)
  SharedDtor();
}

void TransferFileBytesRequest::SharedDtor() {
  chunkbytes_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  correlationfilename_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TransferFileBytesRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* TransferFileBytesRequest::descriptor() {
  ::protobuf_Rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TransferFileBytesRequest& TransferFileBytesRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Rpc_2eproto::scc_info_TransferFileBytesRequest.base);
  return *internal_default_instance();
}


void TransferFileBytesRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:Catalyst.Protocol.Rpc.Node.TransferFileBytesRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  chunkbytes_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  correlationfilename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  chunkid_ = 0u;
  _internal_metadata_.Clear();
}

bool TransferFileBytesRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Catalyst.Protocol.Rpc.Node.TransferFileBytesRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 chunkId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &chunkid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes chunkBytes = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_chunkbytes()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes correlationFileName = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_correlationfilename()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Catalyst.Protocol.Rpc.Node.TransferFileBytesRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Catalyst.Protocol.Rpc.Node.TransferFileBytesRequest)
  return false;
#undef DO_
}

void TransferFileBytesRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Catalyst.Protocol.Rpc.Node.TransferFileBytesRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 chunkId = 1;
  if (this->chunkid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->chunkid(), output);
  }

  // bytes chunkBytes = 2;
  if (this->chunkbytes().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->chunkbytes(), output);
  }

  // bytes correlationFileName = 3;
  if (this->correlationfilename().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->correlationfilename(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Catalyst.Protocol.Rpc.Node.TransferFileBytesRequest)
}

::google::protobuf::uint8* TransferFileBytesRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Catalyst.Protocol.Rpc.Node.TransferFileBytesRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 chunkId = 1;
  if (this->chunkid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->chunkid(), target);
  }

  // bytes chunkBytes = 2;
  if (this->chunkbytes().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->chunkbytes(), target);
  }

  // bytes correlationFileName = 3;
  if (this->correlationfilename().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->correlationfilename(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Catalyst.Protocol.Rpc.Node.TransferFileBytesRequest)
  return target;
}

size_t TransferFileBytesRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Catalyst.Protocol.Rpc.Node.TransferFileBytesRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes chunkBytes = 2;
  if (this->chunkbytes().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->chunkbytes());
  }

  // bytes correlationFileName = 3;
  if (this->correlationfilename().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->correlationfilename());
  }

  // uint32 chunkId = 1;
  if (this->chunkid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->chunkid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TransferFileBytesRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Catalyst.Protocol.Rpc.Node.TransferFileBytesRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const TransferFileBytesRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TransferFileBytesRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Catalyst.Protocol.Rpc.Node.TransferFileBytesRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Catalyst.Protocol.Rpc.Node.TransferFileBytesRequest)
    MergeFrom(*source);
  }
}

void TransferFileBytesRequest::MergeFrom(const TransferFileBytesRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Catalyst.Protocol.Rpc.Node.TransferFileBytesRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.chunkbytes().size() > 0) {

    chunkbytes_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.chunkbytes_);
  }
  if (from.correlationfilename().size() > 0) {

    correlationfilename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.correlationfilename_);
  }
  if (from.chunkid() != 0) {
    set_chunkid(from.chunkid());
  }
}

void TransferFileBytesRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Catalyst.Protocol.Rpc.Node.TransferFileBytesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TransferFileBytesRequest::CopyFrom(const TransferFileBytesRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Catalyst.Protocol.Rpc.Node.TransferFileBytesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TransferFileBytesRequest::IsInitialized() const {
  return true;
}

void TransferFileBytesRequest::Swap(TransferFileBytesRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TransferFileBytesRequest::InternalSwap(TransferFileBytesRequest* other) {
  using std::swap;
  chunkbytes_.Swap(&other->chunkbytes_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  correlationfilename_.Swap(&other->correlationfilename_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(chunkid_, other->chunkid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata TransferFileBytesRequest::GetMetadata() const {
  protobuf_Rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TransferFileBytesResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TransferFileBytesResponse::kResponseCodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TransferFileBytesResponse::TransferFileBytesResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Rpc_2eproto::scc_info_TransferFileBytesResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Catalyst.Protocol.Rpc.Node.TransferFileBytesResponse)
}
TransferFileBytesResponse::TransferFileBytesResponse(const TransferFileBytesResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  responsecode_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.responsecode().size() > 0) {
    responsecode_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.responsecode_);
  }
  // @@protoc_insertion_point(copy_constructor:Catalyst.Protocol.Rpc.Node.TransferFileBytesResponse)
}

void TransferFileBytesResponse::SharedCtor() {
  responsecode_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

TransferFileBytesResponse::~TransferFileBytesResponse() {
  // @@protoc_insertion_point(destructor:Catalyst.Protocol.Rpc.Node.TransferFileBytesResponse)
  SharedDtor();
}

void TransferFileBytesResponse::SharedDtor() {
  responsecode_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TransferFileBytesResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* TransferFileBytesResponse::descriptor() {
  ::protobuf_Rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TransferFileBytesResponse& TransferFileBytesResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Rpc_2eproto::scc_info_TransferFileBytesResponse.base);
  return *internal_default_instance();
}


void TransferFileBytesResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:Catalyst.Protocol.Rpc.Node.TransferFileBytesResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  responsecode_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool TransferFileBytesResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Catalyst.Protocol.Rpc.Node.TransferFileBytesResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes responseCode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_responsecode()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Catalyst.Protocol.Rpc.Node.TransferFileBytesResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Catalyst.Protocol.Rpc.Node.TransferFileBytesResponse)
  return false;
#undef DO_
}

void TransferFileBytesResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Catalyst.Protocol.Rpc.Node.TransferFileBytesResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes responseCode = 1;
  if (this->responsecode().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->responsecode(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Catalyst.Protocol.Rpc.Node.TransferFileBytesResponse)
}

::google::protobuf::uint8* TransferFileBytesResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Catalyst.Protocol.Rpc.Node.TransferFileBytesResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes responseCode = 1;
  if (this->responsecode().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->responsecode(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Catalyst.Protocol.Rpc.Node.TransferFileBytesResponse)
  return target;
}

size_t TransferFileBytesResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Catalyst.Protocol.Rpc.Node.TransferFileBytesResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes responseCode = 1;
  if (this->responsecode().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->responsecode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TransferFileBytesResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Catalyst.Protocol.Rpc.Node.TransferFileBytesResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const TransferFileBytesResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TransferFileBytesResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Catalyst.Protocol.Rpc.Node.TransferFileBytesResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Catalyst.Protocol.Rpc.Node.TransferFileBytesResponse)
    MergeFrom(*source);
  }
}

void TransferFileBytesResponse::MergeFrom(const TransferFileBytesResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Catalyst.Protocol.Rpc.Node.TransferFileBytesResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.responsecode().size() > 0) {

    responsecode_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.responsecode_);
  }
}

void TransferFileBytesResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Catalyst.Protocol.Rpc.Node.TransferFileBytesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TransferFileBytesResponse::CopyFrom(const TransferFileBytesResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Catalyst.Protocol.Rpc.Node.TransferFileBytesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TransferFileBytesResponse::IsInitialized() const {
  return true;
}

void TransferFileBytesResponse::Swap(TransferFileBytesResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TransferFileBytesResponse::InternalSwap(TransferFileBytesResponse* other) {
  using std::swap;
  responsecode_.Swap(&other->responsecode_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata TransferFileBytesResponse::GetMetadata() const {
  protobuf_Rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RemovePeerRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RemovePeerRequest::kPeerIpFieldNumber;
const int RemovePeerRequest::kPublicKeyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RemovePeerRequest::RemovePeerRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Rpc_2eproto::scc_info_RemovePeerRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Catalyst.Protocol.Rpc.Node.RemovePeerRequest)
}
RemovePeerRequest::RemovePeerRequest(const RemovePeerRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  peerip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.peerip().size() > 0) {
    peerip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.peerip_);
  }
  publickey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.publickey().size() > 0) {
    publickey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.publickey_);
  }
  // @@protoc_insertion_point(copy_constructor:Catalyst.Protocol.Rpc.Node.RemovePeerRequest)
}

void RemovePeerRequest::SharedCtor() {
  peerip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  publickey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

RemovePeerRequest::~RemovePeerRequest() {
  // @@protoc_insertion_point(destructor:Catalyst.Protocol.Rpc.Node.RemovePeerRequest)
  SharedDtor();
}

void RemovePeerRequest::SharedDtor() {
  peerip_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  publickey_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void RemovePeerRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RemovePeerRequest::descriptor() {
  ::protobuf_Rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RemovePeerRequest& RemovePeerRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Rpc_2eproto::scc_info_RemovePeerRequest.base);
  return *internal_default_instance();
}


void RemovePeerRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:Catalyst.Protocol.Rpc.Node.RemovePeerRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  peerip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  publickey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool RemovePeerRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Catalyst.Protocol.Rpc.Node.RemovePeerRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes peerIp = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_peerip()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes publicKey = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_publickey()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Catalyst.Protocol.Rpc.Node.RemovePeerRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Catalyst.Protocol.Rpc.Node.RemovePeerRequest)
  return false;
#undef DO_
}

void RemovePeerRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Catalyst.Protocol.Rpc.Node.RemovePeerRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes peerIp = 1;
  if (this->peerip().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->peerip(), output);
  }

  // bytes publicKey = 2;
  if (this->publickey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->publickey(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Catalyst.Protocol.Rpc.Node.RemovePeerRequest)
}

::google::protobuf::uint8* RemovePeerRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Catalyst.Protocol.Rpc.Node.RemovePeerRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes peerIp = 1;
  if (this->peerip().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->peerip(), target);
  }

  // bytes publicKey = 2;
  if (this->publickey().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->publickey(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Catalyst.Protocol.Rpc.Node.RemovePeerRequest)
  return target;
}

size_t RemovePeerRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Catalyst.Protocol.Rpc.Node.RemovePeerRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes peerIp = 1;
  if (this->peerip().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->peerip());
  }

  // bytes publicKey = 2;
  if (this->publickey().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->publickey());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RemovePeerRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Catalyst.Protocol.Rpc.Node.RemovePeerRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const RemovePeerRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RemovePeerRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Catalyst.Protocol.Rpc.Node.RemovePeerRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Catalyst.Protocol.Rpc.Node.RemovePeerRequest)
    MergeFrom(*source);
  }
}

void RemovePeerRequest::MergeFrom(const RemovePeerRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Catalyst.Protocol.Rpc.Node.RemovePeerRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.peerip().size() > 0) {

    peerip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.peerip_);
  }
  if (from.publickey().size() > 0) {

    publickey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.publickey_);
  }
}

void RemovePeerRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Catalyst.Protocol.Rpc.Node.RemovePeerRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RemovePeerRequest::CopyFrom(const RemovePeerRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Catalyst.Protocol.Rpc.Node.RemovePeerRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RemovePeerRequest::IsInitialized() const {
  return true;
}

void RemovePeerRequest::Swap(RemovePeerRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RemovePeerRequest::InternalSwap(RemovePeerRequest* other) {
  using std::swap;
  peerip_.Swap(&other->peerip_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  publickey_.Swap(&other->publickey_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RemovePeerRequest::GetMetadata() const {
  protobuf_Rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RemovePeerResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RemovePeerResponse::kDeletedCountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RemovePeerResponse::RemovePeerResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Rpc_2eproto::scc_info_RemovePeerResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Catalyst.Protocol.Rpc.Node.RemovePeerResponse)
}
RemovePeerResponse::RemovePeerResponse(const RemovePeerResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  deletedcount_ = from.deletedcount_;
  // @@protoc_insertion_point(copy_constructor:Catalyst.Protocol.Rpc.Node.RemovePeerResponse)
}

void RemovePeerResponse::SharedCtor() {
  deletedcount_ = 0u;
}

RemovePeerResponse::~RemovePeerResponse() {
  // @@protoc_insertion_point(destructor:Catalyst.Protocol.Rpc.Node.RemovePeerResponse)
  SharedDtor();
}

void RemovePeerResponse::SharedDtor() {
}

void RemovePeerResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RemovePeerResponse::descriptor() {
  ::protobuf_Rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RemovePeerResponse& RemovePeerResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Rpc_2eproto::scc_info_RemovePeerResponse.base);
  return *internal_default_instance();
}


void RemovePeerResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:Catalyst.Protocol.Rpc.Node.RemovePeerResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  deletedcount_ = 0u;
  _internal_metadata_.Clear();
}

bool RemovePeerResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Catalyst.Protocol.Rpc.Node.RemovePeerResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 deletedCount = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &deletedcount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Catalyst.Protocol.Rpc.Node.RemovePeerResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Catalyst.Protocol.Rpc.Node.RemovePeerResponse)
  return false;
#undef DO_
}

void RemovePeerResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Catalyst.Protocol.Rpc.Node.RemovePeerResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 deletedCount = 1;
  if (this->deletedcount() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->deletedcount(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Catalyst.Protocol.Rpc.Node.RemovePeerResponse)
}

::google::protobuf::uint8* RemovePeerResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Catalyst.Protocol.Rpc.Node.RemovePeerResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 deletedCount = 1;
  if (this->deletedcount() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->deletedcount(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Catalyst.Protocol.Rpc.Node.RemovePeerResponse)
  return target;
}

size_t RemovePeerResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Catalyst.Protocol.Rpc.Node.RemovePeerResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 deletedCount = 1;
  if (this->deletedcount() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->deletedcount());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RemovePeerResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Catalyst.Protocol.Rpc.Node.RemovePeerResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const RemovePeerResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RemovePeerResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Catalyst.Protocol.Rpc.Node.RemovePeerResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Catalyst.Protocol.Rpc.Node.RemovePeerResponse)
    MergeFrom(*source);
  }
}

void RemovePeerResponse::MergeFrom(const RemovePeerResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Catalyst.Protocol.Rpc.Node.RemovePeerResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.deletedcount() != 0) {
    set_deletedcount(from.deletedcount());
  }
}

void RemovePeerResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Catalyst.Protocol.Rpc.Node.RemovePeerResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RemovePeerResponse::CopyFrom(const RemovePeerResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Catalyst.Protocol.Rpc.Node.RemovePeerResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RemovePeerResponse::IsInitialized() const {
  return true;
}

void RemovePeerResponse::Swap(RemovePeerResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RemovePeerResponse::InternalSwap(RemovePeerResponse* other) {
  using std::swap;
  swap(deletedcount_, other->deletedcount_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RemovePeerResponse::GetMetadata() const {
  protobuf_Rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetPeerCountRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetPeerCountRequest::GetPeerCountRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Rpc_2eproto::scc_info_GetPeerCountRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Catalyst.Protocol.Rpc.Node.GetPeerCountRequest)
}
GetPeerCountRequest::GetPeerCountRequest(const GetPeerCountRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Catalyst.Protocol.Rpc.Node.GetPeerCountRequest)
}

void GetPeerCountRequest::SharedCtor() {
}

GetPeerCountRequest::~GetPeerCountRequest() {
  // @@protoc_insertion_point(destructor:Catalyst.Protocol.Rpc.Node.GetPeerCountRequest)
  SharedDtor();
}

void GetPeerCountRequest::SharedDtor() {
}

void GetPeerCountRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GetPeerCountRequest::descriptor() {
  ::protobuf_Rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetPeerCountRequest& GetPeerCountRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Rpc_2eproto::scc_info_GetPeerCountRequest.base);
  return *internal_default_instance();
}


void GetPeerCountRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:Catalyst.Protocol.Rpc.Node.GetPeerCountRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool GetPeerCountRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Catalyst.Protocol.Rpc.Node.GetPeerCountRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:Catalyst.Protocol.Rpc.Node.GetPeerCountRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Catalyst.Protocol.Rpc.Node.GetPeerCountRequest)
  return false;
#undef DO_
}

void GetPeerCountRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Catalyst.Protocol.Rpc.Node.GetPeerCountRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Catalyst.Protocol.Rpc.Node.GetPeerCountRequest)
}

::google::protobuf::uint8* GetPeerCountRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Catalyst.Protocol.Rpc.Node.GetPeerCountRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Catalyst.Protocol.Rpc.Node.GetPeerCountRequest)
  return target;
}

size_t GetPeerCountRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Catalyst.Protocol.Rpc.Node.GetPeerCountRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetPeerCountRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Catalyst.Protocol.Rpc.Node.GetPeerCountRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetPeerCountRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetPeerCountRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Catalyst.Protocol.Rpc.Node.GetPeerCountRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Catalyst.Protocol.Rpc.Node.GetPeerCountRequest)
    MergeFrom(*source);
  }
}

void GetPeerCountRequest::MergeFrom(const GetPeerCountRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Catalyst.Protocol.Rpc.Node.GetPeerCountRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void GetPeerCountRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Catalyst.Protocol.Rpc.Node.GetPeerCountRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetPeerCountRequest::CopyFrom(const GetPeerCountRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Catalyst.Protocol.Rpc.Node.GetPeerCountRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetPeerCountRequest::IsInitialized() const {
  return true;
}

void GetPeerCountRequest::Swap(GetPeerCountRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetPeerCountRequest::InternalSwap(GetPeerCountRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GetPeerCountRequest::GetMetadata() const {
  protobuf_Rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetPeerCountResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetPeerCountResponse::kPeerCountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetPeerCountResponse::GetPeerCountResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Rpc_2eproto::scc_info_GetPeerCountResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Catalyst.Protocol.Rpc.Node.GetPeerCountResponse)
}
GetPeerCountResponse::GetPeerCountResponse(const GetPeerCountResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  peercount_ = from.peercount_;
  // @@protoc_insertion_point(copy_constructor:Catalyst.Protocol.Rpc.Node.GetPeerCountResponse)
}

void GetPeerCountResponse::SharedCtor() {
  peercount_ = 0;
}

GetPeerCountResponse::~GetPeerCountResponse() {
  // @@protoc_insertion_point(destructor:Catalyst.Protocol.Rpc.Node.GetPeerCountResponse)
  SharedDtor();
}

void GetPeerCountResponse::SharedDtor() {
}

void GetPeerCountResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GetPeerCountResponse::descriptor() {
  ::protobuf_Rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetPeerCountResponse& GetPeerCountResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Rpc_2eproto::scc_info_GetPeerCountResponse.base);
  return *internal_default_instance();
}


void GetPeerCountResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:Catalyst.Protocol.Rpc.Node.GetPeerCountResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  peercount_ = 0;
  _internal_metadata_.Clear();
}

bool GetPeerCountResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Catalyst.Protocol.Rpc.Node.GetPeerCountResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 peerCount = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &peercount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Catalyst.Protocol.Rpc.Node.GetPeerCountResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Catalyst.Protocol.Rpc.Node.GetPeerCountResponse)
  return false;
#undef DO_
}

void GetPeerCountResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Catalyst.Protocol.Rpc.Node.GetPeerCountResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 peerCount = 1;
  if (this->peercount() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->peercount(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Catalyst.Protocol.Rpc.Node.GetPeerCountResponse)
}

::google::protobuf::uint8* GetPeerCountResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Catalyst.Protocol.Rpc.Node.GetPeerCountResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 peerCount = 1;
  if (this->peercount() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->peercount(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Catalyst.Protocol.Rpc.Node.GetPeerCountResponse)
  return target;
}

size_t GetPeerCountResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Catalyst.Protocol.Rpc.Node.GetPeerCountResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 peerCount = 1;
  if (this->peercount() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->peercount());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetPeerCountResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Catalyst.Protocol.Rpc.Node.GetPeerCountResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetPeerCountResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetPeerCountResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Catalyst.Protocol.Rpc.Node.GetPeerCountResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Catalyst.Protocol.Rpc.Node.GetPeerCountResponse)
    MergeFrom(*source);
  }
}

void GetPeerCountResponse::MergeFrom(const GetPeerCountResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Catalyst.Protocol.Rpc.Node.GetPeerCountResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.peercount() != 0) {
    set_peercount(from.peercount());
  }
}

void GetPeerCountResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Catalyst.Protocol.Rpc.Node.GetPeerCountResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetPeerCountResponse::CopyFrom(const GetPeerCountResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Catalyst.Protocol.Rpc.Node.GetPeerCountResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetPeerCountResponse::IsInitialized() const {
  return true;
}

void GetPeerCountResponse::Swap(GetPeerCountResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetPeerCountResponse::InternalSwap(GetPeerCountResponse* other) {
  using std::swap;
  swap(peercount_, other->peercount_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GetPeerCountResponse::GetMetadata() const {
  protobuf_Rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetFileFromDfsRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetFileFromDfsRequest::kDfsHashFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetFileFromDfsRequest::GetFileFromDfsRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Rpc_2eproto::scc_info_GetFileFromDfsRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Catalyst.Protocol.Rpc.Node.GetFileFromDfsRequest)
}
GetFileFromDfsRequest::GetFileFromDfsRequest(const GetFileFromDfsRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  dfshash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.dfshash().size() > 0) {
    dfshash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.dfshash_);
  }
  // @@protoc_insertion_point(copy_constructor:Catalyst.Protocol.Rpc.Node.GetFileFromDfsRequest)
}

void GetFileFromDfsRequest::SharedCtor() {
  dfshash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

GetFileFromDfsRequest::~GetFileFromDfsRequest() {
  // @@protoc_insertion_point(destructor:Catalyst.Protocol.Rpc.Node.GetFileFromDfsRequest)
  SharedDtor();
}

void GetFileFromDfsRequest::SharedDtor() {
  dfshash_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetFileFromDfsRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GetFileFromDfsRequest::descriptor() {
  ::protobuf_Rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetFileFromDfsRequest& GetFileFromDfsRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Rpc_2eproto::scc_info_GetFileFromDfsRequest.base);
  return *internal_default_instance();
}


void GetFileFromDfsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:Catalyst.Protocol.Rpc.Node.GetFileFromDfsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  dfshash_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool GetFileFromDfsRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Catalyst.Protocol.Rpc.Node.GetFileFromDfsRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string dfsHash = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_dfshash()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->dfshash().data(), static_cast<int>(this->dfshash().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Catalyst.Protocol.Rpc.Node.GetFileFromDfsRequest.dfsHash"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Catalyst.Protocol.Rpc.Node.GetFileFromDfsRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Catalyst.Protocol.Rpc.Node.GetFileFromDfsRequest)
  return false;
#undef DO_
}

void GetFileFromDfsRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Catalyst.Protocol.Rpc.Node.GetFileFromDfsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string dfsHash = 1;
  if (this->dfshash().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->dfshash().data(), static_cast<int>(this->dfshash().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Catalyst.Protocol.Rpc.Node.GetFileFromDfsRequest.dfsHash");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->dfshash(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Catalyst.Protocol.Rpc.Node.GetFileFromDfsRequest)
}

::google::protobuf::uint8* GetFileFromDfsRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Catalyst.Protocol.Rpc.Node.GetFileFromDfsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string dfsHash = 1;
  if (this->dfshash().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->dfshash().data(), static_cast<int>(this->dfshash().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Catalyst.Protocol.Rpc.Node.GetFileFromDfsRequest.dfsHash");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->dfshash(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Catalyst.Protocol.Rpc.Node.GetFileFromDfsRequest)
  return target;
}

size_t GetFileFromDfsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Catalyst.Protocol.Rpc.Node.GetFileFromDfsRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string dfsHash = 1;
  if (this->dfshash().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->dfshash());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetFileFromDfsRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Catalyst.Protocol.Rpc.Node.GetFileFromDfsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetFileFromDfsRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetFileFromDfsRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Catalyst.Protocol.Rpc.Node.GetFileFromDfsRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Catalyst.Protocol.Rpc.Node.GetFileFromDfsRequest)
    MergeFrom(*source);
  }
}

void GetFileFromDfsRequest::MergeFrom(const GetFileFromDfsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Catalyst.Protocol.Rpc.Node.GetFileFromDfsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.dfshash().size() > 0) {

    dfshash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.dfshash_);
  }
}

void GetFileFromDfsRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Catalyst.Protocol.Rpc.Node.GetFileFromDfsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetFileFromDfsRequest::CopyFrom(const GetFileFromDfsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Catalyst.Protocol.Rpc.Node.GetFileFromDfsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetFileFromDfsRequest::IsInitialized() const {
  return true;
}

void GetFileFromDfsRequest::Swap(GetFileFromDfsRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetFileFromDfsRequest::InternalSwap(GetFileFromDfsRequest* other) {
  using std::swap;
  dfshash_.Swap(&other->dfshash_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GetFileFromDfsRequest::GetMetadata() const {
  protobuf_Rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetFileFromDfsResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetFileFromDfsResponse::kFileSizeFieldNumber;
const int GetFileFromDfsResponse::kResponseCodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetFileFromDfsResponse::GetFileFromDfsResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Rpc_2eproto::scc_info_GetFileFromDfsResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Catalyst.Protocol.Rpc.Node.GetFileFromDfsResponse)
}
GetFileFromDfsResponse::GetFileFromDfsResponse(const GetFileFromDfsResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  responsecode_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.responsecode().size() > 0) {
    responsecode_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.responsecode_);
  }
  filesize_ = from.filesize_;
  // @@protoc_insertion_point(copy_constructor:Catalyst.Protocol.Rpc.Node.GetFileFromDfsResponse)
}

void GetFileFromDfsResponse::SharedCtor() {
  responsecode_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  filesize_ = GOOGLE_ULONGLONG(0);
}

GetFileFromDfsResponse::~GetFileFromDfsResponse() {
  // @@protoc_insertion_point(destructor:Catalyst.Protocol.Rpc.Node.GetFileFromDfsResponse)
  SharedDtor();
}

void GetFileFromDfsResponse::SharedDtor() {
  responsecode_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetFileFromDfsResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GetFileFromDfsResponse::descriptor() {
  ::protobuf_Rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetFileFromDfsResponse& GetFileFromDfsResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Rpc_2eproto::scc_info_GetFileFromDfsResponse.base);
  return *internal_default_instance();
}


void GetFileFromDfsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:Catalyst.Protocol.Rpc.Node.GetFileFromDfsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  responsecode_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  filesize_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool GetFileFromDfsResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Catalyst.Protocol.Rpc.Node.GetFileFromDfsResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 fileSize = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &filesize_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes responseCode = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_responsecode()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Catalyst.Protocol.Rpc.Node.GetFileFromDfsResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Catalyst.Protocol.Rpc.Node.GetFileFromDfsResponse)
  return false;
#undef DO_
}

void GetFileFromDfsResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Catalyst.Protocol.Rpc.Node.GetFileFromDfsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 fileSize = 1;
  if (this->filesize() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->filesize(), output);
  }

  // bytes responseCode = 2;
  if (this->responsecode().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->responsecode(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Catalyst.Protocol.Rpc.Node.GetFileFromDfsResponse)
}

::google::protobuf::uint8* GetFileFromDfsResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Catalyst.Protocol.Rpc.Node.GetFileFromDfsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 fileSize = 1;
  if (this->filesize() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->filesize(), target);
  }

  // bytes responseCode = 2;
  if (this->responsecode().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->responsecode(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Catalyst.Protocol.Rpc.Node.GetFileFromDfsResponse)
  return target;
}

size_t GetFileFromDfsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Catalyst.Protocol.Rpc.Node.GetFileFromDfsResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes responseCode = 2;
  if (this->responsecode().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->responsecode());
  }

  // uint64 fileSize = 1;
  if (this->filesize() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->filesize());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetFileFromDfsResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Catalyst.Protocol.Rpc.Node.GetFileFromDfsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetFileFromDfsResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetFileFromDfsResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Catalyst.Protocol.Rpc.Node.GetFileFromDfsResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Catalyst.Protocol.Rpc.Node.GetFileFromDfsResponse)
    MergeFrom(*source);
  }
}

void GetFileFromDfsResponse::MergeFrom(const GetFileFromDfsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Catalyst.Protocol.Rpc.Node.GetFileFromDfsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.responsecode().size() > 0) {

    responsecode_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.responsecode_);
  }
  if (from.filesize() != 0) {
    set_filesize(from.filesize());
  }
}

void GetFileFromDfsResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Catalyst.Protocol.Rpc.Node.GetFileFromDfsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetFileFromDfsResponse::CopyFrom(const GetFileFromDfsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Catalyst.Protocol.Rpc.Node.GetFileFromDfsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetFileFromDfsResponse::IsInitialized() const {
  return true;
}

void GetFileFromDfsResponse::Swap(GetFileFromDfsResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetFileFromDfsResponse::InternalSwap(GetFileFromDfsResponse* other) {
  using std::swap;
  responsecode_.Swap(&other->responsecode_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(filesize_, other->filesize_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GetFileFromDfsResponse::GetMetadata() const {
  protobuf_Rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SetPeerDataFolderRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetPeerDataFolderRequest::kDatafolderFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetPeerDataFolderRequest::SetPeerDataFolderRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Rpc_2eproto::scc_info_SetPeerDataFolderRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Catalyst.Protocol.Rpc.Node.SetPeerDataFolderRequest)
}
SetPeerDataFolderRequest::SetPeerDataFolderRequest(const SetPeerDataFolderRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  datafolder_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.datafolder().size() > 0) {
    datafolder_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.datafolder_);
  }
  // @@protoc_insertion_point(copy_constructor:Catalyst.Protocol.Rpc.Node.SetPeerDataFolderRequest)
}

void SetPeerDataFolderRequest::SharedCtor() {
  datafolder_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

SetPeerDataFolderRequest::~SetPeerDataFolderRequest() {
  // @@protoc_insertion_point(destructor:Catalyst.Protocol.Rpc.Node.SetPeerDataFolderRequest)
  SharedDtor();
}

void SetPeerDataFolderRequest::SharedDtor() {
  datafolder_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SetPeerDataFolderRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SetPeerDataFolderRequest::descriptor() {
  ::protobuf_Rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SetPeerDataFolderRequest& SetPeerDataFolderRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Rpc_2eproto::scc_info_SetPeerDataFolderRequest.base);
  return *internal_default_instance();
}


void SetPeerDataFolderRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:Catalyst.Protocol.Rpc.Node.SetPeerDataFolderRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  datafolder_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool SetPeerDataFolderRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Catalyst.Protocol.Rpc.Node.SetPeerDataFolderRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string datafolder = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_datafolder()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->datafolder().data(), static_cast<int>(this->datafolder().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Catalyst.Protocol.Rpc.Node.SetPeerDataFolderRequest.datafolder"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Catalyst.Protocol.Rpc.Node.SetPeerDataFolderRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Catalyst.Protocol.Rpc.Node.SetPeerDataFolderRequest)
  return false;
#undef DO_
}

void SetPeerDataFolderRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Catalyst.Protocol.Rpc.Node.SetPeerDataFolderRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string datafolder = 1;
  if (this->datafolder().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->datafolder().data(), static_cast<int>(this->datafolder().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Catalyst.Protocol.Rpc.Node.SetPeerDataFolderRequest.datafolder");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->datafolder(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Catalyst.Protocol.Rpc.Node.SetPeerDataFolderRequest)
}

::google::protobuf::uint8* SetPeerDataFolderRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Catalyst.Protocol.Rpc.Node.SetPeerDataFolderRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string datafolder = 1;
  if (this->datafolder().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->datafolder().data(), static_cast<int>(this->datafolder().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Catalyst.Protocol.Rpc.Node.SetPeerDataFolderRequest.datafolder");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->datafolder(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Catalyst.Protocol.Rpc.Node.SetPeerDataFolderRequest)
  return target;
}

size_t SetPeerDataFolderRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Catalyst.Protocol.Rpc.Node.SetPeerDataFolderRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string datafolder = 1;
  if (this->datafolder().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->datafolder());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SetPeerDataFolderRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Catalyst.Protocol.Rpc.Node.SetPeerDataFolderRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const SetPeerDataFolderRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SetPeerDataFolderRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Catalyst.Protocol.Rpc.Node.SetPeerDataFolderRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Catalyst.Protocol.Rpc.Node.SetPeerDataFolderRequest)
    MergeFrom(*source);
  }
}

void SetPeerDataFolderRequest::MergeFrom(const SetPeerDataFolderRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Catalyst.Protocol.Rpc.Node.SetPeerDataFolderRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.datafolder().size() > 0) {

    datafolder_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.datafolder_);
  }
}

void SetPeerDataFolderRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Catalyst.Protocol.Rpc.Node.SetPeerDataFolderRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetPeerDataFolderRequest::CopyFrom(const SetPeerDataFolderRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Catalyst.Protocol.Rpc.Node.SetPeerDataFolderRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetPeerDataFolderRequest::IsInitialized() const {
  return true;
}

void SetPeerDataFolderRequest::Swap(SetPeerDataFolderRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetPeerDataFolderRequest::InternalSwap(SetPeerDataFolderRequest* other) {
  using std::swap;
  datafolder_.Swap(&other->datafolder_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SetPeerDataFolderRequest::GetMetadata() const {
  protobuf_Rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SetPeerDataFolderResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetPeerDataFolderResponse::kQueryFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetPeerDataFolderResponse::SetPeerDataFolderResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Rpc_2eproto::scc_info_SetPeerDataFolderResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Catalyst.Protocol.Rpc.Node.SetPeerDataFolderResponse)
}
SetPeerDataFolderResponse::SetPeerDataFolderResponse(const SetPeerDataFolderResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  query_ = from.query_;
  // @@protoc_insertion_point(copy_constructor:Catalyst.Protocol.Rpc.Node.SetPeerDataFolderResponse)
}

void SetPeerDataFolderResponse::SharedCtor() {
  query_ = false;
}

SetPeerDataFolderResponse::~SetPeerDataFolderResponse() {
  // @@protoc_insertion_point(destructor:Catalyst.Protocol.Rpc.Node.SetPeerDataFolderResponse)
  SharedDtor();
}

void SetPeerDataFolderResponse::SharedDtor() {
}

void SetPeerDataFolderResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SetPeerDataFolderResponse::descriptor() {
  ::protobuf_Rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SetPeerDataFolderResponse& SetPeerDataFolderResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Rpc_2eproto::scc_info_SetPeerDataFolderResponse.base);
  return *internal_default_instance();
}


void SetPeerDataFolderResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:Catalyst.Protocol.Rpc.Node.SetPeerDataFolderResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  query_ = false;
  _internal_metadata_.Clear();
}

bool SetPeerDataFolderResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Catalyst.Protocol.Rpc.Node.SetPeerDataFolderResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool query = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &query_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Catalyst.Protocol.Rpc.Node.SetPeerDataFolderResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Catalyst.Protocol.Rpc.Node.SetPeerDataFolderResponse)
  return false;
#undef DO_
}

void SetPeerDataFolderResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Catalyst.Protocol.Rpc.Node.SetPeerDataFolderResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool query = 1;
  if (this->query() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->query(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Catalyst.Protocol.Rpc.Node.SetPeerDataFolderResponse)
}

::google::protobuf::uint8* SetPeerDataFolderResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Catalyst.Protocol.Rpc.Node.SetPeerDataFolderResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool query = 1;
  if (this->query() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->query(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Catalyst.Protocol.Rpc.Node.SetPeerDataFolderResponse)
  return target;
}

size_t SetPeerDataFolderResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Catalyst.Protocol.Rpc.Node.SetPeerDataFolderResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bool query = 1;
  if (this->query() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SetPeerDataFolderResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Catalyst.Protocol.Rpc.Node.SetPeerDataFolderResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const SetPeerDataFolderResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SetPeerDataFolderResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Catalyst.Protocol.Rpc.Node.SetPeerDataFolderResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Catalyst.Protocol.Rpc.Node.SetPeerDataFolderResponse)
    MergeFrom(*source);
  }
}

void SetPeerDataFolderResponse::MergeFrom(const SetPeerDataFolderResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Catalyst.Protocol.Rpc.Node.SetPeerDataFolderResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.query() != 0) {
    set_query(from.query());
  }
}

void SetPeerDataFolderResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Catalyst.Protocol.Rpc.Node.SetPeerDataFolderResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetPeerDataFolderResponse::CopyFrom(const SetPeerDataFolderResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Catalyst.Protocol.Rpc.Node.SetPeerDataFolderResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetPeerDataFolderResponse::IsInitialized() const {
  return true;
}

void SetPeerDataFolderResponse::Swap(SetPeerDataFolderResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetPeerDataFolderResponse::InternalSwap(SetPeerDataFolderResponse* other) {
  using std::swap;
  swap(query_, other->query_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SetPeerDataFolderResponse::GetMetadata() const {
  protobuf_Rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace Node
}  // namespace Rpc
}  // namespace Protocol
}  // namespace Catalyst
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Catalyst::Protocol::Rpc::Node::VersionRequest* Arena::CreateMaybeMessage< ::Catalyst::Protocol::Rpc::Node::VersionRequest >(Arena* arena) {
  return Arena::CreateInternal< ::Catalyst::Protocol::Rpc::Node::VersionRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Catalyst::Protocol::Rpc::Node::VersionResponse* Arena::CreateMaybeMessage< ::Catalyst::Protocol::Rpc::Node::VersionResponse >(Arena* arena) {
  return Arena::CreateInternal< ::Catalyst::Protocol::Rpc::Node::VersionResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Catalyst::Protocol::Rpc::Node::GetInfoRequest* Arena::CreateMaybeMessage< ::Catalyst::Protocol::Rpc::Node::GetInfoRequest >(Arena* arena) {
  return Arena::CreateInternal< ::Catalyst::Protocol::Rpc::Node::GetInfoRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Catalyst::Protocol::Rpc::Node::GetInfoResponse* Arena::CreateMaybeMessage< ::Catalyst::Protocol::Rpc::Node::GetInfoResponse >(Arena* arena) {
  return Arena::CreateInternal< ::Catalyst::Protocol::Rpc::Node::GetInfoResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Catalyst::Protocol::Rpc::Node::CreateWalletRequest* Arena::CreateMaybeMessage< ::Catalyst::Protocol::Rpc::Node::CreateWalletRequest >(Arena* arena) {
  return Arena::CreateInternal< ::Catalyst::Protocol::Rpc::Node::CreateWalletRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Catalyst::Protocol::Rpc::Node::CreateWalletResponse* Arena::CreateMaybeMessage< ::Catalyst::Protocol::Rpc::Node::CreateWalletResponse >(Arena* arena) {
  return Arena::CreateInternal< ::Catalyst::Protocol::Rpc::Node::CreateWalletResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Catalyst::Protocol::Rpc::Node::ListWalletRequest* Arena::CreateMaybeMessage< ::Catalyst::Protocol::Rpc::Node::ListWalletRequest >(Arena* arena) {
  return Arena::CreateInternal< ::Catalyst::Protocol::Rpc::Node::ListWalletRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Catalyst::Protocol::Rpc::Node::ListWalletResponse* Arena::CreateMaybeMessage< ::Catalyst::Protocol::Rpc::Node::ListWalletResponse >(Arena* arena) {
  return Arena::CreateInternal< ::Catalyst::Protocol::Rpc::Node::ListWalletResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Catalyst::Protocol::Rpc::Node::CreateAddressRequest* Arena::CreateMaybeMessage< ::Catalyst::Protocol::Rpc::Node::CreateAddressRequest >(Arena* arena) {
  return Arena::CreateInternal< ::Catalyst::Protocol::Rpc::Node::CreateAddressRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Catalyst::Protocol::Rpc::Node::CreateAddressResponse* Arena::CreateMaybeMessage< ::Catalyst::Protocol::Rpc::Node::CreateAddressResponse >(Arena* arena) {
  return Arena::CreateInternal< ::Catalyst::Protocol::Rpc::Node::CreateAddressResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Catalyst::Protocol::Rpc::Node::GetAddressRequest* Arena::CreateMaybeMessage< ::Catalyst::Protocol::Rpc::Node::GetAddressRequest >(Arena* arena) {
  return Arena::CreateInternal< ::Catalyst::Protocol::Rpc::Node::GetAddressRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Catalyst::Protocol::Rpc::Node::GetAddressResponse* Arena::CreateMaybeMessage< ::Catalyst::Protocol::Rpc::Node::GetAddressResponse >(Arena* arena) {
  return Arena::CreateInternal< ::Catalyst::Protocol::Rpc::Node::GetAddressResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Catalyst::Protocol::Rpc::Node::ListAddressRequest* Arena::CreateMaybeMessage< ::Catalyst::Protocol::Rpc::Node::ListAddressRequest >(Arena* arena) {
  return Arena::CreateInternal< ::Catalyst::Protocol::Rpc::Node::ListAddressRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Catalyst::Protocol::Rpc::Node::ListAddressResponse* Arena::CreateMaybeMessage< ::Catalyst::Protocol::Rpc::Node::ListAddressResponse >(Arena* arena) {
  return Arena::CreateInternal< ::Catalyst::Protocol::Rpc::Node::ListAddressResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Catalyst::Protocol::Rpc::Node::ValidateAddressRequest* Arena::CreateMaybeMessage< ::Catalyst::Protocol::Rpc::Node::ValidateAddressRequest >(Arena* arena) {
  return Arena::CreateInternal< ::Catalyst::Protocol::Rpc::Node::ValidateAddressRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Catalyst::Protocol::Rpc::Node::ValidateAddressResponse* Arena::CreateMaybeMessage< ::Catalyst::Protocol::Rpc::Node::ValidateAddressResponse >(Arena* arena) {
  return Arena::CreateInternal< ::Catalyst::Protocol::Rpc::Node::ValidateAddressResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Catalyst::Protocol::Rpc::Node::GetBalanceRequest* Arena::CreateMaybeMessage< ::Catalyst::Protocol::Rpc::Node::GetBalanceRequest >(Arena* arena) {
  return Arena::CreateInternal< ::Catalyst::Protocol::Rpc::Node::GetBalanceRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Catalyst::Protocol::Rpc::Node::GetBalanceResponse* Arena::CreateMaybeMessage< ::Catalyst::Protocol::Rpc::Node::GetBalanceResponse >(Arena* arena) {
  return Arena::CreateInternal< ::Catalyst::Protocol::Rpc::Node::GetBalanceResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Catalyst::Protocol::Rpc::Node::CreateRawTransactionRequest* Arena::CreateMaybeMessage< ::Catalyst::Protocol::Rpc::Node::CreateRawTransactionRequest >(Arena* arena) {
  return Arena::CreateInternal< ::Catalyst::Protocol::Rpc::Node::CreateRawTransactionRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Catalyst::Protocol::Rpc::Node::CreateRawTransactionResponse* Arena::CreateMaybeMessage< ::Catalyst::Protocol::Rpc::Node::CreateRawTransactionResponse >(Arena* arena) {
  return Arena::CreateInternal< ::Catalyst::Protocol::Rpc::Node::CreateRawTransactionResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Catalyst::Protocol::Rpc::Node::SignRawTransactionRequest* Arena::CreateMaybeMessage< ::Catalyst::Protocol::Rpc::Node::SignRawTransactionRequest >(Arena* arena) {
  return Arena::CreateInternal< ::Catalyst::Protocol::Rpc::Node::SignRawTransactionRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Catalyst::Protocol::Rpc::Node::SignRawTransactionResponse* Arena::CreateMaybeMessage< ::Catalyst::Protocol::Rpc::Node::SignRawTransactionResponse >(Arena* arena) {
  return Arena::CreateInternal< ::Catalyst::Protocol::Rpc::Node::SignRawTransactionResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Catalyst::Protocol::Rpc::Node::DecodeRawTransactionRequest* Arena::CreateMaybeMessage< ::Catalyst::Protocol::Rpc::Node::DecodeRawTransactionRequest >(Arena* arena) {
  return Arena::CreateInternal< ::Catalyst::Protocol::Rpc::Node::DecodeRawTransactionRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Catalyst::Protocol::Rpc::Node::DecodeRawTransactionResponse* Arena::CreateMaybeMessage< ::Catalyst::Protocol::Rpc::Node::DecodeRawTransactionResponse >(Arena* arena) {
  return Arena::CreateInternal< ::Catalyst::Protocol::Rpc::Node::DecodeRawTransactionResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Catalyst::Protocol::Rpc::Node::BroadcastRawTransactionRequest* Arena::CreateMaybeMessage< ::Catalyst::Protocol::Rpc::Node::BroadcastRawTransactionRequest >(Arena* arena) {
  return Arena::CreateInternal< ::Catalyst::Protocol::Rpc::Node::BroadcastRawTransactionRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Catalyst::Protocol::Rpc::Node::BroadcastRawTransactionResponse* Arena::CreateMaybeMessage< ::Catalyst::Protocol::Rpc::Node::BroadcastRawTransactionResponse >(Arena* arena) {
  return Arena::CreateInternal< ::Catalyst::Protocol::Rpc::Node::BroadcastRawTransactionResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Catalyst::Protocol::Rpc::Node::SendToRequest* Arena::CreateMaybeMessage< ::Catalyst::Protocol::Rpc::Node::SendToRequest >(Arena* arena) {
  return Arena::CreateInternal< ::Catalyst::Protocol::Rpc::Node::SendToRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Catalyst::Protocol::Rpc::Node::SendToResponse* Arena::CreateMaybeMessage< ::Catalyst::Protocol::Rpc::Node::SendToResponse >(Arena* arena) {
  return Arena::CreateInternal< ::Catalyst::Protocol::Rpc::Node::SendToResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Catalyst::Protocol::Rpc::Node::SendToFromRequest* Arena::CreateMaybeMessage< ::Catalyst::Protocol::Rpc::Node::SendToFromRequest >(Arena* arena) {
  return Arena::CreateInternal< ::Catalyst::Protocol::Rpc::Node::SendToFromRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Catalyst::Protocol::Rpc::Node::SendToFromResponse* Arena::CreateMaybeMessage< ::Catalyst::Protocol::Rpc::Node::SendToFromResponse >(Arena* arena) {
  return Arena::CreateInternal< ::Catalyst::Protocol::Rpc::Node::SendToFromResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Catalyst::Protocol::Rpc::Node::SendManyRequest* Arena::CreateMaybeMessage< ::Catalyst::Protocol::Rpc::Node::SendManyRequest >(Arena* arena) {
  return Arena::CreateInternal< ::Catalyst::Protocol::Rpc::Node::SendManyRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Catalyst::Protocol::Rpc::Node::SendManyResponse* Arena::CreateMaybeMessage< ::Catalyst::Protocol::Rpc::Node::SendManyResponse >(Arena* arena) {
  return Arena::CreateInternal< ::Catalyst::Protocol::Rpc::Node::SendManyResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Catalyst::Protocol::Rpc::Node::SendFromManyRequest* Arena::CreateMaybeMessage< ::Catalyst::Protocol::Rpc::Node::SendFromManyRequest >(Arena* arena) {
  return Arena::CreateInternal< ::Catalyst::Protocol::Rpc::Node::SendFromManyRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Catalyst::Protocol::Rpc::Node::SendFromManyResponse* Arena::CreateMaybeMessage< ::Catalyst::Protocol::Rpc::Node::SendFromManyResponse >(Arena* arena) {
  return Arena::CreateInternal< ::Catalyst::Protocol::Rpc::Node::SendFromManyResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Catalyst::Protocol::Rpc::Node::AddNodeRequest* Arena::CreateMaybeMessage< ::Catalyst::Protocol::Rpc::Node::AddNodeRequest >(Arena* arena) {
  return Arena::CreateInternal< ::Catalyst::Protocol::Rpc::Node::AddNodeRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Catalyst::Protocol::Rpc::Node::AddNodeResponse* Arena::CreateMaybeMessage< ::Catalyst::Protocol::Rpc::Node::AddNodeResponse >(Arena* arena) {
  return Arena::CreateInternal< ::Catalyst::Protocol::Rpc::Node::AddNodeResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Catalyst::Protocol::Rpc::Node::GetPeerListRequest* Arena::CreateMaybeMessage< ::Catalyst::Protocol::Rpc::Node::GetPeerListRequest >(Arena* arena) {
  return Arena::CreateInternal< ::Catalyst::Protocol::Rpc::Node::GetPeerListRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Catalyst::Protocol::Rpc::Node::GetPeerListResponse* Arena::CreateMaybeMessage< ::Catalyst::Protocol::Rpc::Node::GetPeerListResponse >(Arena* arena) {
  return Arena::CreateInternal< ::Catalyst::Protocol::Rpc::Node::GetPeerListResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Catalyst::Protocol::Rpc::Node::GetPeerReputationRequest* Arena::CreateMaybeMessage< ::Catalyst::Protocol::Rpc::Node::GetPeerReputationRequest >(Arena* arena) {
  return Arena::CreateInternal< ::Catalyst::Protocol::Rpc::Node::GetPeerReputationRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Catalyst::Protocol::Rpc::Node::GetPeerReputationResponse* Arena::CreateMaybeMessage< ::Catalyst::Protocol::Rpc::Node::GetPeerReputationResponse >(Arena* arena) {
  return Arena::CreateInternal< ::Catalyst::Protocol::Rpc::Node::GetPeerReputationResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Catalyst::Protocol::Rpc::Node::SetPeerBlackListRequest* Arena::CreateMaybeMessage< ::Catalyst::Protocol::Rpc::Node::SetPeerBlackListRequest >(Arena* arena) {
  return Arena::CreateInternal< ::Catalyst::Protocol::Rpc::Node::SetPeerBlackListRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Catalyst::Protocol::Rpc::Node::SetPeerBlackListResponse* Arena::CreateMaybeMessage< ::Catalyst::Protocol::Rpc::Node::SetPeerBlackListResponse >(Arena* arena) {
  return Arena::CreateInternal< ::Catalyst::Protocol::Rpc::Node::SetPeerBlackListResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Catalyst::Protocol::Rpc::Node::GetPeerInfoRequest* Arena::CreateMaybeMessage< ::Catalyst::Protocol::Rpc::Node::GetPeerInfoRequest >(Arena* arena) {
  return Arena::CreateInternal< ::Catalyst::Protocol::Rpc::Node::GetPeerInfoRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Catalyst::Protocol::Rpc::Node::GetPeerInfoResponse* Arena::CreateMaybeMessage< ::Catalyst::Protocol::Rpc::Node::GetPeerInfoResponse >(Arena* arena) {
  return Arena::CreateInternal< ::Catalyst::Protocol::Rpc::Node::GetPeerInfoResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Catalyst::Protocol::Rpc::Node::GetConnectionCountRequest* Arena::CreateMaybeMessage< ::Catalyst::Protocol::Rpc::Node::GetConnectionCountRequest >(Arena* arena) {
  return Arena::CreateInternal< ::Catalyst::Protocol::Rpc::Node::GetConnectionCountRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Catalyst::Protocol::Rpc::Node::GetConnectionCountResponse* Arena::CreateMaybeMessage< ::Catalyst::Protocol::Rpc::Node::GetConnectionCountResponse >(Arena* arena) {
  return Arena::CreateInternal< ::Catalyst::Protocol::Rpc::Node::GetConnectionCountResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Catalyst::Protocol::Rpc::Node::GetDeltaRequest* Arena::CreateMaybeMessage< ::Catalyst::Protocol::Rpc::Node::GetDeltaRequest >(Arena* arena) {
  return Arena::CreateInternal< ::Catalyst::Protocol::Rpc::Node::GetDeltaRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Catalyst::Protocol::Rpc::Node::GetDeltaResponse* Arena::CreateMaybeMessage< ::Catalyst::Protocol::Rpc::Node::GetDeltaResponse >(Arena* arena) {
  return Arena::CreateInternal< ::Catalyst::Protocol::Rpc::Node::GetDeltaResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Catalyst::Protocol::Rpc::Node::GetMempoolRequest* Arena::CreateMaybeMessage< ::Catalyst::Protocol::Rpc::Node::GetMempoolRequest >(Arena* arena) {
  return Arena::CreateInternal< ::Catalyst::Protocol::Rpc::Node::GetMempoolRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Catalyst::Protocol::Rpc::Node::GetMempoolResponse* Arena::CreateMaybeMessage< ::Catalyst::Protocol::Rpc::Node::GetMempoolResponse >(Arena* arena) {
  return Arena::CreateInternal< ::Catalyst::Protocol::Rpc::Node::GetMempoolResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Catalyst::Protocol::Rpc::Node::SignMessageRequest* Arena::CreateMaybeMessage< ::Catalyst::Protocol::Rpc::Node::SignMessageRequest >(Arena* arena) {
  return Arena::CreateInternal< ::Catalyst::Protocol::Rpc::Node::SignMessageRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Catalyst::Protocol::Rpc::Node::SignMessageResponse* Arena::CreateMaybeMessage< ::Catalyst::Protocol::Rpc::Node::SignMessageResponse >(Arena* arena) {
  return Arena::CreateInternal< ::Catalyst::Protocol::Rpc::Node::SignMessageResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Catalyst::Protocol::Rpc::Node::VerifyMessageRequest* Arena::CreateMaybeMessage< ::Catalyst::Protocol::Rpc::Node::VerifyMessageRequest >(Arena* arena) {
  return Arena::CreateInternal< ::Catalyst::Protocol::Rpc::Node::VerifyMessageRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Catalyst::Protocol::Rpc::Node::VerifyMessageResponse* Arena::CreateMaybeMessage< ::Catalyst::Protocol::Rpc::Node::VerifyMessageResponse >(Arena* arena) {
  return Arena::CreateInternal< ::Catalyst::Protocol::Rpc::Node::VerifyMessageResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Catalyst::Protocol::Rpc::Node::ServiceStatusRequest* Arena::CreateMaybeMessage< ::Catalyst::Protocol::Rpc::Node::ServiceStatusRequest >(Arena* arena) {
  return Arena::CreateInternal< ::Catalyst::Protocol::Rpc::Node::ServiceStatusRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Catalyst::Protocol::Rpc::Node::ServiceStatusResponse* Arena::CreateMaybeMessage< ::Catalyst::Protocol::Rpc::Node::ServiceStatusResponse >(Arena* arena) {
  return Arena::CreateInternal< ::Catalyst::Protocol::Rpc::Node::ServiceStatusResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Catalyst::Protocol::Rpc::Node::AddFileToDfsRequest* Arena::CreateMaybeMessage< ::Catalyst::Protocol::Rpc::Node::AddFileToDfsRequest >(Arena* arena) {
  return Arena::CreateInternal< ::Catalyst::Protocol::Rpc::Node::AddFileToDfsRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Catalyst::Protocol::Rpc::Node::AddFileToDfsResponse* Arena::CreateMaybeMessage< ::Catalyst::Protocol::Rpc::Node::AddFileToDfsResponse >(Arena* arena) {
  return Arena::CreateInternal< ::Catalyst::Protocol::Rpc::Node::AddFileToDfsResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Catalyst::Protocol::Rpc::Node::TransferFileBytesRequest* Arena::CreateMaybeMessage< ::Catalyst::Protocol::Rpc::Node::TransferFileBytesRequest >(Arena* arena) {
  return Arena::CreateInternal< ::Catalyst::Protocol::Rpc::Node::TransferFileBytesRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Catalyst::Protocol::Rpc::Node::TransferFileBytesResponse* Arena::CreateMaybeMessage< ::Catalyst::Protocol::Rpc::Node::TransferFileBytesResponse >(Arena* arena) {
  return Arena::CreateInternal< ::Catalyst::Protocol::Rpc::Node::TransferFileBytesResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Catalyst::Protocol::Rpc::Node::RemovePeerRequest* Arena::CreateMaybeMessage< ::Catalyst::Protocol::Rpc::Node::RemovePeerRequest >(Arena* arena) {
  return Arena::CreateInternal< ::Catalyst::Protocol::Rpc::Node::RemovePeerRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Catalyst::Protocol::Rpc::Node::RemovePeerResponse* Arena::CreateMaybeMessage< ::Catalyst::Protocol::Rpc::Node::RemovePeerResponse >(Arena* arena) {
  return Arena::CreateInternal< ::Catalyst::Protocol::Rpc::Node::RemovePeerResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Catalyst::Protocol::Rpc::Node::GetPeerCountRequest* Arena::CreateMaybeMessage< ::Catalyst::Protocol::Rpc::Node::GetPeerCountRequest >(Arena* arena) {
  return Arena::CreateInternal< ::Catalyst::Protocol::Rpc::Node::GetPeerCountRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Catalyst::Protocol::Rpc::Node::GetPeerCountResponse* Arena::CreateMaybeMessage< ::Catalyst::Protocol::Rpc::Node::GetPeerCountResponse >(Arena* arena) {
  return Arena::CreateInternal< ::Catalyst::Protocol::Rpc::Node::GetPeerCountResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Catalyst::Protocol::Rpc::Node::GetFileFromDfsRequest* Arena::CreateMaybeMessage< ::Catalyst::Protocol::Rpc::Node::GetFileFromDfsRequest >(Arena* arena) {
  return Arena::CreateInternal< ::Catalyst::Protocol::Rpc::Node::GetFileFromDfsRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Catalyst::Protocol::Rpc::Node::GetFileFromDfsResponse* Arena::CreateMaybeMessage< ::Catalyst::Protocol::Rpc::Node::GetFileFromDfsResponse >(Arena* arena) {
  return Arena::CreateInternal< ::Catalyst::Protocol::Rpc::Node::GetFileFromDfsResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Catalyst::Protocol::Rpc::Node::SetPeerDataFolderRequest* Arena::CreateMaybeMessage< ::Catalyst::Protocol::Rpc::Node::SetPeerDataFolderRequest >(Arena* arena) {
  return Arena::CreateInternal< ::Catalyst::Protocol::Rpc::Node::SetPeerDataFolderRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Catalyst::Protocol::Rpc::Node::SetPeerDataFolderResponse* Arena::CreateMaybeMessage< ::Catalyst::Protocol::Rpc::Node::SetPeerDataFolderResponse >(Arena* arena) {
  return Arena::CreateInternal< ::Catalyst::Protocol::Rpc::Node::SetPeerDataFolderResponse >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
